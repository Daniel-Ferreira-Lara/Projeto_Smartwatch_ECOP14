

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 06:41:29 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    87                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    88  0000                     
    89                           ; Version 2.20
    90                           ; Generated 12/02/2020 GMT
    91                           ; 
    92                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18F4520 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     
   124                           	psect	idataCOMRAM
   125  005679                     __pidataCOMRAM:
   126                           	callstack 0
   127                           
   128                           ;initializer for _temperatura
   129  005679  0001               	dw	1
   130                           
   131                           ;initializer for _freq
   132  00567B  02                 	db	2
   133                           
   134                           ;initializer for _musica
   135  00567C  01                 	db	1
   136                           
   137                           ;initializer for _change
   138  00567D  01                 	db	1
   139                           
   140                           	psect	idataBANK0
   141  0058FC                     __pidataBANK0:
   142                           	callstack 0
   143                           
   144                           ;initializer for LogoUnifei@F2429
   145  0058FC  01                 	db	1
   146  0058FD  03                 	db	3
   147  0058FE  03                 	db	3
   148  0058FF  0E                 	db	14
   149  005900  1C                 	db	28
   150  005901  18                 	db	24
   151  005902  08                 	db	8
   152  005903  08                 	db	8
   153  005904  11                 	db	17
   154  005905  1F                 	db	31
   155  005906  00                 	db	0
   156  005907  01                 	db	1
   157  005908  1F                 	db	31
   158  005909  12                 	db	18
   159  00590A  14                 	db	20
   160  00590B  1F                 	db	31
   161  00590C  10                 	db	16
   162  00590D  18                 	db	24
   163  00590E  18                 	db	24
   164  00590F  0E                 	db	14
   165  005910  07                 	db	7
   166  005911  03                 	db	3
   167  005912  02                 	db	2
   168  005913  02                 	db	2
   169  005914  08                 	db	8
   170  005915  18                 	db	24
   171  005916  1C                 	db	28
   172  005917  0E                 	db	14
   173  005918  03                 	db	3
   174  005919  03                 	db	3
   175  00591A  01                 	db	1
   176  00591B  00                 	db	0
   177  00591C  12                 	db	18
   178  00591D  14                 	db	20
   179  00591E  1F                 	db	31
   180  00591F  08                 	db	8
   181  005920  00                 	db	0
   182  005921  1F                 	db	31
   183  005922  11                 	db	17
   184  005923  00                 	db	0
   185  005924  02                 	db	2
   186  005925  03                 	db	3
   187  005926  07                 	db	7
   188  005927  0E                 	db	14
   189  005928  18                 	db	24
   190  005929  18                 	db	24
   191  00592A  10                 	db	16
   192  00592B  00                 	db	0
   193                           
   194                           	psect	mediumconst
   195  007DC4                     __pmediumconst:
   196                           	callstack 0
   197  007DC4  00                 	db	0
   198  007DC5                     _semana:
   199                           	callstack 0
   200  007DC5  44                 	db	68
   201  007DC6  6F                 	db	111
   202  007DC7  6D                 	db	109
   203  007DC8  53                 	db	83
   204  007DC9  65                 	db	101
   205  007DCA  67                 	db	103
   206  007DCB  54                 	db	84
   207  007DCC  65                 	db	101
   208  007DCD  72                 	db	114
   209  007DCE  51                 	db	81
   210  007DCF  75                 	db	117
   211  007DD0  61                 	db	97
   212  007DD1  51                 	db	81
   213  007DD2  75                 	db	117
   214  007DD3  69                 	db	105
   215  007DD4  53                 	db	83
   216  007DD5  65                 	db	101
   217  007DD6  78                 	db	120
   218  007DD7  53                 	db	83
   219  007DD8  61                 	db	97
   220  007DD9  62                 	db	98
   221  007DDA                     __end_of_semana:
   222                           	callstack 0
   223  007DDA                     _valor:
   224                           	callstack 0
   225  007DDA  3F                 	db	63
   226  007DDB  06                 	db	6
   227  007DDC  5B                 	db	91
   228  007DDD  4F                 	db	79
   229  007DDE  66                 	db	102
   230  007DDF  6D                 	db	109
   231  007DE0  7D                 	db	125
   232  007DE1  07                 	db	7
   233  007DE2  7F                 	db	127
   234  007DE3  6F                 	db	111
   235  007DE4  77                 	db	119
   236  007DE5  7C                 	db	124
   237  007DE6  39                 	db	57
   238  007DE7  5E                 	db	94
   239  007DE8  79                 	db	121
   240  007DE9  71                 	db	113
   241  007DEA                     __end_of_valor:
   242                           	callstack 0
   243  007DEA                     _radio:
   244                           	callstack 0
   245  007DEA  0373               	dw	883
   246  007DEC  0385               	dw	901
   247  007DEE  03C3               	dw	963
   248  007DF0  03ED               	dw	1005
   249  007DF2  03F8               	dw	1016
   250  007DF4  0432               	dw	1074
   251  007DF6  0454               	dw	1108
   252  007DF8  04A1               	dw	1185
   253  007DFA                     __end_of_radio:
   254                           	callstack 0
   255  007DFA  55                 	db	85
   256  007DFB  4C                 	db	76
   257  007DFC  44                 	db	68
   258  007DFD  52                 	db	82
   259  007DFE  53                 	db	83
   260  007DFF  58                 	db	88
   261  007E00  41                 	db	65
   262  007E01  42                 	db	66
   263  007E02  59                 	db	89
   264  007E03  73                 	db	115
   265  007E04                     __end_of_charKey:
   266                           	callstack 0
   267  0000                     _T0CON	set	4053
   268  0000                     _TMR0L	set	4054
   269  0000                     _TMR0H	set	4055
   270  0000                     _INTCON	set	4082
   271  0000                     _RCREG	set	4014
   272  0000                     _PIR1bits	set	3998
   273  0000                     _TXREG	set	4013
   274  0000                     _RCSTAbits	set	4011
   275  0000                     _TXSTAbits	set	4012
   276  0000                     _SPBRG	set	4015
   277  0000                     _T2CON	set	4042
   278  0000                     _CCP2CON	set	4026
   279  0000                     _CCPR2L	set	4027
   280  0000                     _PR2	set	4043
   281  0000                     _TRISE	set	3990
   282  0000                     _TRISD	set	3989
   283  0000                     _TRISC	set	3988
   284  0000                     _TRISB	set	3987
   285  0000                     _TRISA	set	3986
   286  0000                     _PORTE	set	3972
   287  0000                     _PORTD	set	3971
   288  0000                     _PORTC	set	3970
   289  0000                     _PORTB	set	3969
   290  0000                     _PORTA	set	3968
   291  0000                     _ADRESL	set	4035
   292  0000                     _ADRESH	set	4036
   293  0000                     _ADCON2	set	4032
   294  0000                     _ADCON1	set	4033
   295  0000                     _ADCON0	set	4034
   296  007E04                     STR_35:
   297  007E04  0A                 	db	10
   298  007E05  44                 	db	68	;'D'
   299  007E06  69                 	db	105	;'i'
   300  007E07  67                 	db	103	;'g'
   301  007E08  61                 	db	97	;'a'
   302  007E09  20                 	db	32
   303  007E0A  73                 	db	115	;'s'
   304  007E0B  65                 	db	101	;'e'
   305  007E0C  75                 	db	117	;'u'
   306  007E0D  20                 	db	32
   307  007E0E  6E                 	db	110	;'n'
   308  007E0F  75                 	db	117	;'u'
   309  007E10  6D                 	db	109	;'m'
   310  007E11  65                 	db	101	;'e'
   311  007E12  72                 	db	114	;'r'
   312  007E13  6F                 	db	111	;'o'
   313  007E14  20                 	db	32
   314  007E15  64                 	db	100	;'d'
   315  007E16  65                 	db	101	;'e'
   316  007E17  20                 	db	32
   317  007E18  6D                 	db	109	;'m'
   318  007E19  61                 	db	97	;'a'
   319  007E1A  74                 	db	116	;'t'
   320  007E1B  72                 	db	114	;'r'
   321  007E1C  69                 	db	105	;'i'
   322  007E1D  63                 	db	99	;'c'
   323  007E1E  75                 	db	117	;'u'
   324  007E1F  6C                 	db	108	;'l'
   325  007E20  61                 	db	97	;'a'
   326  007E21  3A                 	db	58	;':'
   327  007E22  20                 	db	32
   328  007E23  00                 	db	0
   329  007E24                     STR_5:
   330  007E24  49                 	db	73	;'I'
   331  007E25  6E                 	db	110	;'n'
   332  007E26  66                 	db	102	;'f'
   333  007E27  69                 	db	105	;'i'
   334  007E28  65                 	db	101	;'e'
   335  007E29  6C                 	db	108	;'l'
   336  007E2A  20                 	db	32
   337  007E2B  2D                 	db	45
   338  007E2C  20                 	db	32
   339  007E2D  4D                 	db	77	;'M'
   340  007E2E  61                 	db	97	;'a'
   341  007E2F  72                 	db	114	;'r'
   342  007E30  69                 	db	105	;'i'
   343  007E31  6C                 	db	108	;'l'
   344  007E32  69                 	db	105	;'i'
   345  007E33  61                 	db	97	;'a'
   346  007E34  20                 	db	32
   347  007E35  4D                 	db	77	;'M'
   348  007E36  65                 	db	101	;'e'
   349  007E37  6E                 	db	110	;'n'
   350  007E38  64                 	db	100	;'d'
   351  007E39  6F                 	db	111	;'o'
   352  007E3A  63                 	db	99	;'c'
   353  007E3B  61                 	db	97	;'a'
   354  007E3C  00                 	db	0
   355  007E3D                     STR_2:
   356  007E3D  41                 	db	65	;'A'
   357  007E3E  6E                 	db	110	;'n'
   358  007E3F  61                 	db	97	;'a'
   359  007E40  20                 	db	32
   360  007E41  4A                 	db	74	;'J'
   361  007E42  75                 	db	117	;'u'
   362  007E43  6C                 	db	108	;'l'
   363  007E44  69                 	db	105	;'i'
   364  007E45  61                 	db	97	;'a'
   365  007E46  20                 	db	32
   366  007E47  2D                 	db	45
   367  007E48  20                 	db	32
   368  007E49  4C                 	db	76	;'L'
   369  007E4A  6F                 	db	111	;'o'
   370  007E4B  73                 	db	115	;'s'
   371  007E4C  20                 	db	32
   372  007E4D  48                 	db	72	;'H'
   373  007E4E  65                 	db	101	;'e'
   374  007E4F  72                 	db	114	;'r'
   375  007E50  6D                 	db	109	;'m'
   376  007E51  61                 	db	97	;'a'
   377  007E52  6E                 	db	110	;'n'
   378  007E53  6F                 	db	111	;'o'
   379  007E54  73                 	db	115	;'s'
   380  007E55  00                 	db	0
   381  007E56                     STR_1:
   382  007E56  48                 	db	72	;'H'
   383  007E57  65                 	db	101	;'e'
   384  007E58  79                 	db	121	;'y'
   385  007E59  20                 	db	32
   386  007E5A  4A                 	db	74	;'J'
   387  007E5B  75                 	db	117	;'u'
   388  007E5C  64                 	db	100	;'d'
   389  007E5D  65                 	db	101	;'e'
   390  007E5E  20                 	db	32
   391  007E5F  2D                 	db	45
   392  007E60  20                 	db	32
   393  007E61  54                 	db	84	;'T'
   394  007E62  68                 	db	104	;'h'
   395  007E63  65                 	db	101	;'e'
   396  007E64  20                 	db	32
   397  007E65  42                 	db	66	;'B'
   398  007E66  65                 	db	101	;'e'
   399  007E67  65                 	db	101	;'e'
   400  007E68  74                 	db	116	;'t'
   401  007E69  77                 	db	119	;'w'
   402  007E6A  65                 	db	101	;'e'
   403  007E6B  73                 	db	115	;'s'
   404  007E6C  20                 	db	32
   405  007E6D  00                 	db	0
   406  007E6E                     STR_4:
   407  007E6E  41                 	db	65	;'A'
   408  007E6F  6E                 	db	110	;'n'
   409  007E70  64                 	db	100	;'d'
   410  007E71  65                 	db	101	;'e'
   411  007E72  69                 	db	105	;'i'
   412  007E73  20                 	db	32
   413  007E74  73                 	db	115	;'s'
   414  007E75  6F                 	db	111	;'o'
   415  007E76  20                 	db	32
   416  007E77  2D                 	db	45
   417  007E78  20                 	db	32
   418  007E79  4E                 	db	78	;'N'
   419  007E7A  61                 	db	97	;'a'
   420  007E7B  74                 	db	116	;'t'
   421  007E7C  69                 	db	105	;'i'
   422  007E7D  72                 	db	114	;'r'
   423  007E7E  75                 	db	117	;'u'
   424  007E7F  74                 	db	116	;'t'
   425  007E80  73                 	db	115	;'s'
   426  007E81  00                 	db	0
   427  007E82                     STR_3:
   428  007E82  43                 	db	67	;'C'
   429  007E83  72                 	db	114	;'r'
   430  007E84  61                 	db	97	;'a'
   431  007E85  7A                 	db	122	;'z'
   432  007E86  79                 	db	121	;'y'
   433  007E87  20                 	db	32
   434  007E88  2D                 	db	45
   435  007E89  20                 	db	32
   436  007E8A  41                 	db	65	;'A'
   437  007E8B  65                 	db	101	;'e'
   438  007E8C  72                 	db	114	;'r'
   439  007E8D  6F                 	db	111	;'o'
   440  007E8E  73                 	db	115	;'s'
   441  007E8F  6D                 	db	109	;'m'
   442  007E90  69                 	db	105	;'i'
   443  007E91  74                 	db	116	;'t'
   444  007E92  68                 	db	104	;'h'
   445  007E93  00                 	db	0
   446  007E94                     STR_24:
   447  007E94  20                 	db	32
   448  007E95  20                 	db	32
   449  007E96  20                 	db	32
   450  007E97  43                 	db	67	;'C'
   451  007E98  72                 	db	114	;'r'
   452  007E99  6F                 	db	111	;'o'
   453  007E9A  6E                 	db	110	;'n'
   454  007E9B  6F                 	db	111	;'o'
   455  007E9C  6D                 	db	109	;'m'
   456  007E9D  65                 	db	101	;'e'
   457  007E9E  74                 	db	116	;'t'
   458  007E9F  72                 	db	114	;'r'
   459  007EA0  6F                 	db	111	;'o'
   460  007EA1  20                 	db	32
   461  007EA2  20                 	db	32
   462  007EA3  20                 	db	32
   463  007EA4  00                 	db	0
   464  007EA5                     STR_33:
   465  007EA5  0A                 	db	10
   466  007EA6  44                 	db	68	;'D'
   467  007EA7  69                 	db	105	;'i'
   468  007EA8  67                 	db	103	;'g'
   469  007EA9  61                 	db	97	;'a'
   470  007EAA  20                 	db	32
   471  007EAB  73                 	db	115	;'s'
   472  007EAC  65                 	db	101	;'e'
   473  007EAD  75                 	db	117	;'u'
   474  007EAE  20                 	db	32
   475  007EAF  6E                 	db	110	;'n'
   476  007EB0  6F                 	db	111	;'o'
   477  007EB1  6D                 	db	109	;'m'
   478  007EB2  65                 	db	101	;'e'
   479  007EB3  3A                 	db	58	;':'
   480  007EB4  20                 	db	32
   481  007EB5  00                 	db	0
   482  007EB6                     STR_37:
   483  007EB6  41                 	db	65	;'A'
   484  007EB7  6C                 	db	108	;'l'
   485  007EB8  67                 	db	103	;'g'
   486  007EB9  6F                 	db	111	;'o'
   487  007EBA  20                 	db	32
   488  007EBB  64                 	db	100	;'d'
   489  007EBC  65                 	db	101	;'e'
   490  007EBD  75                 	db	117	;'u'
   491  007EBE  20                 	db	32
   492  007EBF  65                 	db	101	;'e'
   493  007EC0  72                 	db	114	;'r'
   494  007EC1  72                 	db	114	;'r'
   495  007EC2  61                 	db	97	;'a'
   496  007EC3  64                 	db	100	;'d'
   497  007EC4  6F                 	db	111	;'o'
   498  007EC5  21                 	db	33
   499  007EC6  00                 	db	0
   500  007EC7                     STR_36:
   501  007EC7  53                 	db	83	;'S'
   502  007EC8  65                 	db	101	;'e'
   503  007EC9  6A                 	db	106	;'j'
   504  007ECA  61                 	db	97	;'a'
   505  007ECB  20                 	db	32
   506  007ECC  62                 	db	98	;'b'
   507  007ECD  65                 	db	101	;'e'
   508  007ECE  6D                 	db	109	;'m'
   509  007ECF  20                 	db	32
   510  007ED0  76                 	db	118	;'v'
   511  007ED1  69                 	db	105	;'i'
   512  007ED2  6E                 	db	110	;'n'
   513  007ED3  64                 	db	100	;'d'
   514  007ED4  6F                 	db	111	;'o'
   515  007ED5  2F                 	db	47
   516  007ED6  61                 	db	97	;'a'
   517  007ED7  00                 	db	0
   518  007ED8                     STR_34:
   519  007ED8  44                 	db	68	;'D'
   520  007ED9  69                 	db	105	;'i'
   521  007EDA  67                 	db	103	;'g'
   522  007EDB  61                 	db	97	;'a'
   523  007EDC  20                 	db	32
   524  007EDD  61                 	db	97	;'a'
   525  007EDE  20                 	db	32
   526  007EDF  6D                 	db	109	;'m'
   527  007EE0  61                 	db	97	;'a'
   528  007EE1  74                 	db	116	;'t'
   529  007EE2  72                 	db	114	;'r'
   530  007EE3  69                 	db	105	;'i'
   531  007EE4  63                 	db	99	;'c'
   532  007EE5  75                 	db	117	;'u'
   533  007EE6  6C                 	db	108	;'l'
   534  007EE7  61                 	db	97	;'a'
   535  007EE8  00                 	db	0
   536  007EE9                     STR_17:
   537  007EE9  50                 	db	80	;'P'
   538  007EEA  72                 	db	114	;'r'
   539  007EEB  6F                 	db	111	;'o'
   540  007EEC  63                 	db	99	;'c'
   541  007EED  75                 	db	117	;'u'
   542  007EEE  72                 	db	114	;'r'
   543  007EEF  65                 	db	101	;'e'
   544  007EF0  20                 	db	32
   545  007EF1  6F                 	db	111	;'o'
   546  007EF2  20                 	db	32
   547  007EF3  6D                 	db	109	;'m'
   548  007EF4  65                 	db	101	;'e'
   549  007EF5  64                 	db	100	;'d'
   550  007EF6  69                 	db	105	;'i'
   551  007EF7  63                 	db	99	;'c'
   552  007EF8  6F                 	db	111	;'o'
   553  007EF9  00                 	db	0
   554  007EFA                     STR_29:
   555  007EFA  53                 	db	83	;'S'
   556  007EFB  6D                 	db	109	;'m'
   557  007EFC  61                 	db	97	;'a'
   558  007EFD  72                 	db	114	;'r'
   559  007EFE  74                 	db	116	;'t'
   560  007EFF  77                 	db	119	;'w'
   561  007F00  68                 	db	104	;'h'
   562  007F01  61                 	db	97	;'a'
   563  007F02  63                 	db	99	;'c'
   564  007F03  74                 	db	116	;'t'
   565  007F04  20                 	db	32
   566  007F05  76                 	db	118	;'v'
   567  007F06  69                 	db	105	;'i'
   568  007F07  73                 	db	115	;'s'
   569  007F08  74                 	db	116	;'t'
   570  007F09  6F                 	db	111	;'o'
   571  007F0A  00                 	db	0
   572  007F0B                     STR_6:
   573  007F0B  45                 	db	69	;'E'
   574  007F0C  70                 	db	112	;'p'
   575  007F0D  69                 	db	105	;'i'
   576  007F0E  74                 	db	116	;'t'
   577  007F0F  61                 	db	97	;'a'
   578  007F10  66                 	db	102	;'f'
   579  007F11  69                 	db	105	;'i'
   580  007F12  6F                 	db	111	;'o'
   581  007F13  20                 	db	32
   582  007F14  2D                 	db	45
   583  007F15  20                 	db	32
   584  007F16  54                 	db	84	;'T'
   585  007F17  69                 	db	105	;'i'
   586  007F18  74                 	db	116	;'t'
   587  007F19  61                 	db	97	;'a'
   588  007F1A  73                 	db	115	;'s'
   589  007F1B  00                 	db	0
   590  007F1C                     STR_16:
   591  007F1C  0A                 	db	10
   592  007F1D  44                 	db	68	;'D'
   593  007F1E  69                 	db	105	;'i'
   594  007F1F  67                 	db	103	;'g'
   595  007F20  69                 	db	105	;'i'
   596  007F21  74                 	db	116	;'t'
   597  007F22  65                 	db	101	;'e'
   598  007F23  20                 	db	32
   599  007F24  6F                 	db	111	;'o'
   600  007F25  20                 	db	32
   601  007F26  49                 	db	73	;'I'
   602  007F27  4D                 	db	77	;'M'
   603  007F28  43                 	db	67	;'C'
   604  007F29  3A                 	db	58	;':'
   605  007F2A  20                 	db	32
   606  007F2B  00                 	db	0
   607  007F2C                     STR_31:
   608  007F2C  20                 	db	32
   609  007F2D  43                 	db	67	;'C'
   610  007F2E  6F                 	db	111	;'o'
   611  007F2F  6E                 	db	110	;'n'
   612  007F30  66                 	db	102	;'f'
   613  007F31  69                 	db	105	;'i'
   614  007F32  67                 	db	103	;'g'
   615  007F33  75                 	db	117	;'u'
   616  007F34  72                 	db	114	;'r'
   617  007F35  61                 	db	97	;'a'
   618  007F36  64                 	db	100	;'d'
   619  007F37  6F                 	db	111	;'o'
   620  007F38  2E                 	db	46
   621  007F39  2E                 	db	46
   622  007F3A  2E                 	db	46
   623  007F3B  00                 	db	0
   624  007F3C                     STR_19:
   625  007F3C  4F                 	db	79	;'O'
   626  007F3D  6B                 	db	107	;'k'
   627  007F3E  2C                 	db	44
   628  007F3F  20                 	db	32
   629  007F40  53                 	db	83	;'S'
   630  007F41  61                 	db	97	;'a'
   631  007F42  75                 	db	117	;'u'
   632  007F43  64                 	db	100	;'d'
   633  007F44  65                 	db	101	;'e'
   634  007F45  20                 	db	32
   635  007F46  6F                 	db	111	;'o'
   636  007F47  74                 	db	116	;'t'
   637  007F48  69                 	db	105	;'i'
   638  007F49  6D                 	db	109	;'m'
   639  007F4A  61                 	db	97	;'a'
   640  007F4B  00                 	db	0
   641  007F4C                     STR_18:
   642  007F4C  53                 	db	83	;'S'
   643  007F4D  65                 	db	101	;'e'
   644  007F4E  20                 	db	32
   645  007F4F  61                 	db	97	;'a'
   646  007F50  6C                 	db	108	;'l'
   647  007F51  69                 	db	105	;'i'
   648  007F52  6D                 	db	109	;'m'
   649  007F53  65                 	db	101	;'e'
   650  007F54  6E                 	db	110	;'n'
   651  007F55  74                 	db	116	;'t'
   652  007F56  65                 	db	101	;'e'
   653  007F57  20                 	db	32
   654  007F58  62                 	db	98	;'b'
   655  007F59  65                 	db	101	;'e'
   656  007F5A  6D                 	db	109	;'m'
   657  007F5B  00                 	db	0
   658  007F5C                     STR_30:
   659  007F5C  45                 	db	69	;'E'
   660  007F5D  6C                 	db	108	;'l'
   661  007F5E  65                 	db	101	;'e'
   662  007F5F  20                 	db	32
   663  007F60  70                 	db	112	;'p'
   664  007F61  72                 	db	114	;'r'
   665  007F62  65                 	db	101	;'e'
   666  007F63  63                 	db	99	;'c'
   667  007F64  69                 	db	105	;'i'
   668  007F65  73                 	db	115	;'s'
   669  007F66  61                 	db	97	;'a'
   670  007F67  20                 	db	32
   671  007F68  73                 	db	115	;'s'
   672  007F69  65                 	db	101	;'e'
   673  007F6A  72                 	db	114	;'r'
   674  007F6B  00                 	db	0
   675  007F6C                     STR_28:
   676  007F6C  45                 	db	69	;'E'
   677  007F6D  73                 	db	115	;'s'
   678  007F6E  74                 	db	116	;'t'
   679  007F6F  65                 	db	101	;'e'
   680  007F70  20                 	db	32
   681  007F71  65                 	db	101	;'e'
   682  007F72  68                 	db	104	;'h'
   683  007F73  20                 	db	32
   684  007F74  6F                 	db	111	;'o'
   685  007F75  20                 	db	32
   686  007F76  6D                 	db	109	;'m'
   687  007F77  61                 	db	97	;'a'
   688  007F78  69                 	db	105	;'i'
   689  007F79  6F                 	db	111	;'o'
   690  007F7A  72                 	db	114	;'r'
   691  007F7B  00                 	db	0
   692  007F7C                     STR_32:
   693  007F7C  44                 	db	68	;'D'
   694  007F7D  69                 	db	105	;'i'
   695  007F7E  67                 	db	103	;'g'
   696  007F7F  61                 	db	97	;'a'
   697  007F80  20                 	db	32
   698  007F81  73                 	db	115	;'s'
   699  007F82  65                 	db	101	;'e'
   700  007F83  75                 	db	117	;'u'
   701  007F84  20                 	db	32
   702  007F85  6E                 	db	110	;'n'
   703  007F86  6F                 	db	111	;'o'
   704  007F87  6D                 	db	109	;'m'
   705  007F88  65                 	db	101	;'e'
   706  007F89  3A                 	db	58	;':'
   707  007F8A  00                 	db	0
   708  007F8B                     STR_38:
   709  007F8B  44                 	db	68	;'D'
   710  007F8C  65                 	db	101	;'e'
   711  007F8D  73                 	db	115	;'s'
   712  007F8E  6C                 	db	108	;'l'
   713  007F8F  69                 	db	105	;'i'
   714  007F90  67                 	db	103	;'g'
   715  007F91  61                 	db	97	;'a'
   716  007F92  6E                 	db	110	;'n'
   717  007F93  64                 	db	100	;'d'
   718  007F94  6F                 	db	111	;'o'
   719  007F95  2E                 	db	46
   720  007F96  2E                 	db	46
   721  007F97  2E                 	db	46
   722  007F98  00                 	db	0
   723  007F99                     STR_8:
   724  007F99  53                 	db	83	;'S'
   725  007F9A  75                 	db	117	;'u'
   726  007F9B  63                 	db	99	;'c'
   727  007F9C  65                 	db	101	;'e'
   728  007F9D  73                 	db	115	;'s'
   729  007F9E  73                 	db	115	;'s'
   730  007F9F  6F                 	db	111	;'o'
   731  007FA0  20                 	db	32
   732  007FA1  46                 	db	70	;'F'
   733  007FA2  4D                 	db	77	;'M'
   734  007FA3  20                 	db	32
   735  007FA4  00                 	db	0
   736  007FA5                     STR_9:
   737  007FA5  4D                 	db	77	;'M'
   738  007FA6  61                 	db	97	;'a'
   739  007FA7  69                 	db	105	;'i'
   740  007FA8  73                 	db	115	;'s'
   741  007FA9  20                 	db	32
   742  007FAA  6C                 	db	108	;'l'
   743  007FAB  65                 	db	101	;'e'
   744  007FAC  67                 	db	103	;'g'
   745  007FAD  61                 	db	97	;'a'
   746  007FAE  6C                 	db	108	;'l'
   747  007FAF  20                 	db	32
   748  007FB0  00                 	db	0
   749  007FB1                     STR_11:
   750  007FB1  52                 	db	82	;'R'
   751  007FB2  61                 	db	97	;'a'
   752  007FB3  64                 	db	100	;'d'
   753  007FB4  69                 	db	105	;'i'
   754  007FB5  6F                 	db	111	;'o'
   755  007FB6  20                 	db	32
   756  007FB7  50                 	db	80	;'P'
   757  007FB8  6F                 	db	111	;'o'
   758  007FB9  76                 	db	118	;'v'
   759  007FBA  6F                 	db	111	;'o'
   760  007FBB  20                 	db	32
   761  007FBC  00                 	db	0
   762  007FBD                     STR_13:
   763  007FBD  50                 	db	80	;'P'
   764  007FBE  6F                 	db	111	;'o'
   765  007FBF  6C                 	db	108	;'l'
   766  007FC0  69                 	db	105	;'i'
   767  007FC1  74                 	db	116	;'t'
   768  007FC2  69                 	db	105	;'i'
   769  007FC3  63                 	db	99	;'c'
   770  007FC4  61                 	db	97	;'a'
   771  007FC5  20                 	db	32
   772  007FC6  46                 	db	70	;'F'
   773  007FC7  4D                 	db	77	;'M'
   774  007FC8  00                 	db	0
   775  007FC9                     STR_14:
   776  007FC9  53                 	db	83	;'S'
   777  007FCA  65                 	db	101	;'e'
   778  007FCB  72                 	db	114	;'r'
   779  007FCC  74                 	db	116	;'t'
   780  007FCD  61                 	db	97	;'a'
   781  007FCE  6E                 	db	110	;'n'
   782  007FCF  65                 	db	101	;'e'
   783  007FD0  6A                 	db	106	;'j'
   784  007FD1  61                 	db	97	;'a'
   785  007FD2  20                 	db	32
   786  007FD3  00                 	db	0
   787  007FD4                     STR_7:
   788  007FD4  46                 	db	70	;'F'
   789  007FD5  4D                 	db	77	;'M'
   790  007FD6  20                 	db	32
   791  007FD7  43                 	db	67	;'C'
   792  007FD8  69                 	db	105	;'i'
   793  007FD9  64                 	db	100	;'d'
   794  007FDA  61                 	db	97	;'a'
   795  007FDB  64                 	db	100	;'d'
   796  007FDC  65                 	db	101	;'e'
   797  007FDD  20                 	db	32
   798  007FDE  00                 	db	0
   799  007FDF                     STR_10:
   800  007FDF  52                 	db	82	;'R'
   801  007FE0  61                 	db	97	;'a'
   802  007FE1  64                 	db	100	;'d'
   803  007FE2  69                 	db	105	;'i'
   804  007FE3  6F                 	db	111	;'o'
   805  007FE4  20                 	db	32
   806  007FE5  50                 	db	80	;'P'
   807  007FE6  61                 	db	97	;'a'
   808  007FE7  6E                 	db	110	;'n'
   809  007FE8  20                 	db	32
   810  007FE9  00                 	db	0
   811  007FEA                     STR_12:
   812  007FEA  52                 	db	82	;'R'
   813  007FEB  61                 	db	97	;'a'
   814  007FEC  64                 	db	100	;'d'
   815  007FED  69                 	db	105	;'i'
   816  007FEE  6F                 	db	111	;'o'
   817  007FEF  6E                 	db	110	;'n'
   818  007FF0  61                 	db	97	;'a'
   819  007FF1  6C                 	db	108	;'l'
   820  007FF2  20                 	db	32
   821  007FF3  00                 	db	0
   822  007FF4                     STR_25:
   823  007FF4  20                 	db	32
   824  007FF5  20                 	db	32
   825  007FF6  20                 	db	32
   826  007FF7  20                 	db	32
   827  007FF8  20                 	db	32
   828  007FF9  20                 	db	32
   829  007FFA  00                 	db	0
   830  007FFB                     STR_22:
   831  007FFB  43                 	db	67	;'C'
   832  007FFC  20                 	db	32
   833  007FFD  00                 	db	0
   834  007FFE  00                 	db	0	; dummy byte at the end
   835  0000                     
   836                           ; #config settings
   837                           
   838                           	psect	cinit
   839  005DDC                     __pcinit:
   840                           	callstack 0
   841  005DDC                     start_initialization:
   842                           	callstack 0
   843  005DDC                     __initialization:
   844                           	callstack 0
   845                           
   846                           ; Initialize objects allocated to BANK0 (48 bytes)
   847                           ; load TBLPTR registers with __pidataBANK0
   848  005DDC  0EFC               	movlw	low __pidataBANK0
   849  005DDE  6EF6               	movwf	tblptrl,c
   850  005DE0  0E58               	movlw	high __pidataBANK0
   851  005DE2  6EF7               	movwf	tblptrh,c
   852  005DE4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   853  005DE6  6EF8               	movwf	tblptru,c
   854  005DE8  EE00  F080         	lfsr	0,__pdataBANK0
   855  005DEC  EE10 F030          	lfsr	1,48
   856  005DF0                     copy_data0:
   857  005DF0  0009               	tblrd		*+
   858  005DF2  CFF5 FFEE          	movff	tablat,postinc0
   859  005DF6  50E5               	movf	postdec1,w,c
   860  005DF8  50E1               	movf	fsr1l,w,c
   861  005DFA  E1FA               	bnz	copy_data0
   862                           
   863                           ; Initialize objects allocated to COMRAM (5 bytes)
   864                           ; load TBLPTR registers with __pidataCOMRAM
   865  005DFC  0E79               	movlw	low __pidataCOMRAM
   866  005DFE  6EF6               	movwf	tblptrl,c
   867  005E00  0E56               	movlw	high __pidataCOMRAM
   868  005E02  6EF7               	movwf	tblptrh,c
   869  005E04  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   870  005E06  6EF8               	movwf	tblptru,c
   871  005E08  EE00  F077         	lfsr	0,__pdataCOMRAM
   872  005E0C  EE10 F005          	lfsr	1,5
   873  005E10                     copy_data1:
   874  005E10  0009               	tblrd		*+
   875  005E12  CFF5 FFEE          	movff	tablat,postinc0
   876  005E16  50E5               	movf	postdec1,w,c
   877  005E18  50E1               	movf	fsr1l,w,c
   878  005E1A  E1FA               	bnz	copy_data1
   879                           
   880                           ; Clear objects allocated to COMRAM (49 bytes)
   881  005E1C  EE00  F046         	lfsr	0,__pbssCOMRAM
   882  005E20  0E31               	movlw	49
   883  005E22                     clear_0:
   884  005E22  6AEE               	clrf	postinc0,c
   885  005E24  06E8               	decf	wreg,f,c
   886  005E26  E1FD               	bnz	clear_0
   887  005E28                     end_of_initialization:
   888                           	callstack 0
   889  005E28                     __end_of__initialization:
   890                           	callstack 0
   891  005E28  0E00               	movlw	low (__Lmediumconst shr (0+16))
   892  005E2A  6EF8               	movwf	tblptru,c
   893  005E2C  0100               	movlb	0
   894  005E2E  EF53  F039         	goto	_main	;jump to C main() function
   895                           
   896                           	psect	bssCOMRAM
   897  000046                     __pbssCOMRAM:
   898                           	callstack 0
   899  000046                     kpDebounce@oldRead:
   900                           	callstack 0
   901  000046                     	ds	2
   902  000048                     kpDebounce@newRead:
   903                           	callstack 0
   904  000048                     	ds	2
   905  00004A                     _keys:
   906                           	callstack 0
   907  00004A                     	ds	2
   908  00004C                     _v3:
   909                           	callstack 0
   910  00004C                     	ds	1
   911  00004D                     _v2:
   912                           	callstack 0
   913  00004D                     	ds	1
   914  00004E                     _v1:
   915                           	callstack 0
   916  00004E                     	ds	1
   917  00004F                     _v0:
   918                           	callstack 0
   919  00004F                     	ds	1
   920  000050                     _display:
   921                           	callstack 0
   922  000050                     	ds	1
   923  000051                     kpDebounce@tempo:
   924                           	callstack 0
   925  000051                     	ds	1
   926  000052                     _started:
   927                           	callstack 0
   928  000052                     	ds	1
   929  000053                     _tela:
   930                           	callstack 0
   931  000053                     	ds	1
   932  000054                     _som:
   933                           	callstack 0
   934  000054                     	ds	1
   935  000055                     _tempos:
   936                           	callstack 0
   937  000055                     	ds	1
   938  000056                     _crono:
   939                           	callstack 0
   940  000056                     	ds	1
   941  000057                     _matricula:
   942                           	callstack 0
   943  000057                     	ds	16
   944  000067                     _nome:
   945                           	callstack 0
   946  000067                     	ds	16
   947                           
   948                           	psect	dataCOMRAM
   949  000077                     __pdataCOMRAM:
   950                           	callstack 0
   951  000077                     _temperatura:
   952                           	callstack 0
   953  000077                     	ds	2
   954  000079                     _freq:
   955                           	callstack 0
   956  000079                     	ds	1
   957  00007A                     _musica:
   958                           	callstack 0
   959  00007A                     	ds	1
   960  00007B                     _change:
   961                           	callstack 0
   962  00007B                     	ds	1
   963                           
   964                           	psect	dataBANK0
   965  000080                     __pdataBANK0:
   966                           	callstack 0
   967  000080                     LogoUnifei@F2429:
   968                           	callstack 0
   969  000080                     	ds	48
   970                           
   971                           	psect	cstackCOMRAM
   972  000001                     __pcstackCOMRAM:
   973                           	callstack 0
   974  000001                     ?_adcRead:
   975                           	callstack 0
   976  000001                     ?_kpRead:
   977                           	callstack 0
   978  000001                     ?_digitalRead:
   979                           	callstack 0
   980  000001                     ?___lwdiv:
   981                           	callstack 0
   982  000001                     ?___aldiv:
   983                           	callstack 0
   984  000001                     serial_tx@val:
   985                           	callstack 0
   986  000001                     adcRead@channel:
   987                           	callstack 0
   988  000001                     digitalWrite@pin:
   989                           	callstack 0
   990  000001                     digitalRead@pin:
   991                           	callstack 0
   992  000001                     pinMode@pin:
   993                           	callstack 0
   994  000001                     delayMicro@a:
   995                           	callstack 0
   996  000001                     delayMili@a:
   997                           	callstack 0
   998  000001                     timerReset@tempo:
   999                           	callstack 0
  1000  000001                     atraso_ms@num:
  1001                           	callstack 0
  1002  000001                     ___lwdiv@dividend:
  1003                           	callstack 0
  1004  000001                     ___aldiv@dividend:
  1005                           	callstack 0
  1006                           
  1007                           ; 4 bytes @ 0x0
  1008  000001                     	ds	1
  1009  000002                     serial_tx_str@val:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x1
  1013  000002                     	ds	1
  1014  000003                     ??_digitalRead:
  1015  000003                     ??_delayMili:
  1016  000003                     adcRead@ADvalor:
  1017                           	callstack 0
  1018  000003                     digitalWrite@value:
  1019                           	callstack 0
  1020  000003                     pinMode@type:
  1021                           	callstack 0
  1022  000003                     timerReset@ciclos:
  1023                           	callstack 0
  1024  000003                     atraso_ms@i:
  1025                           	callstack 0
  1026  000003                     ___lwdiv@divisor:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x2
  1030  000003                     	ds	1
  1031  000004                     ??_serial_tx_str:
  1032  000004                     delayMili@i:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x3
  1036  000004                     	ds	1
  1037  000005                     ??_pinMode:
  1038  000005                     ??_digitalWrite:
  1039  000005                     atraso_ms@j:
  1040                           	callstack 0
  1041  000005                     ___lwdiv@quotient:
  1042                           	callstack 0
  1043  000005                     ___aldiv@divisor:
  1044                           	callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x4
  1047  000005                     	ds	1
  1048  000006                     serial_tx_str@i:
  1049                           	callstack 0
  1050  000006                     atraso_ms@k:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x5
  1054  000006                     	ds	1
  1055  000007                     i2c_write_bit@bit:
  1056                           	callstack 0
  1057  000007                     i2c_read_bit@bit:
  1058                           	callstack 0
  1059  000007                     ___lwdiv@counter:
  1060                           	callstack 0
  1061  000007                     rgbColor@led:
  1062                           	callstack 0
  1063  000007                     turnOn@led:
  1064                           	callstack 0
  1065  000007                     serial_rx@timeout:
  1066                           	callstack 0
  1067  000007                     soWrite@value:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x6
  1071  000007                     	ds	1
  1072  000008                     ?___lwmod:
  1073                           	callstack 0
  1074  000008                     i2cWriteByte@send_stop:
  1075                           	callstack 0
  1076  000008                     i2cReadByte@send_stop:
  1077                           	callstack 0
  1078  000008                     ___lwmod@dividend:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x7
  1082  000008                     	ds	1
  1083  000009                     ??_i2cReadByte:
  1084  000009                     i2cWriteByte@byte:
  1085                           	callstack 0
  1086  000009                     soWrite@i:
  1087                           	callstack 0
  1088  000009                     ___aldiv@counter:
  1089                           	callstack 0
  1090  000009                     serial_rx@to:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x8
  1094  000009                     	ds	1
  1095  00000A                     ??_kpDebounce:
  1096  00000A                     i2cWriteByte@send_start:
  1097                           	callstack 0
  1098  00000A                     i2cReadByte@nack:
  1099                           	callstack 0
  1100  00000A                     ___aldiv@sign:
  1101                           	callstack 0
  1102  00000A                     pushNibble@rs:
  1103                           	callstack 0
  1104  00000A                     pushByte@rs:
  1105                           	callstack 0
  1106  00000A                     ___lwmod@divisor:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x9
  1110  00000A                     	ds	1
  1111  00000B                     i2cWriteByte@bit:
  1112                           	callstack 0
  1113  00000B                     i2cReadByte@bit:
  1114                           	callstack 0
  1115  00000B                     ___aldiv@quotient:
  1116                           	callstack 0
  1117                           
  1118                           ; 4 bytes @ 0xA
  1119  00000B                     	ds	1
  1120  00000C                     ??_pushByte:
  1121  00000C                     pushNibble@value:
  1122                           	callstack 0
  1123  00000C                     ___lwmod@counter:
  1124                           	callstack 0
  1125                           
  1126                           ; 1 bytes @ 0xB
  1127  00000C                     	ds	1
  1128  00000D                     i2cReadByte@byte:
  1129                           	callstack 0
  1130  00000D                     pushByte@value:
  1131                           	callstack 0
  1132  00000D                     kpDebounce@i:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0xC
  1136  00000D                     	ds	1
  1137  00000E                     ?_dsReadData:
  1138                           	callstack 0
  1139  00000E                     lcdCommand@value:
  1140                           	callstack 0
  1141  00000E                     lcdChar@value:
  1142                           	callstack 0
  1143  00000E                     dsReadData@address:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0xD
  1147  00000E                     	ds	1
  1148  00000F                     ??_volume:
  1149  00000F                     lcdPosition@line:
  1150                           	callstack 0
  1151  00000F                     lcdString@msg:
  1152                           	callstack 0
  1153  00000F                     pwmFrequency@freq:
  1154                           	callstack 0
  1155  00000F                     LogoUnifei@logo:
  1156                           	callstack 0
  1157                           
  1158                           ; 48 bytes @ 0xE
  1159  00000F                     	ds	1
  1160  000010                     ??_dsReadData:
  1161                           
  1162                           ; 1 bytes @ 0xF
  1163  000010                     	ds	1
  1164  000011                     ??_lcdString:
  1165  000011                     dsReadData@result:
  1166                           	callstack 0
  1167  000011                     lcdPosition@col:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x10
  1171  000011                     	ds	2
  1172  000013                     ?___awdiv:
  1173                           	callstack 0
  1174  000013                     LeInfo@palavra:
  1175                           	callstack 0
  1176  000013                     lcdString@i:
  1177                           	callstack 0
  1178  000013                     ___awdiv@dividend:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x12
  1182  000013                     	ds	1
  1183  000014                     volume@valor:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x13
  1187  000014                     	ds	1
  1188  000015                     ??_musicas:
  1189  000015                     ??_radios:
  1190  000015                     volume@i:
  1191                           	callstack 0
  1192  000015                     LeInfo@i:
  1193                           	callstack 0
  1194  000015                     ___awdiv@divisor:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x14
  1198  000015                     	ds	1
  1199  000016                     LeInfo@aux:
  1200                           	callstack 0
  1201                           
  1202                           ; 1 bytes @ 0x15
  1203  000016                     	ds	1
  1204  000017                     musicas@n:
  1205                           	callstack 0
  1206  000017                     radios@n:
  1207                           	callstack 0
  1208  000017                     ___awdiv@counter:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x16
  1212  000017                     	ds	1
  1213  000018                     ___awdiv@sign:
  1214                           	callstack 0
  1215                           
  1216                           ; 1 bytes @ 0x17
  1217  000018                     	ds	1
  1218  000019                     ___awdiv@quotient:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x18
  1222  000019                     	ds	2
  1223  00001B                     ?___wmul:
  1224                           	callstack 0
  1225  00001B                     ___wmul@multiplier:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x1A
  1229  00001B                     	ds	2
  1230  00001D                     ___wmul@multiplicand:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x1C
  1234  00001D                     	ds	2
  1235  00001F                     ___wmul@product:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x1E
  1239  00001F                     	ds	2
  1240  000021                     ??_pwmSet:
  1241  000021                     ?_bcd2dec:
  1242                           	callstack 0
  1243  000021                     bcd2dec@value:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x20
  1247  000021                     	ds	2
  1248  000023                     ??_bcd2dec:
  1249  000023                     pwmSet@porcento:
  1250                           	callstack 0
  1251                           
  1252                           ; 1 bytes @ 0x22
  1253  000023                     	ds	1
  1254  000024                     pwmSet@val:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x23
  1258  000024                     	ds	1
  1259  000025                     ?___awmod:
  1260                           	callstack 0
  1261  000025                     ___awmod@dividend:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x24
  1265  000025                     	ds	1
  1266  000026                     buzzer@time:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x25
  1270  000026                     	ds	1
  1271  000027                     ___awmod@divisor:
  1272                           	callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x26
  1275  000027                     	ds	1
  1276  000028                     
  1277                           ; 1 bytes @ 0x27
  1278  000028                     	ds	1
  1279  000029                     ___awmod@counter:
  1280                           	callstack 0
  1281                           
  1282                           ; 1 bytes @ 0x28
  1283  000029                     	ds	1
  1284  00002A                     ___awmod@sign:
  1285                           	callstack 0
  1286                           
  1287                           ; 1 bytes @ 0x29
  1288  00002A                     	ds	1
  1289  00002B                     ??_data:
  1290  00002B                     ?_LeSerial:
  1291                           	callstack 0
  1292  00002B                     Cronometro@anterior:
  1293                           	callstack 0
  1294  00002B                     LeSerial@tempo:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x2A
  1298  00002B                     	ds	2
  1299  00002D                     ??_LeSerial:
  1300                           
  1301                           ; 1 bytes @ 0x2C
  1302  00002D                     	ds	1
  1303  00002E                     _data$1658:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x2D
  1307  00002E                     	ds	1
  1308  00002F                     LeSerial@Atual:
  1309                           	callstack 0
  1310                           
  1311                           ; 1 bytes @ 0x2E
  1312  00002F                     	ds	1
  1313  000030                     data@i:
  1314                           	callstack 0
  1315  000030                     LeSerial@tmp:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x2F
  1319  000030                     	ds	1
  1320  000031                     data@TempAtual:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x30
  1324  000031                     	ds	1
  1325  000032                     IMC@aux:
  1326                           	callstack 0
  1327  000032                     Temperatura@aux:
  1328                           	callstack 0
  1329                           
  1330                           ; 1 bytes @ 0x31
  1331  000032                     	ds	1
  1332  000033                     IMC@imc:
  1333                           	callstack 0
  1334  000033                     _data$1659:
  1335                           	callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x32
  1338  000033                     	ds	1
  1339  000034                     
  1340                           ; 1 bytes @ 0x33
  1341  000034                     	ds	1
  1342  000035                     ??_Telas:
  1343                           
  1344                           ; 1 bytes @ 0x34
  1345  000035                     	ds	2
  1346  000037                     Telas@anterior:
  1347                           	callstack 0
  1348                           
  1349                           ; 1 bytes @ 0x36
  1350  000037                     	ds	1
  1351  000038                     Telas@valor:
  1352                           	callstack 0
  1353                           
  1354                           ; 1 bytes @ 0x37
  1355  000038                     	ds	7
  1356  00003F                     LogoUnifei@i:
  1357                           	callstack 0
  1358                           
  1359                           ; 1 bytes @ 0x3E
  1360  00003F                     	ds	1
  1361  000040                     ??_main:
  1362                           
  1363                           ; 1 bytes @ 0x3F
  1364  000040                     	ds	2
  1365  000042                     main@contador:
  1366                           	callstack 0
  1367                           
  1368                           ; 1 bytes @ 0x41
  1369  000042                     	ds	1
  1370  000043                     main@processos:
  1371                           	callstack 0
  1372                           
  1373                           ; 1 bytes @ 0x42
  1374  000043                     	ds	1
  1375  000044                     main@i:
  1376                           	callstack 0
  1377                           
  1378                           ; 1 bytes @ 0x43
  1379  000044                     	ds	1
  1380  000045                     main@tecla:
  1381                           	callstack 0
  1382                           
  1383                           ; 1 bytes @ 0x44
  1384  000045                     	ds	1
  1385                           
  1386 ;;
  1387 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1388 ;;
  1389 ;; *************** function _main *****************
  1390 ;; Defined at:
  1391 ;;		line 334 in file "main.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;		None
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  tecla           1   68[COMRAM] unsigned char 
  1396 ;;  i               1   67[COMRAM] unsigned char 
  1397 ;;  processos       1   66[COMRAM] unsigned char 
  1398 ;;  contador        1   65[COMRAM] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1408 ;;      Params:         0       0       0       0       0       0       0
  1409 ;;      Locals:         4       0       0       0       0       0       0
  1410 ;;      Temps:          2       0       0       0       0       0       0
  1411 ;;      Totals:         6       0       0       0       0       0       0
  1412 ;;Total ram usage:        6 bytes
  1413 ;; Hardware stack levels required when called: 9
  1414 ;; This function calls:
  1415 ;;		_Bemvindo
  1416 ;;		_Finalizando
  1417 ;;		_LogoUnifei
  1418 ;;		_Telas
  1419 ;;		_Temperatura
  1420 ;;		_adcInit
  1421 ;;		_buzzer
  1422 ;;		_kpDebounce
  1423 ;;		_kpInit
  1424 ;;		_kpRead
  1425 ;;		_lcdInit
  1426 ;;		_pwmInit
  1427 ;;		_rgbInit
  1428 ;;		_serial_init
  1429 ;;		_timerInit
  1430 ;;		_timerReset
  1431 ;;		_timerWait
  1432 ;;		_turnOn
  1433 ;; This function is called by:
  1434 ;;		Startup code after reset
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text0
  1439  0072A6                     __ptext0:
  1440                           	callstack 0
  1441  0072A6                     _main:
  1442                           	callstack 22
  1443  0072A6  0E00               	movlw	0
  1444  0072A8  6E43               	movwf	main@processos^0,c
  1445  0072AA                     
  1446                           ;main.c: 336:     rgbInit();
  1447  0072AA  EC57  F02D         	call	_rgbInit	;wreg free
  1448  0072AE                     
  1449                           ;main.c: 337:     kpInit();
  1450  0072AE  ECAF  F02C         	call	_kpInit	;wreg free
  1451  0072B2                     
  1452                           ;main.c: 338:     adcInit();
  1453  0072B2  ECFE  F02D         	call	_adcInit	;wreg free
  1454  0072B6                     
  1455                           ;main.c: 339:     lcdInit();
  1456  0072B6  ECDF  F032         	call	_lcdInit	;wreg free
  1457  0072BA                     
  1458                           ;main.c: 340:     pwmInit();
  1459  0072BA  EC72  F02B         	call	_pwmInit	;wreg free
  1460  0072BE                     
  1461                           ;main.c: 341:     LogoUnifei();
  1462  0072BE  ECA6  F035         	call	_LogoUnifei	;wreg free
  1463  0072C2                     
  1464                           ;main.c: 342:     timerInit();
  1465  0072C2  EC3F  F02B         	call	_timerInit	;wreg free
  1466  0072C6                     
  1467                           ;main.c: 343:     serial_init();
  1468  0072C6  EC50  F02B         	call	_serial_init	;wreg free
  1469  0072CA                     
  1470                           ;main.c: 344:     turnOn(4);
  1471  0072CA  0E00               	movlw	0
  1472  0072CC  6E08               	movwf	(turnOn@led+1)^0,c
  1473  0072CE  0E04               	movlw	4
  1474  0072D0  6E07               	movwf	turnOn@led^0,c
  1475  0072D2  EC66  F030         	call	_turnOn	;wreg free
  1476  0072D6                     
  1477                           ;main.c: 345:     buzzer(500);
  1478  0072D6  0E01               	movlw	1
  1479  0072D8  6E27               	movwf	(buzzer@time+1)^0,c
  1480  0072DA  0EF4               	movlw	244
  1481  0072DC  6E26               	movwf	buzzer@time^0,c
  1482  0072DE  EC65  F02B         	call	_buzzer	;wreg free
  1483  0072E2                     
  1484                           ;main.c: 346:     Bemvindo();
  1485  0072E2  EC8A  F037         	call	_Bemvindo	;wreg free
  1486  0072E6                     l3972:
  1487                           
  1488                           ;main.c: 348:         timerReset(50);
  1489  0072E6  0E00               	movlw	0
  1490  0072E8  6E02               	movwf	(timerReset@tempo+1)^0,c
  1491  0072EA  0E32               	movlw	50
  1492  0072EC  6E01               	movwf	timerReset@tempo^0,c
  1493  0072EE  EC9D  F02B         	call	_timerReset	;wreg free
  1494                           
  1495                           ;main.c: 349:         switch(processos){
  1496  0072F2  EF39  F03A         	goto	l4058
  1497  0072F6                     l3974:
  1498                           
  1499                           ;main.c: 351:                 Telas();
  1500  0072F6  EC41  F038         	call	_Telas	;wreg free
  1501  0072FA                     
  1502                           ;main.c: 352:                 processos=1;
  1503  0072FA  0E01               	movlw	1
  1504  0072FC  6E43               	movwf	main@processos^0,c
  1505                           
  1506                           ;main.c: 353:                 break;
  1507  0072FE  EF56  F03A         	goto	l4060
  1508  007302                     l3978:
  1509                           
  1510                           ;main.c: 355:                 for(i=0;i<5;i++){
  1511  007302  0E00               	movlw	0
  1512  007304  6E44               	movwf	main@i^0,c
  1513  007306                     l3984:
  1514                           
  1515                           ;main.c: 356:                     kpDebounce();
  1516  007306  EC3A  F036         	call	_kpDebounce	;wreg free
  1517                           
  1518                           ;main.c: 357:                     if (kpRead() != tecla){
  1519  00730A  5045               	movf	main@tecla^0,w,c
  1520  00730C  6E40               	movwf	??_main^0,c
  1521  00730E  6A41               	clrf	(??_main+1)^0,c
  1522  007310  EC43  F02B         	call	_kpRead	;wreg free
  1523  007314  5040               	movf	??_main^0,w,c
  1524  007316  1801               	xorwf	?_kpRead^0,w,c
  1525  007318  E109               	bnz	u3290
  1526  00731A  5041               	movf	(??_main+1)^0,w,c
  1527  00731C  1802               	xorwf	(?_kpRead+1)^0,w,c
  1528  00731E  B4D8               	btfsc	status,2,c
  1529  007320  EF94  F039         	goto	u3291
  1530  007324  EF96  F039         	goto	u3290
  1531  007328                     u3291:
  1532  007328  EF17  F03A         	goto	l4036
  1533  00732C                     u3290:
  1534  00732C                     
  1535                           ;main.c: 358:                         change=1;
  1536  00732C  0E01               	movlw	1
  1537  00732E  6E7B               	movwf	_change^0,c
  1538  007330                     
  1539                           ;main.c: 359:                         tecla = kpRead();
  1540  007330  EC43  F02B         	call	_kpRead	;wreg free
  1541  007334  5001               	movf	?_kpRead^0,w,c
  1542  007336  6E45               	movwf	main@tecla^0,c
  1543  007338                     
  1544                           ;main.c: 361:                             if (((tecla) & (1<<(0)))&&freq<7) freq++,tela=
      +                          2;
  1545  007338  A045               	btfss	main@tecla^0,0,c
  1546  00733A  EFA1  F039         	goto	u3301
  1547  00733E  EFA3  F039         	goto	u3300
  1548  007342                     u3301:
  1549  007342  EFAE  F039         	goto	l3998
  1550  007346                     u3300:
  1551  007346  0E07               	movlw	7
  1552  007348  6079               	cpfslt	_freq^0,c
  1553  00734A  EFA9  F039         	goto	u3311
  1554  00734E  EFAB  F039         	goto	u3310
  1555  007352                     u3311:
  1556  007352  EFAE  F039         	goto	l3998
  1557  007356                     u3310:
  1558  007356  2A79               	incf	_freq^0,f,c
  1559  007358  0E02               	movlw	2
  1560  00735A  6E53               	movwf	_tela^0,c
  1561  00735C                     l3998:
  1562                           
  1563                           ;main.c: 362:                             if (((tecla) & (1<<(2)))&&freq) freq--,tela=2;
  1564  00735C  A445               	btfss	main@tecla^0,2,c
  1565  00735E  EFB3  F039         	goto	u3321
  1566  007362  EFB5  F039         	goto	u3320
  1567  007366                     u3321:
  1568  007366  EFC0  F039         	goto	l4006
  1569  00736A                     u3320:
  1570  00736A  5079               	movf	_freq^0,w,c
  1571  00736C  B4D8               	btfsc	status,2,c
  1572  00736E  EFBB  F039         	goto	u3331
  1573  007372  EFBD  F039         	goto	u3330
  1574  007376                     u3331:
  1575  007376  EFC0  F039         	goto	l4006
  1576  00737A                     u3330:
  1577  00737A  0679               	decf	_freq^0,f,c
  1578  00737C  0E02               	movlw	2
  1579  00737E  6E53               	movwf	_tela^0,c
  1580  007380                     l4006:
  1581                           
  1582                           ;main.c: 363:                             if (((tecla) & (1<<(1)))&&musica) musica--,tel
      +                          a=1;
  1583  007380  A245               	btfss	main@tecla^0,1,c
  1584  007382  EFC5  F039         	goto	u3341
  1585  007386  EFC7  F039         	goto	u3340
  1586  00738A                     u3341:
  1587  00738A  EFD2  F039         	goto	l4014
  1588  00738E                     u3340:
  1589  00738E  507A               	movf	_musica^0,w,c
  1590  007390  B4D8               	btfsc	status,2,c
  1591  007392  EFCD  F039         	goto	u3351
  1592  007396  EFCF  F039         	goto	u3350
  1593  00739A                     u3351:
  1594  00739A  EFD2  F039         	goto	l4014
  1595  00739E                     u3350:
  1596  00739E  067A               	decf	_musica^0,f,c
  1597  0073A0  0E01               	movlw	1
  1598  0073A2  6E53               	movwf	_tela^0,c
  1599  0073A4                     l4014:
  1600                           
  1601                           ;main.c: 364:                             if (((tecla) & (1<<(3)))&&musica<5) musica++,t
      +                          ela=1;
  1602  0073A4  A645               	btfss	main@tecla^0,3,c
  1603  0073A6  EFD7  F039         	goto	u3361
  1604  0073AA  EFD9  F039         	goto	u3360
  1605  0073AE                     u3361:
  1606  0073AE  EFE4  F039         	goto	l4022
  1607  0073B2                     u3360:
  1608  0073B2  0E05               	movlw	5
  1609  0073B4  607A               	cpfslt	_musica^0,c
  1610  0073B6  EFDF  F039         	goto	u3371
  1611  0073BA  EFE1  F039         	goto	u3370
  1612  0073BE                     u3371:
  1613  0073BE  EFE4  F039         	goto	l4022
  1614  0073C2                     u3370:
  1615  0073C2  2A7A               	incf	_musica^0,f,c
  1616  0073C4  0E01               	movlw	1
  1617  0073C6  6E53               	movwf	_tela^0,c
  1618  0073C8                     l4022:
  1619                           
  1620                           ;main.c: 366:                             if (((tecla) & (1<<(4))))tela=0;
  1621  0073C8  A845               	btfss	main@tecla^0,4,c
  1622  0073CA  EFE9  F039         	goto	u3381
  1623  0073CE  EFEB  F039         	goto	u3380
  1624  0073D2                     u3381:
  1625  0073D2  EFED  F039         	goto	l4026
  1626  0073D6                     u3380:
  1627  0073D6  0E00               	movlw	0
  1628  0073D8  6E53               	movwf	_tela^0,c
  1629  0073DA                     l4026:
  1630                           
  1631                           ;main.c: 368:                             if (((tecla) & (1<<(7)))){if(tela==3)tempos=0,
      +                          crono=1;tela=3;}
  1632  0073DA  AE45               	btfss	main@tecla^0,7,c
  1633  0073DC  EFF2  F039         	goto	u3391
  1634  0073E0  EFF4  F039         	goto	u3390
  1635  0073E4                     u3391:
  1636  0073E4  EF03  F03A         	goto	l4032
  1637  0073E8                     u3390:
  1638  0073E8  0E03               	movlw	3
  1639  0073EA  1853               	xorwf	_tela^0,w,c
  1640  0073EC  A4D8               	btfss	status,2,c
  1641  0073EE  EFFB  F039         	goto	u3401
  1642  0073F2  EFFD  F039         	goto	u3400
  1643  0073F6                     u3401:
  1644  0073F6  EF01  F03A         	goto	l203
  1645  0073FA                     u3400:
  1646  0073FA  0E00               	movlw	0
  1647  0073FC  6E55               	movwf	_tempos^0,c
  1648  0073FE  0E01               	movlw	1
  1649  007400  6E56               	movwf	_crono^0,c
  1650  007402                     l203:
  1651  007402  0E03               	movlw	3
  1652  007404  6E53               	movwf	_tela^0,c
  1653  007406                     l4032:
  1654                           
  1655                           ;main.c: 369:                             if (((tecla) & (1<<(6)))) tela=3,crono=!crono;
  1656  007406  AC45               	btfss	main@tecla^0,6,c
  1657  007408  EF08  F03A         	goto	u3411
  1658  00740C  EF0A  F03A         	goto	u3410
  1659  007410                     u3411:
  1660  007410  EF17  F03A         	goto	l4036
  1661  007414                     u3410:
  1662  007414  0E03               	movlw	3
  1663  007416  6E53               	movwf	_tela^0,c
  1664  007418  5056               	movf	_crono^0,w,c
  1665  00741A  B4D8               	btfsc	status,2,c
  1666  00741C  EF12  F03A         	goto	u3421
  1667  007420  EF15  F03A         	goto	u3420
  1668  007424                     u3421:
  1669  007424  0E01               	movlw	1
  1670  007426  EF16  F03A         	goto	u3430
  1671  00742A                     u3420:
  1672  00742A  0E00               	movlw	0
  1673  00742C                     u3430:
  1674  00742C  6E56               	movwf	_crono^0,c
  1675  00742E                     l4036:
  1676                           
  1677                           ;main.c: 371:                 }
  1678  00742E  2A44               	incf	main@i^0,f,c
  1679  007430  0E04               	movlw	4
  1680  007432  6444               	cpfsgt	main@i^0,c
  1681  007434  EF1E  F03A         	goto	u3441
  1682  007438  EF20  F03A         	goto	u3440
  1683  00743C                     u3441:
  1684  00743C  EF83  F039         	goto	l3984
  1685  007440                     u3440:
  1686  007440                     
  1687                           ;main.c: 372:                 processos=2;
  1688  007440  0E02               	movlw	2
  1689  007442  6E43               	movwf	main@processos^0,c
  1690                           
  1691                           ;main.c: 373:                 break;
  1692  007444  EF56  F03A         	goto	l4060
  1693  007448                     l4042:
  1694                           
  1695                           ;main.c: 375:                 if(contador>20)tempos++,contador=0;
  1696  007448  0E14               	movlw	20
  1697  00744A  6442               	cpfsgt	main@contador^0,c
  1698  00744C  EF2A  F03A         	goto	u3451
  1699  007450  EF2C  F03A         	goto	u3450
  1700  007454                     u3451:
  1701  007454  EF2F  F03A         	goto	l4048
  1702  007458                     u3450:
  1703  007458  2A55               	incf	_tempos^0,f,c
  1704  00745A  0E00               	movlw	0
  1705  00745C  6E42               	movwf	main@contador^0,c
  1706  00745E                     l4048:
  1707                           
  1708                           ;main.c: 376:                 processos=3;
  1709  00745E  0E03               	movlw	3
  1710  007460  6E43               	movwf	main@processos^0,c
  1711                           
  1712                           ;main.c: 377:                 break;
  1713  007462  EF56  F03A         	goto	l4060
  1714  007466                     l4050:
  1715                           
  1716                           ;main.c: 379:                 Temperatura();
  1717  007466  ECE7  F02B         	call	_Temperatura	;wreg free
  1718  00746A                     l4052:
  1719                           
  1720                           ;main.c: 380:                 processos=0;
  1721  00746A  0E00               	movlw	0
  1722  00746C  6E43               	movwf	main@processos^0,c
  1723                           
  1724                           ;main.c: 381:                 break;
  1725  00746E  EF56  F03A         	goto	l4060
  1726  007472                     l4058:
  1727  007472  5043               	movf	main@processos^0,w,c
  1728  007474  6E40               	movwf	??_main^0,c
  1729  007476  6A41               	clrf	(??_main+1)^0,c
  1730                           
  1731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1732                           ; Switch size 1, requested type "simple"
  1733                           ; Number of cases is 1, Range of values is 0 to 0
  1734                           ; switch strategies available:
  1735                           ; Name         Instructions Cycles
  1736                           ; simple_byte            4     3 (average)
  1737                           ;	Chosen strategy is simple_byte
  1738  007478  5041               	movf	(??_main+1)^0,w,c
  1739  00747A  0A00               	xorlw	0	; case 0
  1740  00747C  B4D8               	btfsc	status,2,c
  1741  00747E  EF43  F03A         	goto	l4158
  1742  007482  EF35  F03A         	goto	l4052
  1743  007486                     l4158:
  1744                           
  1745                           ; Switch size 1, requested type "simple"
  1746                           ; Number of cases is 4, Range of values is 0 to 3
  1747                           ; switch strategies available:
  1748                           ; Name         Instructions Cycles
  1749                           ; simple_byte           13     7 (average)
  1750                           ;	Chosen strategy is simple_byte
  1751  007486  5040               	movf	??_main^0,w,c
  1752  007488  0A00               	xorlw	0	; case 0
  1753  00748A  B4D8               	btfsc	status,2,c
  1754  00748C  EF7B  F039         	goto	l3974
  1755  007490  0A01               	xorlw	1	; case 1
  1756  007492  B4D8               	btfsc	status,2,c
  1757  007494  EF81  F039         	goto	l3978
  1758  007498  0A03               	xorlw	3	; case 2
  1759  00749A  B4D8               	btfsc	status,2,c
  1760  00749C  EF24  F03A         	goto	l4042
  1761  0074A0  0A01               	xorlw	1	; case 3
  1762  0074A2  B4D8               	btfsc	status,2,c
  1763  0074A4  EF33  F03A         	goto	l4050
  1764  0074A8  EF35  F03A         	goto	l4052
  1765  0074AC                     l4060:
  1766                           
  1767                           ;main.c: 386:         if(crono) contador++;
  1768  0074AC  5056               	movf	_crono^0,w,c
  1769  0074AE  B4D8               	btfsc	status,2,c
  1770  0074B0  EF5C  F03A         	goto	u3461
  1771  0074B4  EF5E  F03A         	goto	u3460
  1772  0074B8                     u3461:
  1773  0074B8  EF5F  F03A         	goto	l4064
  1774  0074BC                     u3460:
  1775  0074BC  2A42               	incf	main@contador^0,f,c
  1776  0074BE                     l4064:
  1777                           
  1778                           ;main.c: 387:         timerWait();
  1779  0074BE  EC48  F02B         	call	_timerWait	;wreg free
  1780                           
  1781                           ;main.c: 388:     }
  1782  0074C2  EF73  F039         	goto	l3972
  1783  0074C6  EF00  F000         	goto	start
  1784  0074CA                     __end_of_main:
  1785                           	callstack 0
  1786                           
  1787 ;; *************** function _turnOn *****************
  1788 ;; Defined at:
  1789 ;;		line 21 in file "rgb.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  led             2    6[COMRAM] int 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1803 ;;      Params:         2       0       0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0
  1806 ;;      Totals:         2       0       0       0       0       0       0
  1807 ;;Total ram usage:        2 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; Hardware stack levels required when called: 1
  1810 ;; This function calls:
  1811 ;;		_digitalWrite
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text1
  1818  0060CC                     __ptext1:
  1819                           	callstack 0
  1820  0060CC                     _turnOn:
  1821                           	callstack 29
  1822  0060CC                     
  1823                           ;rgb.c: 22:  if (led & 1) {
  1824  0060CC  A007               	btfss	turnOn@led^0,0,c
  1825  0060CE  EF6B  F030         	goto	u3181
  1826  0060D2  EF6D  F030         	goto	u3180
  1827  0060D6                     u3181:
  1828  0060D6  EF77  F030         	goto	l3898
  1829  0060DA                     u3180:
  1830  0060DA                     
  1831                           ;rgb.c: 23:   digitalWrite(PIN_D0, 1);
  1832  0060DA  0E00               	movlw	0
  1833  0060DC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1834  0060DE  0E18               	movlw	24
  1835  0060E0  6E01               	movwf	digitalWrite@pin^0,c
  1836  0060E2  0E00               	movlw	0
  1837  0060E4  6E04               	movwf	(digitalWrite@value+1)^0,c
  1838  0060E6  0E01               	movlw	1
  1839  0060E8  6E03               	movwf	digitalWrite@value^0,c
  1840  0060EA  EC65  F03A         	call	_digitalWrite	;wreg free
  1841  0060EE                     l3898:
  1842                           
  1843                           ;rgb.c: 25:  if (led & 2) {
  1844  0060EE  A207               	btfss	turnOn@led^0,1,c
  1845  0060F0  EF7C  F030         	goto	u3191
  1846  0060F4  EF7E  F030         	goto	u3190
  1847  0060F8                     u3191:
  1848  0060F8  EF88  F030         	goto	l3902
  1849  0060FC                     u3190:
  1850  0060FC                     
  1851                           ;rgb.c: 26:   digitalWrite(PIN_D1, 1);
  1852  0060FC  0E00               	movlw	0
  1853  0060FE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1854  006100  0E19               	movlw	25
  1855  006102  6E01               	movwf	digitalWrite@pin^0,c
  1856  006104  0E00               	movlw	0
  1857  006106  6E04               	movwf	(digitalWrite@value+1)^0,c
  1858  006108  0E01               	movlw	1
  1859  00610A  6E03               	movwf	digitalWrite@value^0,c
  1860  00610C  EC65  F03A         	call	_digitalWrite	;wreg free
  1861  006110                     l3902:
  1862                           
  1863                           ;rgb.c: 28:  if (led & 4) {
  1864  006110  A407               	btfss	turnOn@led^0,2,c
  1865  006112  EF8D  F030         	goto	u3201
  1866  006116  EF8F  F030         	goto	u3200
  1867  00611A                     u3201:
  1868  00611A  EF99  F030         	goto	l538
  1869  00611E                     u3200:
  1870  00611E                     
  1871                           ;rgb.c: 29:   digitalWrite(PIN_D2, 1);
  1872  00611E  0E00               	movlw	0
  1873  006120  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1874  006122  0E1A               	movlw	26
  1875  006124  6E01               	movwf	digitalWrite@pin^0,c
  1876  006126  0E00               	movlw	0
  1877  006128  6E04               	movwf	(digitalWrite@value+1)^0,c
  1878  00612A  0E01               	movlw	1
  1879  00612C  6E03               	movwf	digitalWrite@value^0,c
  1880  00612E  EC65  F03A         	call	_digitalWrite	;wreg free
  1881  006132                     l538:
  1882  006132  0012               	return		;funcret
  1883  006134                     __end_of_turnOn:
  1884                           	callstack 0
  1885                           
  1886 ;; *************** function _timerWait *****************
  1887 ;; Defined at:
  1888 ;;		line 31 in file "timer.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		None
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1902 ;;      Params:         0       0       0       0       0       0       0
  1903 ;;      Locals:         0       0       0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0
  1905 ;;      Totals:         0       0       0       0       0       0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_main
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text2
  1916  005690                     __ptext2:
  1917                           	callstack 0
  1918  005690                     _timerWait:
  1919                           	callstack 30
  1920  005690                     l663:
  1921  005690  A4F2               	btfss	242,2,c	;volatile
  1922  005692  EF4D  F02B         	goto	u1491
  1923  005696  EF4F  F02B         	goto	u1490
  1924  00569A                     u1491:
  1925  00569A  EF48  F02B         	goto	l663
  1926  00569E                     u1490:
  1927  00569E  0012               	return		;funcret
  1928  0056A0                     __end_of_timerWait:
  1929                           	callstack 0
  1930                           
  1931 ;; *************** function _timerReset *****************
  1932 ;; Defined at:
  1933 ;;		line 37 in file "timer.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  tempo           2    0[COMRAM] unsigned int 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  ciclos          2    2[COMRAM] unsigned int 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1947 ;;      Params:         2       0       0       0       0       0       0
  1948 ;;      Locals:         2       0       0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0
  1950 ;;      Totals:         4       0       0       0       0       0       0
  1951 ;;Total ram usage:        4 bytes
  1952 ;; Hardware stack levels used: 1
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text3
  1961  00573A                     __ptext3:
  1962                           	callstack 0
  1963  00573A                     _timerReset:
  1964                           	callstack 30
  1965  00573A                     
  1966                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
  1967  00573A  90D8               	bcf	status,0,c
  1968  00573C  3401               	rlcf	timerReset@tempo^0,w,c
  1969  00573E  6E03               	movwf	timerReset@ciclos^0,c
  1970  005740  3402               	rlcf	(timerReset@tempo+1)^0,w,c
  1971  005742  6E04               	movwf	(timerReset@ciclos+1)^0,c
  1972  005744                     
  1973                           ;timer.c: 44:  ciclos = 65535 - ciclos;
  1974  005744  1E03               	comf	timerReset@ciclos^0,f,c
  1975  005746  1E04               	comf	(timerReset@ciclos+1)^0,f,c
  1976  005748                     
  1977                           ;timer.c: 47:     ciclos -=50;
  1978  005748  0E32               	movlw	50
  1979  00574A  5E03               	subwf	timerReset@ciclos^0,f,c
  1980  00574C  0E00               	movlw	0
  1981  00574E  5A04               	subwfb	(timerReset@ciclos+1)^0,f,c
  1982  005750                     
  1983                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
  1984  005750  5004               	movf	(timerReset@ciclos+1)^0,w,c
  1985  005752  6ED7               	movwf	215,c	;volatile
  1986  005754                     
  1987                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
  1988  005754  C003  FFD6         	movff	timerReset@ciclos,4054	;volatile
  1989  005758                     
  1990                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
  1991  005758  94F2               	bcf	242,2,c	;volatile
  1992  00575A  0012               	return		;funcret
  1993  00575C                     __end_of_timerReset:
  1994                           	callstack 0
  1995                           
  1996 ;; *************** function _timerInit *****************
  1997 ;; Defined at:
  1998 ;;		line 55 in file "timer.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;		None
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2012 ;;      Params:         0       0       0       0       0       0       0
  2013 ;;      Locals:         0       0       0       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0
  2015 ;;      Totals:         0       0       0       0       0       0       0
  2016 ;;Total ram usage:        0 bytes
  2017 ;; Hardware stack levels used: 1
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_main
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text4
  2026  00567E                     __ptext4:
  2027                           	callstack 0
  2028  00567E                     _timerInit:
  2029                           	callstack 30
  2030  00567E                     
  2031                           ;timer.c: 57:  T0CON = 0b00001000;
  2032  00567E  0E08               	movlw	8
  2033  005680  6ED5               	movwf	213,c	;volatile
  2034  005682                     
  2035                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  2036  005682  8ED5               	bsf	213,7,c	;volatile
  2037  005684  0012               	return		;funcret
  2038  005686                     __end_of_timerInit:
  2039                           	callstack 0
  2040                           
  2041 ;; *************** function _serial_init *****************
  2042 ;; Defined at:
  2043 ;;		line 30 in file "serial.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;		None
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2057 ;;      Params:         0       0       0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0       0       0
  2060 ;;      Totals:         0       0       0       0       0       0       0
  2061 ;;Total ram usage:        0 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text5
  2071  0056A0                     __ptext5:
  2072                           	callstack 0
  2073  0056A0                     _serial_init:
  2074                           	callstack 30
  2075  0056A0                     
  2076                           ;serial.c: 32:     SPBRG=103;
  2077  0056A0  0E67               	movlw	103
  2078  0056A2  6EAF               	movwf	175,c	;volatile
  2079  0056A4                     
  2080                           ;serial.c: 37:     TXSTAbits.TX9=0;
  2081  0056A4  9CAC               	bcf	172,6,c	;volatile
  2082  0056A6                     
  2083                           ;serial.c: 38:     TXSTAbits.TXEN=1;
  2084  0056A6  8AAC               	bsf	172,5,c	;volatile
  2085  0056A8                     
  2086                           ;serial.c: 39:     TXSTAbits.SYNC=0;
  2087  0056A8  98AC               	bcf	172,4,c	;volatile
  2088  0056AA                     
  2089                           ;serial.c: 40:     TXSTAbits.BRGH=1;
  2090  0056AA  84AC               	bsf	172,2,c	;volatile
  2091  0056AC                     
  2092                           ;serial.c: 41:     RCSTAbits.SPEN=1;
  2093  0056AC  8EAB               	bsf	171,7,c	;volatile
  2094  0056AE                     
  2095                           ;serial.c: 42:     RCSTAbits.RX9=0;
  2096  0056AE  9CAB               	bcf	171,6,c	;volatile
  2097  0056B0                     
  2098                           ;serial.c: 43:     RCSTAbits.CREN=1;
  2099  0056B0  88AB               	bsf	171,4,c	;volatile
  2100  0056B2  0012               	return		;funcret
  2101  0056B4                     __end_of_serial_init:
  2102                           	callstack 0
  2103                           
  2104 ;; *************** function _rgbInit *****************
  2105 ;; Defined at:
  2106 ;;		line 45 in file "rgb.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2, status,0, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2120 ;;      Params:         0       0       0       0       0       0       0
  2121 ;;      Locals:         0       0       0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0
  2123 ;;      Totals:         0       0       0       0       0       0       0
  2124 ;;Total ram usage:        0 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 1
  2127 ;; This function calls:
  2128 ;;		_pinMode
  2129 ;; This function is called by:
  2130 ;;		_main
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text6
  2135  005AAE                     __ptext6:
  2136                           	callstack 0
  2137  005AAE                     _rgbInit:
  2138                           	callstack 29
  2139  005AAE                     
  2140                           ;rgb.c: 46:  pinMode(PIN_D0, 0);
  2141  005AAE  0E00               	movlw	0
  2142  005AB0  6E02               	movwf	(pinMode@pin+1)^0,c
  2143  005AB2  0E18               	movlw	24
  2144  005AB4  6E01               	movwf	pinMode@pin^0,c
  2145  005AB6  0E00               	movlw	0
  2146  005AB8  6E04               	movwf	(pinMode@type+1)^0,c
  2147  005ABA  0E00               	movlw	0
  2148  005ABC  6E03               	movwf	pinMode@type^0,c
  2149  005ABE  EC8C  F03B         	call	_pinMode	;wreg free
  2150                           
  2151                           ;rgb.c: 47:  pinMode(PIN_D1, 0);
  2152  005AC2  0E00               	movlw	0
  2153  005AC4  6E02               	movwf	(pinMode@pin+1)^0,c
  2154  005AC6  0E19               	movlw	25
  2155  005AC8  6E01               	movwf	pinMode@pin^0,c
  2156  005ACA  0E00               	movlw	0
  2157  005ACC  6E04               	movwf	(pinMode@type+1)^0,c
  2158  005ACE  0E00               	movlw	0
  2159  005AD0  6E03               	movwf	pinMode@type^0,c
  2160  005AD2  EC8C  F03B         	call	_pinMode	;wreg free
  2161                           
  2162                           ;rgb.c: 48:  pinMode(PIN_D2, 0);
  2163  005AD6  0E00               	movlw	0
  2164  005AD8  6E02               	movwf	(pinMode@pin+1)^0,c
  2165  005ADA  0E1A               	movlw	26
  2166  005ADC  6E01               	movwf	pinMode@pin^0,c
  2167  005ADE  0E00               	movlw	0
  2168  005AE0  6E04               	movwf	(pinMode@type+1)^0,c
  2169  005AE2  0E00               	movlw	0
  2170  005AE4  6E03               	movwf	pinMode@type^0,c
  2171  005AE6  EC8C  F03B         	call	_pinMode	;wreg free
  2172  005AEA  0012               	return		;funcret
  2173  005AEC                     __end_of_rgbInit:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function _pwmInit *****************
  2177 ;; Defined at:
  2178 ;;		line 51 in file "pwm.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2192 ;;      Params:         0       0       0       0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0
  2195 ;;      Totals:         0       0       0       0       0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 2
  2199 ;; This function calls:
  2200 ;;		_pwmFrequency
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text7
  2207  0056E4                     __ptext7:
  2208                           	callstack 0
  2209  0056E4                     _pwmInit:
  2210                           	callstack 28
  2211  0056E4                     
  2212                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  2213  0056E4  9294               	bcf	148,1,c	;volatile
  2214  0056E6                     
  2215                           ;pwm.c: 55:  T2CON |= 0b00000011;
  2216  0056E6  0E03               	movlw	3
  2217  0056E8  12CA               	iorwf	202,f,c	;volatile
  2218  0056EA                     
  2219                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  2220  0056EA  84CA               	bsf	202,2,c	;volatile
  2221  0056EC                     
  2222                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  2223  0056EC  0E0C               	movlw	12
  2224  0056EE  6EBA               	movwf	186,c	;volatile
  2225  0056F0                     
  2226                           ;pwm.c: 60:     pwmFrequency(100);
  2227  0056F0  0E00               	movlw	0
  2228  0056F2  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  2229  0056F4  0E64               	movlw	100
  2230  0056F6  6E0F               	movwf	pwmFrequency@freq^0,c
  2231  0056F8  ECD4  F02B         	call	_pwmFrequency	;wreg free
  2232  0056FC  0012               	return		;funcret
  2233  0056FE                     __end_of_pwmInit:
  2234                           	callstack 0
  2235                           
  2236 ;; *************** function _pwmFrequency *****************
  2237 ;; Defined at:
  2238 ;;		line 44 in file "pwm.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  freq            2   14[COMRAM] unsigned int 
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;		None
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, status,2, status,0, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2252 ;;      Params:         2       0       0       0       0       0       0
  2253 ;;      Locals:         0       0       0       0       0       0       0
  2254 ;;      Temps:          0       0       0       0       0       0       0
  2255 ;;      Totals:         2       0       0       0       0       0       0
  2256 ;;Total ram usage:        2 bytes
  2257 ;; Hardware stack levels used: 1
  2258 ;; Hardware stack levels required when called: 1
  2259 ;; This function calls:
  2260 ;;		___aldiv
  2261 ;; This function is called by:
  2262 ;;		_pwmInit
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text8
  2267  0057A8                     __ptext8:
  2268                           	callstack 0
  2269  0057A8                     _pwmFrequency:
  2270                           	callstack 28
  2271  0057A8                     
  2272                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2273  0057A8  0E48               	movlw	72
  2274  0057AA  6E01               	movwf	___aldiv@dividend^0,c
  2275  0057AC  0EE8               	movlw	232
  2276  0057AE  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2277  0057B0  0E01               	movlw	1
  2278  0057B2  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2279  0057B4  0E00               	movlw	0
  2280  0057B6  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2281  0057B8  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2282  0057BC  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2283  0057C0  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2284  0057C2  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2285  0057C4  EC0C  F034         	call	___aldiv	;wreg free
  2286  0057C8  0401               	decf	?___aldiv^0,w,c
  2287  0057CA  6ECB               	movwf	203,c	;volatile
  2288  0057CC  0012               	return		;funcret
  2289  0057CE                     __end_of_pwmFrequency:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function ___aldiv *****************
  2293 ;; Defined at:
  2294 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  dividend        4    0[COMRAM] long 
  2297 ;;  divisor         4    4[COMRAM] long 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  quotient        4   10[COMRAM] long 
  2300 ;;  sign            1    9[COMRAM] unsigned char 
  2301 ;;  counter         1    8[COMRAM] unsigned char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  4    0[COMRAM] long 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2311 ;;      Params:         8       0       0       0       0       0       0
  2312 ;;      Locals:         6       0       0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0
  2314 ;;      Totals:        14       0       0       0       0       0       0
  2315 ;;Total ram usage:       14 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		_pwmFrequency
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text9
  2325  006818                     __ptext9:
  2326                           	callstack 0
  2327  006818                     ___aldiv:
  2328                           	callstack 28
  2329  006818  0E00               	movlw	0
  2330  00681A  6E0A               	movwf	___aldiv@sign^0,c
  2331  00681C  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2332  00681E  EF15  F034         	goto	u2850
  2333  006822  EF13  F034         	goto	u2851
  2334  006826                     u2851:
  2335  006826  EF1F  F034         	goto	l3342
  2336  00682A                     u2850:
  2337  00682A  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2338  00682C  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2339  00682E  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2340  006830  6C05               	negf	___aldiv@divisor^0,c
  2341  006832  0E00               	movlw	0
  2342  006834  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2343  006836  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2344  006838  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2345  00683A  0E01               	movlw	1
  2346  00683C  6E0A               	movwf	___aldiv@sign^0,c
  2347  00683E                     l3342:
  2348  00683E  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2349  006840  EF26  F034         	goto	u2860
  2350  006844  EF24  F034         	goto	u2861
  2351  006848                     u2861:
  2352  006848  EF30  F034         	goto	l3348
  2353  00684C                     u2860:
  2354  00684C  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2355  00684E  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2356  006850  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2357  006852  6C01               	negf	___aldiv@dividend^0,c
  2358  006854  0E00               	movlw	0
  2359  006856  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2360  006858  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2361  00685A  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2362  00685C  0E01               	movlw	1
  2363  00685E  1A0A               	xorwf	___aldiv@sign^0,f,c
  2364  006860                     l3348:
  2365  006860  0E00               	movlw	0
  2366  006862  6E0B               	movwf	___aldiv@quotient^0,c
  2367  006864  0E00               	movlw	0
  2368  006866  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2369  006868  0E00               	movlw	0
  2370  00686A  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2371  00686C  0E00               	movlw	0
  2372  00686E  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2373  006870  5005               	movf	___aldiv@divisor^0,w,c
  2374  006872  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2375  006874  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2376  006876  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2377  006878  B4D8               	btfsc	status,2,c
  2378  00687A  EF41  F034         	goto	u2871
  2379  00687E  EF43  F034         	goto	u2870
  2380  006882                     u2871:
  2381  006882  EF79  F034         	goto	l3370
  2382  006886                     u2870:
  2383  006886  0E01               	movlw	1
  2384  006888  6E09               	movwf	___aldiv@counter^0,c
  2385  00688A  EF4D  F034         	goto	l3356
  2386  00688E                     l3354:
  2387  00688E  90D8               	bcf	status,0,c
  2388  006890  3605               	rlcf	___aldiv@divisor^0,f,c
  2389  006892  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2390  006894  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2391  006896  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2392  006898  2A09               	incf	___aldiv@counter^0,f,c
  2393  00689A                     l3356:
  2394  00689A  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2395  00689C  EF52  F034         	goto	u2881
  2396  0068A0  EF54  F034         	goto	u2880
  2397  0068A4                     u2881:
  2398  0068A4  EF47  F034         	goto	l3354
  2399  0068A8                     u2880:
  2400  0068A8                     l3358:
  2401  0068A8  90D8               	bcf	status,0,c
  2402  0068AA  360B               	rlcf	___aldiv@quotient^0,f,c
  2403  0068AC  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2404  0068AE  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2405  0068B0  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2406  0068B2  5005               	movf	___aldiv@divisor^0,w,c
  2407  0068B4  5C01               	subwf	___aldiv@dividend^0,w,c
  2408  0068B6  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2409  0068B8  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2410  0068BA  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2411  0068BC  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2412  0068BE  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2413  0068C0  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2414  0068C2  A0D8               	btfss	status,0,c
  2415  0068C4  EF66  F034         	goto	u2891
  2416  0068C8  EF68  F034         	goto	u2890
  2417  0068CC                     u2891:
  2418  0068CC  EF71  F034         	goto	l3366
  2419  0068D0                     u2890:
  2420  0068D0  5005               	movf	___aldiv@divisor^0,w,c
  2421  0068D2  5E01               	subwf	___aldiv@dividend^0,f,c
  2422  0068D4  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2423  0068D6  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2424  0068D8  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2425  0068DA  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2426  0068DC  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2427  0068DE  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2428  0068E0  800B               	bsf	___aldiv@quotient^0,0,c
  2429  0068E2                     l3366:
  2430  0068E2  90D8               	bcf	status,0,c
  2431  0068E4  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2432  0068E6  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2433  0068E8  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2434  0068EA  3205               	rrcf	___aldiv@divisor^0,f,c
  2435  0068EC  2E09               	decfsz	___aldiv@counter^0,f,c
  2436  0068EE  EF54  F034         	goto	l3358
  2437  0068F2                     l3370:
  2438  0068F2  500A               	movf	___aldiv@sign^0,w,c
  2439  0068F4  B4D8               	btfsc	status,2,c
  2440  0068F6  EF7F  F034         	goto	u2901
  2441  0068FA  EF81  F034         	goto	u2900
  2442  0068FE                     u2901:
  2443  0068FE  EF89  F034         	goto	l3374
  2444  006902                     u2900:
  2445  006902  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2446  006904  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2447  006906  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2448  006908  6C0B               	negf	___aldiv@quotient^0,c
  2449  00690A  0E00               	movlw	0
  2450  00690C  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2451  00690E  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2452  006910  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2453  006912                     l3374:
  2454  006912  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2455  006916  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2456  00691A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2457  00691E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2458  006922  0012               	return		;funcret
  2459  006924                     __end_of___aldiv:
  2460                           	callstack 0
  2461                           
  2462 ;; *************** function _lcdInit *****************
  2463 ;; Defined at:
  2464 ;;		line 72 in file "lcd.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;		None
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;		None
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2478 ;;      Params:         0       0       0       0       0       0       0
  2479 ;;      Locals:         0       0       0       0       0       0       0
  2480 ;;      Temps:          0       0       0       0       0       0       0
  2481 ;;      Totals:         0       0       0       0       0       0       0
  2482 ;;Total ram usage:        0 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; Hardware stack levels required when called: 5
  2485 ;; This function calls:
  2486 ;;		_delayMicro
  2487 ;;		_delayMili
  2488 ;;		_lcdCommand
  2489 ;;		_pinMode
  2490 ;;		_pushNibble
  2491 ;;		_soInit
  2492 ;; This function is called by:
  2493 ;;		_main
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text10
  2498  0065BE                     __ptext10:
  2499                           	callstack 0
  2500  0065BE                     _lcdInit:
  2501                           	callstack 25
  2502  0065BE                     
  2503                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2504  0065BE  0E00               	movlw	0
  2505  0065C0  6E02               	movwf	(pinMode@pin+1)^0,c
  2506  0065C2  0E1C               	movlw	28
  2507  0065C4  6E01               	movwf	pinMode@pin^0,c
  2508  0065C6  0E00               	movlw	0
  2509  0065C8  6E04               	movwf	(pinMode@type+1)^0,c
  2510  0065CA  0E00               	movlw	0
  2511  0065CC  6E03               	movwf	pinMode@type^0,c
  2512  0065CE  EC8C  F03B         	call	_pinMode	;wreg free
  2513                           
  2514                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2515  0065D2  0E00               	movlw	0
  2516  0065D4  6E02               	movwf	(pinMode@pin+1)^0,c
  2517  0065D6  0E1D               	movlw	29
  2518  0065D8  6E01               	movwf	pinMode@pin^0,c
  2519  0065DA  0E00               	movlw	0
  2520  0065DC  6E04               	movwf	(pinMode@type+1)^0,c
  2521  0065DE  0E00               	movlw	0
  2522  0065E0  6E03               	movwf	pinMode@type^0,c
  2523  0065E2  EC8C  F03B         	call	_pinMode	;wreg free
  2524                           
  2525                           ;lcd.c: 75:  soInit();
  2526  0065E6  EC38  F02D         	call	_soInit	;wreg free
  2527                           
  2528                           ;lcd.c: 76:  delayMili(15);
  2529  0065EA  0E00               	movlw	0
  2530  0065EC  6E02               	movwf	(delayMili@a+1)^0,c
  2531  0065EE  0E0F               	movlw	15
  2532  0065F0  6E01               	movwf	delayMili@a^0,c
  2533  0065F2  EC66  F02C         	call	_delayMili	;wreg free
  2534                           
  2535                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2536  0065F6  0E00               	movlw	0
  2537  0065F8  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2538  0065FA  0E00               	movlw	0
  2539  0065FC  6E0A               	movwf	pushNibble@rs^0,c
  2540  0065FE  0E03               	movlw	3
  2541  006600  ECC1  F02B         	call	_pushNibble
  2542                           
  2543                           ;lcd.c: 79:  delayMili(5);
  2544  006604  0E00               	movlw	0
  2545  006606  6E02               	movwf	(delayMili@a+1)^0,c
  2546  006608  0E05               	movlw	5
  2547  00660A  6E01               	movwf	delayMili@a^0,c
  2548  00660C  EC66  F02C         	call	_delayMili	;wreg free
  2549                           
  2550                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2551  006610  0E00               	movlw	0
  2552  006612  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2553  006614  0E00               	movlw	0
  2554  006616  6E0A               	movwf	pushNibble@rs^0,c
  2555  006618  0E03               	movlw	3
  2556  00661A  ECC1  F02B         	call	_pushNibble
  2557  00661E                     
  2558                           ;lcd.c: 81:  delayMicro(160);
  2559  00661E  0E00               	movlw	0
  2560  006620  6E02               	movwf	(delayMicro@a+1)^0,c
  2561  006622  0EA0               	movlw	160
  2562  006624  6E01               	movwf	delayMicro@a^0,c
  2563  006626  EC3A  F02B         	call	_delayMicro	;wreg free
  2564  00662A                     
  2565                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2566  00662A  0E00               	movlw	0
  2567  00662C  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2568  00662E  0E00               	movlw	0
  2569  006630  6E0A               	movwf	pushNibble@rs^0,c
  2570  006632  0E03               	movlw	3
  2571  006634  ECC1  F02B         	call	_pushNibble
  2572                           
  2573                           ;lcd.c: 83:  delayMicro(160);
  2574  006638  0E00               	movlw	0
  2575  00663A  6E02               	movwf	(delayMicro@a+1)^0,c
  2576  00663C  0EA0               	movlw	160
  2577  00663E  6E01               	movwf	delayMicro@a^0,c
  2578  006640  EC3A  F02B         	call	_delayMicro	;wreg free
  2579  006644                     
  2580                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2581  006644  0E00               	movlw	0
  2582  006646  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2583  006648  0E00               	movlw	0
  2584  00664A  6E0A               	movwf	pushNibble@rs^0,c
  2585  00664C  0E02               	movlw	2
  2586  00664E  ECC1  F02B         	call	_pushNibble
  2587  006652                     
  2588                           ;lcd.c: 86:  delayMili(10);
  2589  006652  0E00               	movlw	0
  2590  006654  6E02               	movwf	(delayMili@a+1)^0,c
  2591  006656  0E0A               	movlw	10
  2592  006658  6E01               	movwf	delayMili@a^0,c
  2593  00665A  EC66  F02C         	call	_delayMili	;wreg free
  2594  00665E                     
  2595                           ;lcd.c: 88:  lcdCommand(0x28);
  2596  00665E  0E28               	movlw	40
  2597  006660  EC7F  F02B         	call	_lcdCommand
  2598  006664                     
  2599                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2600  006664  0E0C               	movlw	12
  2601  006666  EC7F  F02B         	call	_lcdCommand
  2602  00666A                     
  2603                           ;lcd.c: 90:  lcdCommand(0x01);
  2604  00666A  0E01               	movlw	1
  2605  00666C  EC7F  F02B         	call	_lcdCommand
  2606  006670  0012               	return		;funcret
  2607  006672                     __end_of_lcdInit:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _pushNibble *****************
  2611 ;; Defined at:
  2612 ;;		line 25 in file "lcd.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  value           1    wreg     unsigned char 
  2615 ;;  rs              2    9[COMRAM] int 
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  value           1   11[COMRAM] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2627 ;;      Params:         2       0       0       0       0       0       0
  2628 ;;      Locals:         1       0       0       0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0
  2630 ;;      Totals:         3       0       0       0       0       0       0
  2631 ;;Total ram usage:        3 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; Hardware stack levels required when called: 3
  2634 ;; This function calls:
  2635 ;;		_digitalWrite
  2636 ;;		_pulseEnablePin
  2637 ;;		_soWrite
  2638 ;; This function is called by:
  2639 ;;		_lcdInit
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text11
  2644  005782                     __ptext11:
  2645                           	callstack 0
  2646  005782                     _pushNibble:
  2647                           	callstack 26
  2648                           
  2649                           ;incstack = 0
  2650                           ;pushNibble@value stored from wreg
  2651  005782  6E0C               	movwf	pushNibble@value^0,c
  2652  005784                     
  2653                           ;lcd.c: 26:  soWrite(value);
  2654  005784  C00C  F007         	movff	pushNibble@value,soWrite@value
  2655  005788  6A08               	clrf	(soWrite@value+1)^0,c
  2656  00578A  EC22  F02E         	call	_soWrite	;wreg free
  2657                           
  2658                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2659  00578E  0E00               	movlw	0
  2660  005790  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2661  005792  0E1D               	movlw	29
  2662  005794  6E01               	movwf	digitalWrite@pin^0,c
  2663  005796  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  2664  00579A  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  2665  00579E  EC65  F03A         	call	_digitalWrite	;wreg free
  2666                           
  2667                           ;lcd.c: 28:  pulseEnablePin();
  2668  0057A2  EC76  F02D         	call	_pulseEnablePin	;wreg free
  2669  0057A6  0012               	return		;funcret
  2670  0057A8                     __end_of_pushNibble:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function _kpRead *****************
  2674 ;; Defined at:
  2675 ;;		line 14 in file "keypad.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  2    0[COMRAM] unsigned int 
  2682 ;; Registers used:
  2683 ;;		None
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2689 ;;      Params:         2       0       0       0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0
  2692 ;;      Totals:         2       0       0       0       0       0       0
  2693 ;;Total ram usage:        2 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text12
  2703  005686                     __ptext12:
  2704                           	callstack 0
  2705  005686                     _kpRead:
  2706                           	callstack 30
  2707  005686                     
  2708                           ;keypad.c: 15:     return keys;
  2709  005686  C04A  F001         	movff	_keys,?_kpRead
  2710  00568A  C04B  F002         	movff	_keys+1,?_kpRead+1
  2711  00568E  0012               	return		;funcret
  2712  005690                     __end_of_kpRead:
  2713                           	callstack 0
  2714                           
  2715 ;; *************** function _kpInit *****************
  2716 ;; Defined at:
  2717 ;;		line 54 in file "keypad.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2731 ;;      Params:         0       0       0       0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0
  2734 ;;      Totals:         0       0       0       0       0       0       0
  2735 ;;Total ram usage:        0 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; Hardware stack levels required when called: 2
  2738 ;; This function calls:
  2739 ;;		_pinMode
  2740 ;;		_soInit
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text13
  2747  00595E                     __ptext13:
  2748                           	callstack 0
  2749  00595E                     _kpInit:
  2750                           	callstack 28
  2751  00595E                     
  2752                           ;keypad.c: 55:   soInit();
  2753  00595E  EC38  F02D         	call	_soInit	;wreg free
  2754                           
  2755                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  2756  005962  0E00               	movlw	0
  2757  005964  6E02               	movwf	(pinMode@pin+1)^0,c
  2758  005966  0E0A               	movlw	10
  2759  005968  6E01               	movwf	pinMode@pin^0,c
  2760  00596A  0E00               	movlw	0
  2761  00596C  6E04               	movwf	(pinMode@type+1)^0,c
  2762  00596E  0E01               	movlw	1
  2763  005970  6E03               	movwf	pinMode@type^0,c
  2764  005972  EC8C  F03B         	call	_pinMode	;wreg free
  2765                           
  2766                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  2767  005976  0E00               	movlw	0
  2768  005978  6E02               	movwf	(pinMode@pin+1)^0,c
  2769  00597A  0E09               	movlw	9
  2770  00597C  6E01               	movwf	pinMode@pin^0,c
  2771  00597E  0E00               	movlw	0
  2772  005980  6E04               	movwf	(pinMode@type+1)^0,c
  2773  005982  0E01               	movlw	1
  2774  005984  6E03               	movwf	pinMode@type^0,c
  2775  005986  EC8C  F03B         	call	_pinMode	;wreg free
  2776  00598A                     
  2777                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  2778  00598A  0E0C               	movlw	12
  2779  00598C  6EC1               	movwf	193,c	;volatile
  2780  00598E  0012               	return		;funcret
  2781  005990                     __end_of_kpInit:
  2782                           	callstack 0
  2783                           
  2784 ;; *************** function _soInit *****************
  2785 ;; Defined at:
  2786 ;;		line 3 in file "so.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, status,2, status,0, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2800 ;;      Params:         0       0       0       0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0
  2803 ;;      Totals:         0       0       0       0       0       0       0
  2804 ;;Total ram usage:        0 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; Hardware stack levels required when called: 1
  2807 ;; This function calls:
  2808 ;;		_pinMode
  2809 ;; This function is called by:
  2810 ;;		_kpInit
  2811 ;;		_lcdInit
  2812 ;;		_ssdInit
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text14
  2817  005A70                     __ptext14:
  2818                           	callstack 0
  2819  005A70                     _soInit:
  2820                           	callstack 28
  2821  005A70                     
  2822                           ;so.c: 4:  pinMode(PIN_D7, 0);
  2823  005A70  0E00               	movlw	0
  2824  005A72  6E02               	movwf	(pinMode@pin+1)^0,c
  2825  005A74  0E1F               	movlw	31
  2826  005A76  6E01               	movwf	pinMode@pin^0,c
  2827  005A78  0E00               	movlw	0
  2828  005A7A  6E04               	movwf	(pinMode@type+1)^0,c
  2829  005A7C  0E00               	movlw	0
  2830  005A7E  6E03               	movwf	pinMode@type^0,c
  2831  005A80  EC8C  F03B         	call	_pinMode	;wreg free
  2832                           
  2833                           ;so.c: 5:  pinMode(PIN_B0, 0);
  2834  005A84  0E00               	movlw	0
  2835  005A86  6E02               	movwf	(pinMode@pin+1)^0,c
  2836  005A88  0E08               	movlw	8
  2837  005A8A  6E01               	movwf	pinMode@pin^0,c
  2838  005A8C  0E00               	movlw	0
  2839  005A8E  6E04               	movwf	(pinMode@type+1)^0,c
  2840  005A90  0E00               	movlw	0
  2841  005A92  6E03               	movwf	pinMode@type^0,c
  2842  005A94  EC8C  F03B         	call	_pinMode	;wreg free
  2843                           
  2844                           ;so.c: 6:  pinMode(PIN_D6, 0);
  2845  005A98  0E00               	movlw	0
  2846  005A9A  6E02               	movwf	(pinMode@pin+1)^0,c
  2847  005A9C  0E1E               	movlw	30
  2848  005A9E  6E01               	movwf	pinMode@pin^0,c
  2849  005AA0  0E00               	movlw	0
  2850  005AA2  6E04               	movwf	(pinMode@type+1)^0,c
  2851  005AA4  0E00               	movlw	0
  2852  005AA6  6E03               	movwf	pinMode@type^0,c
  2853  005AA8  EC8C  F03B         	call	_pinMode	;wreg free
  2854  005AAC  0012               	return		;funcret
  2855  005AAE                     __end_of_soInit:
  2856                           	callstack 0
  2857                           
  2858 ;; *************** function _kpDebounce *****************
  2859 ;; Defined at:
  2860 ;;		line 27 in file "keypad.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  i               2   12[COMRAM] int 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2874 ;;      Params:         0       0       0       0       0       0       0
  2875 ;;      Locals:         2       0       0       0       0       0       0
  2876 ;;      Temps:          3       0       0       0       0       0       0
  2877 ;;      Totals:         5       0       0       0       0       0       0
  2878 ;;Total ram usage:        5 bytes
  2879 ;; Hardware stack levels used: 1
  2880 ;; Hardware stack levels required when called: 3
  2881 ;; This function calls:
  2882 ;;		_digitalRead
  2883 ;;		_soWrite
  2884 ;; This function is called by:
  2885 ;;		_main
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text15
  2890  006C74                     __ptext15:
  2891                           	callstack 0
  2892  006C74                     _kpDebounce:
  2893                           	callstack 27
  2894  006C74                     
  2895                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  2896  006C74  0E00               	movlw	0
  2897  006C76  6E49               	movwf	(kpDebounce@newRead+1)^0,c
  2898  006C78  0E00               	movlw	0
  2899  006C7A  6E48               	movwf	kpDebounce@newRead^0,c
  2900                           
  2901                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  2902  006C7C  0E00               	movlw	0
  2903  006C7E  6E0E               	movwf	(kpDebounce@i+1)^0,c
  2904  006C80  0E00               	movlw	0
  2905  006C82  6E0D               	movwf	kpDebounce@i^0,c
  2906  006C84                     l3920:
  2907  006C84  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  2908  006C86  EF4E  F036         	goto	u3211
  2909  006C8A  500E               	movf	(kpDebounce@i+1)^0,w,c
  2910  006C8C  E109               	bnz	u3210
  2911  006C8E  0E05               	movlw	5
  2912  006C90  5C0D               	subwf	kpDebounce@i^0,w,c
  2913  006C92  A0D8               	btfss	status,0,c
  2914  006C94  EF4E  F036         	goto	u3211
  2915  006C98  EF50  F036         	goto	u3210
  2916  006C9C                     u3211:
  2917  006C9C  EF52  F036         	goto	l3924
  2918  006CA0                     u3210:
  2919  006CA0  EFB3  F036         	goto	l3936
  2920  006CA4                     l3924:
  2921                           
  2922                           ;keypad.c: 35:       soWrite(1<<(i+3));
  2923  006CA4  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2924  006CA8  0E03               	movlw	3
  2925  006CAA  260A               	addwf	??_kpDebounce^0,f,c
  2926  006CAC  0E01               	movlw	1
  2927  006CAE  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2928  006CB0  0E00               	movlw	0
  2929  006CB2  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2930  006CB4  2A0A               	incf	??_kpDebounce^0,f,c
  2931  006CB6  EF60  F036         	goto	u3224
  2932  006CBA                     u3225:
  2933  006CBA  90D8               	bcf	status,0,c
  2934  006CBC  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2935  006CBE  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2936  006CC0                     u3224:
  2937  006CC0  2E0A               	decfsz	??_kpDebounce^0,f,c
  2938  006CC2  EF5D  F036         	goto	u3225
  2939  006CC6  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  2940  006CCA  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  2941  006CCE  EC22  F02E         	call	_soWrite	;wreg free
  2942                           
  2943                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  2944  006CD2  0E00               	movlw	0
  2945  006CD4  6E02               	movwf	(digitalRead@pin+1)^0,c
  2946  006CD6  0E0A               	movlw	10
  2947  006CD8  6E01               	movwf	digitalRead@pin^0,c
  2948  006CDA  ECD5  F036         	call	_digitalRead	;wreg free
  2949  006CDE  5001               	movf	?_digitalRead^0,w,c
  2950  006CE0  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2951  006CE2  B4D8               	btfsc	status,2,c
  2952  006CE4  EF76  F036         	goto	u3231
  2953  006CE8  EF78  F036         	goto	u3230
  2954  006CEC                     u3231:
  2955  006CEC  EF8B  F036         	goto	l3928
  2956  006CF0                     u3230:
  2957  006CF0                     
  2958                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  2959  006CF0  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2960  006CF4  0E01               	movlw	1
  2961  006CF6  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2962  006CF8  0E00               	movlw	0
  2963  006CFA  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2964  006CFC  2A0A               	incf	??_kpDebounce^0,f,c
  2965  006CFE  EF84  F036         	goto	u3244
  2966  006D02                     u3245:
  2967  006D02  90D8               	bcf	status,0,c
  2968  006D04  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2969  006D06  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2970  006D08                     u3244:
  2971  006D08  2E0A               	decfsz	??_kpDebounce^0,f,c
  2972  006D0A  EF81  F036         	goto	u3245
  2973  006D0E  500B               	movf	(??_kpDebounce+1)^0,w,c
  2974  006D10  1248               	iorwf	kpDebounce@newRead^0,f,c
  2975  006D12  500C               	movf	(??_kpDebounce+2)^0,w,c
  2976  006D14  1249               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2977  006D16                     l3928:
  2978                           
  2979                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  2980  006D16  0E00               	movlw	0
  2981  006D18  6E02               	movwf	(digitalRead@pin+1)^0,c
  2982  006D1A  0E09               	movlw	9
  2983  006D1C  6E01               	movwf	digitalRead@pin^0,c
  2984  006D1E  ECD5  F036         	call	_digitalRead	;wreg free
  2985  006D22  5001               	movf	?_digitalRead^0,w,c
  2986  006D24  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2987  006D26  B4D8               	btfsc	status,2,c
  2988  006D28  EF98  F036         	goto	u3251
  2989  006D2C  EF9A  F036         	goto	u3250
  2990  006D30                     u3251:
  2991  006D30  EFAF  F036         	goto	l3932
  2992  006D34                     u3250:
  2993  006D34                     
  2994                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  2995  006D34  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2996  006D38  0E05               	movlw	5
  2997  006D3A  260A               	addwf	??_kpDebounce^0,f,c
  2998  006D3C  0E01               	movlw	1
  2999  006D3E  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3000  006D40  0E00               	movlw	0
  3001  006D42  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3002  006D44  2A0A               	incf	??_kpDebounce^0,f,c
  3003  006D46  EFA8  F036         	goto	u3264
  3004  006D4A                     u3265:
  3005  006D4A  90D8               	bcf	status,0,c
  3006  006D4C  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3007  006D4E  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3008  006D50                     u3264:
  3009  006D50  2E0A               	decfsz	??_kpDebounce^0,f,c
  3010  006D52  EFA5  F036         	goto	u3265
  3011  006D56  500B               	movf	(??_kpDebounce+1)^0,w,c
  3012  006D58  1248               	iorwf	kpDebounce@newRead^0,f,c
  3013  006D5A  500C               	movf	(??_kpDebounce+2)^0,w,c
  3014  006D5C  1249               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3015  006D5E                     l3932:
  3016                           
  3017                           ;keypad.c: 42:     }
  3018  006D5E  4A0D               	infsnz	kpDebounce@i^0,f,c
  3019  006D60  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  3020  006D62  EF42  F036         	goto	l3920
  3021  006D66                     l3936:
  3022                           
  3023                           ;keypad.c: 43:     if (oldRead == newRead) {
  3024  006D66  5048               	movf	kpDebounce@newRead^0,w,c
  3025  006D68  1846               	xorwf	kpDebounce@oldRead^0,w,c
  3026  006D6A  E107               	bnz	u3271
  3027  006D6C  5049               	movf	(kpDebounce@newRead+1)^0,w,c
  3028  006D6E  1847               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3029  006D70  A4D8               	btfss	status,2,c
  3030  006D72  EFBD  F036         	goto	u3271
  3031  006D76  EFBF  F036         	goto	u3270
  3032  006D7A                     u3271:
  3033  006D7A  EFC2  F036         	goto	l3940
  3034  006D7E                     u3270:
  3035  006D7E                     
  3036                           ;keypad.c: 44:         tempo--;
  3037  006D7E  0651               	decf	kpDebounce@tempo^0,f,c
  3038                           
  3039                           ;keypad.c: 45:     } else {
  3040  006D80  EFC8  F036         	goto	l443
  3041  006D84                     l3940:
  3042                           
  3043                           ;keypad.c: 46:         tempo = 1;
  3044  006D84  0E01               	movlw	1
  3045  006D86  6E51               	movwf	kpDebounce@tempo^0,c
  3046  006D88                     
  3047                           ;keypad.c: 47:         oldRead = newRead;
  3048  006D88  C048  F046         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3049  006D8C  C049  F047         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3050  006D90                     l443:
  3051                           
  3052                           ;keypad.c: 49:     if (tempo == 0) {
  3053  006D90  5051               	movf	kpDebounce@tempo^0,w,c
  3054  006D92  A4D8               	btfss	status,2,c
  3055  006D94  EFCE  F036         	goto	u3281
  3056  006D98  EFD0  F036         	goto	u3280
  3057  006D9C                     u3281:
  3058  006D9C  EFD4  F036         	goto	l445
  3059  006DA0                     u3280:
  3060  006DA0                     
  3061                           ;keypad.c: 50:         keys = oldRead;
  3062  006DA0  C046  F04A         	movff	kpDebounce@oldRead,_keys
  3063  006DA4  C047  F04B         	movff	kpDebounce@oldRead+1,_keys+1
  3064  006DA8                     l445:
  3065  006DA8  0012               	return		;funcret
  3066  006DAA                     __end_of_kpDebounce:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _adcInit *****************
  3070 ;; Defined at:
  3071 ;;		line 25 in file "adc.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3085 ;;      Params:         0       0       0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 1
  3092 ;; This function calls:
  3093 ;;		_pinMode
  3094 ;; This function is called by:
  3095 ;;		_main
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text16
  3100  005BFC                     __ptext16:
  3101                           	callstack 0
  3102  005BFC                     _adcInit:
  3103                           	callstack 29
  3104  005BFC                     
  3105                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  3106  005BFC  0E00               	movlw	0
  3107  005BFE  6E02               	movwf	(pinMode@pin+1)^0,c
  3108  005C00  0E00               	movlw	0
  3109  005C02  6E01               	movwf	pinMode@pin^0,c
  3110  005C04  0E00               	movlw	0
  3111  005C06  6E04               	movwf	(pinMode@type+1)^0,c
  3112  005C08  0E01               	movlw	1
  3113  005C0A  6E03               	movwf	pinMode@type^0,c
  3114  005C0C  EC8C  F03B         	call	_pinMode	;wreg free
  3115                           
  3116                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  3117  005C10  0E00               	movlw	0
  3118  005C12  6E02               	movwf	(pinMode@pin+1)^0,c
  3119  005C14  0E01               	movlw	1
  3120  005C16  6E01               	movwf	pinMode@pin^0,c
  3121  005C18  0E00               	movlw	0
  3122  005C1A  6E04               	movwf	(pinMode@type+1)^0,c
  3123  005C1C  0E01               	movlw	1
  3124  005C1E  6E03               	movwf	pinMode@type^0,c
  3125  005C20  EC8C  F03B         	call	_pinMode	;wreg free
  3126                           
  3127                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  3128  005C24  0E00               	movlw	0
  3129  005C26  6E02               	movwf	(pinMode@pin+1)^0,c
  3130  005C28  0E02               	movlw	2
  3131  005C2A  6E01               	movwf	pinMode@pin^0,c
  3132  005C2C  0E00               	movlw	0
  3133  005C2E  6E04               	movwf	(pinMode@type+1)^0,c
  3134  005C30  0E01               	movlw	1
  3135  005C32  6E03               	movwf	pinMode@type^0,c
  3136  005C34  EC8C  F03B         	call	_pinMode	;wreg free
  3137  005C38                     
  3138                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  3139  005C38  80C2               	bsf	194,0,c	;volatile
  3140  005C3A                     
  3141                           ;adc.c: 33:     ADCON1 = 0b00001100;
  3142  005C3A  0E0C               	movlw	12
  3143  005C3C  6EC1               	movwf	193,c	;volatile
  3144  005C3E                     
  3145                           ;adc.c: 34:     ADCON2 = 0b10101010;
  3146  005C3E  0EAA               	movlw	170
  3147  005C40  6EC0               	movwf	192,c	;volatile
  3148  005C42  0012               	return		;funcret
  3149  005C44                     __end_of_adcInit:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _Temperatura *****************
  3153 ;; Defined at:
  3154 ;;		line 279 in file "main.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  aux             1   49[COMRAM] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3168 ;;      Params:         0       0       0       0       0       0       0
  3169 ;;      Locals:         1       0       0       0       0       0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0
  3171 ;;      Totals:         1       0       0       0       0       0       0
  3172 ;;Total ram usage:        1 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; Hardware stack levels required when called: 3
  3175 ;; This function calls:
  3176 ;;		_LeSerial
  3177 ;; This function is called by:
  3178 ;;		_main
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text17
  3183  0057CE                     __ptext17:
  3184                           	callstack 0
  3185  0057CE                     _Temperatura:
  3186                           	callstack 27
  3187  0057CE                     
  3188                           ;main.c: 280:     unsigned char aux;;main.c: 281:     aux=LeSerial(50);
  3189  0057CE  0E00               	movlw	0
  3190  0057D0  6E2C               	movwf	(LeSerial@tempo+1)^0,c
  3191  0057D2  0E32               	movlw	50
  3192  0057D4  6E2B               	movwf	LeSerial@tempo^0,c
  3193  0057D6  EC8B  F031         	call	_LeSerial	;wreg free
  3194  0057DA  502B               	movf	?_LeSerial^0,w,c
  3195  0057DC  6E32               	movwf	Temperatura@aux^0,c
  3196  0057DE                     
  3197                           ;main.c: 282:     if(aux!=0)
  3198  0057DE  5032               	movf	Temperatura@aux^0,w,c
  3199  0057E0  B4D8               	btfsc	status,2,c
  3200  0057E2  EFF5  F02B         	goto	u3171
  3201  0057E6  EFF7  F02B         	goto	u3170
  3202  0057EA                     u3171:
  3203  0057EA  EFFA  F02B         	goto	l178
  3204  0057EE                     u3170:
  3205  0057EE                     
  3206                           ;main.c: 283:         temperatura=aux;
  3207  0057EE  C032  F077         	movff	Temperatura@aux,_temperatura
  3208  0057F2  6A78               	clrf	(_temperatura+1)^0,c
  3209  0057F4                     l178:
  3210  0057F4  0012               	return		;funcret
  3211  0057F6                     __end_of_Temperatura:
  3212                           	callstack 0
  3213                           
  3214 ;; *************** function _Telas *****************
  3215 ;; Defined at:
  3216 ;;		line 240 in file "main.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  valor           1   55[COMRAM] unsigned char 
  3221 ;;  anterior        1   54[COMRAM] unsigned char 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3231 ;;      Params:         0       0       0       0       0       0       0
  3232 ;;      Locals:         2       0       0       0       0       0       0
  3233 ;;      Temps:          2       0       0       0       0       0       0
  3234 ;;      Totals:         4       0       0       0       0       0       0
  3235 ;;Total ram usage:        4 bytes
  3236 ;; Hardware stack levels used: 1
  3237 ;; Hardware stack levels required when called: 7
  3238 ;; This function calls:
  3239 ;;		_Cronometro
  3240 ;;		___awdiv
  3241 ;;		___awmod
  3242 ;;		_adcRead
  3243 ;;		_data
  3244 ;;		_lcdChar
  3245 ;;		_lcdPosition
  3246 ;;		_lcdString
  3247 ;;		_musicas
  3248 ;;		_radios
  3249 ;;		_volume
  3250 ;; This function is called by:
  3251 ;;		_main
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text18
  3256  007082                     __ptext18:
  3257                           	callstack 0
  3258  007082                     _Telas:
  3259                           	callstack 23
  3260  007082                     
  3261                           ;main.c: 241:     unsigned char valor,anterior;;main.c: 242:     valor = adcRead(1)/64;
  3262  007082  0E00               	movlw	0
  3263  007084  6E02               	movwf	(adcRead@channel+1)^0,c
  3264  007086  0E01               	movlw	1
  3265  007088  6E01               	movwf	adcRead@channel^0,c
  3266  00708A  EC71  F02E         	call	_adcRead	;wreg free
  3267  00708E  C001  F013         	movff	?_adcRead,___awdiv@dividend
  3268  007092  C002  F014         	movff	?_adcRead+1,___awdiv@dividend+1
  3269  007096  0E00               	movlw	0
  3270  007098  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3271  00709A  0E40               	movlw	64
  3272  00709C  6E15               	movwf	___awdiv@divisor^0,c
  3273  00709E  EC39  F033         	call	___awdiv	;wreg free
  3274  0070A2  5013               	movf	?___awdiv^0,w,c
  3275  0070A4  6E38               	movwf	Telas@valor^0,c
  3276  0070A6                     
  3277                           ;main.c: 243:     if(valor!=anterior) change=1;
  3278  0070A6  5037               	movf	Telas@anterior^0,w,c
  3279  0070A8  1838               	xorwf	Telas@valor^0,w,c
  3280  0070AA  B4D8               	btfsc	status,2,c
  3281  0070AC  EF5A  F038         	goto	u3151
  3282  0070B0  EF5C  F038         	goto	u3150
  3283  0070B4                     u3151:
  3284  0070B4  EF5E  F038         	goto	l165
  3285  0070B8                     u3150:
  3286  0070B8  0E01               	movlw	1
  3287  0070BA  6E7B               	movwf	_change^0,c
  3288  0070BC                     l165:
  3289                           
  3290                           ;main.c: 244:     if(change){
  3291  0070BC  507B               	movf	_change^0,w,c
  3292  0070BE  B4D8               	btfsc	status,2,c
  3293  0070C0  EF64  F038         	goto	u3161
  3294  0070C4  EF66  F038         	goto	u3160
  3295  0070C8                     u3161:
  3296  0070C8  EF52  F039         	goto	l174
  3297  0070CC                     u3160:
  3298  0070CC  EF33  F039         	goto	l3762
  3299  0070D0                     l3728:
  3300                           
  3301                           ;main.c: 247:                 data();
  3302  0070D0  ECB3  F03C         	call	_data	;wreg free
  3303                           
  3304                           ;main.c: 248:                 break;
  3305  0070D4  EF50  F039         	goto	l3764
  3306  0070D8                     l3730:
  3307                           
  3308                           ;main.c: 250:                 lcdPosition(0,0);
  3309  0070D8  0E00               	movlw	0
  3310  0070DA  6E10               	movwf	(lcdPosition@line+1)^0,c
  3311  0070DC  0E00               	movlw	0
  3312  0070DE  6E0F               	movwf	lcdPosition@line^0,c
  3313  0070E0  0E00               	movlw	0
  3314  0070E2  6E12               	movwf	(lcdPosition@col+1)^0,c
  3315  0070E4  0E00               	movlw	0
  3316  0070E6  6E11               	movwf	lcdPosition@col^0,c
  3317  0070E8  EC1B  F02D         	call	_lcdPosition	;wreg free
  3318  0070EC                     
  3319                           ;main.c: 251:                 musicas(musica);
  3320  0070EC  507A               	movf	_musica^0,w,c
  3321  0070EE  EC86  F032         	call	_musicas
  3322  0070F2                     
  3323                           ;main.c: 252:                 lcdPosition(1,0);
  3324  0070F2  0E00               	movlw	0
  3325  0070F4  6E10               	movwf	(lcdPosition@line+1)^0,c
  3326  0070F6  0E01               	movlw	1
  3327  0070F8  6E0F               	movwf	lcdPosition@line^0,c
  3328  0070FA  0E00               	movlw	0
  3329  0070FC  6E12               	movwf	(lcdPosition@col+1)^0,c
  3330  0070FE  0E00               	movlw	0
  3331  007100  6E11               	movwf	lcdPosition@col^0,c
  3332  007102  EC1B  F02D         	call	_lcdPosition	;wreg free
  3333  007106                     
  3334                           ;main.c: 253:                 volume(valor);
  3335  007106  5038               	movf	Telas@valor^0,w,c
  3336  007108  EC72  F02F         	call	_volume
  3337                           
  3338                           ;main.c: 254:                 break;
  3339  00710C  EF50  F039         	goto	l3764
  3340  007110                     l3738:
  3341                           
  3342                           ;main.c: 256:                 lcdPosition(0,0);
  3343  007110  0E00               	movlw	0
  3344  007112  6E10               	movwf	(lcdPosition@line+1)^0,c
  3345  007114  0E00               	movlw	0
  3346  007116  6E0F               	movwf	lcdPosition@line^0,c
  3347  007118  0E00               	movlw	0
  3348  00711A  6E12               	movwf	(lcdPosition@col+1)^0,c
  3349  00711C  0E00               	movlw	0
  3350  00711E  6E11               	movwf	lcdPosition@col^0,c
  3351  007120  EC1B  F02D         	call	_lcdPosition	;wreg free
  3352  007124                     
  3353                           ;main.c: 257:                 radios(freq);
  3354  007124  5079               	movf	_freq^0,w,c
  3355  007126  EC9B  F033         	call	_radios
  3356  00712A                     
  3357                           ;main.c: 258:                 lcdChar((radio[freq]/1000%10)+48);
  3358  00712A  0E03               	movlw	3
  3359  00712C  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3360  00712E  0EE8               	movlw	232
  3361  007130  6E15               	movwf	___awdiv@divisor^0,c
  3362  007132  5079               	movf	_freq^0,w,c
  3363  007134  0D02               	mullw	2
  3364  007136  0EEA               	movlw	low _radio
  3365  007138  24F3               	addwf	243,w,c
  3366  00713A  6EF6               	movwf	tblptrl,c
  3367  00713C  0E7D               	movlw	high _radio
  3368  00713E  20F4               	addwfc	244,w,c
  3369  007140  6EF7               	movwf	tblptrh,c
  3370  007142                     	if	0	;There are less than 3 active tblptr bytes
  3371  007142                     	endif
  3372  007142  0009               	tblrd		*+
  3373  007144  CFF5 F013          	movff	tablat,___awdiv@dividend
  3374  007148  000A               	tblrd		*-
  3375  00714A  CFF5 F014          	movff	tablat,___awdiv@dividend+1
  3376  00714E  EC39  F033         	call	___awdiv	;wreg free
  3377  007152  C013  F025         	movff	?___awdiv,___awmod@dividend
  3378  007156  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  3379  00715A  0E00               	movlw	0
  3380  00715C  6E28               	movwf	(___awmod@divisor+1)^0,c
  3381  00715E  0E0A               	movlw	10
  3382  007160  6E27               	movwf	___awmod@divisor^0,c
  3383  007162  ECD6  F031         	call	___awmod	;wreg free
  3384  007166  5025               	movf	?___awmod^0,w,c
  3385  007168  0F30               	addlw	48
  3386  00716A  EC8E  F02B         	call	_lcdChar
  3387  00716E                     
  3388                           ;main.c: 259:                 lcdChar((radio[freq]/100%10)+48);
  3389  00716E  0E00               	movlw	0
  3390  007170  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3391  007172  0E64               	movlw	100
  3392  007174  6E15               	movwf	___awdiv@divisor^0,c
  3393  007176  5079               	movf	_freq^0,w,c
  3394  007178  0D02               	mullw	2
  3395  00717A  0EEA               	movlw	low _radio
  3396  00717C  24F3               	addwf	243,w,c
  3397  00717E  6EF6               	movwf	tblptrl,c
  3398  007180  0E7D               	movlw	high _radio
  3399  007182  20F4               	addwfc	244,w,c
  3400  007184  6EF7               	movwf	tblptrh,c
  3401  007186                     	if	0	;There are less than 3 active tblptr bytes
  3402  007186                     	endif
  3403  007186  0009               	tblrd		*+
  3404  007188  CFF5 F013          	movff	tablat,___awdiv@dividend
  3405  00718C  000A               	tblrd		*-
  3406  00718E  CFF5 F014          	movff	tablat,___awdiv@dividend+1
  3407  007192  EC39  F033         	call	___awdiv	;wreg free
  3408  007196  C013  F025         	movff	?___awdiv,___awmod@dividend
  3409  00719A  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  3410  00719E  0E00               	movlw	0
  3411  0071A0  6E28               	movwf	(___awmod@divisor+1)^0,c
  3412  0071A2  0E0A               	movlw	10
  3413  0071A4  6E27               	movwf	___awmod@divisor^0,c
  3414  0071A6  ECD6  F031         	call	___awmod	;wreg free
  3415  0071AA  5025               	movf	?___awmod^0,w,c
  3416  0071AC  0F30               	addlw	48
  3417  0071AE  EC8E  F02B         	call	_lcdChar
  3418  0071B2                     
  3419                           ;main.c: 260:                 lcdChar((radio[freq]/10%10)+48);
  3420  0071B2  0E00               	movlw	0
  3421  0071B4  6E16               	movwf	(___awdiv@divisor+1)^0,c
  3422  0071B6  0E0A               	movlw	10
  3423  0071B8  6E15               	movwf	___awdiv@divisor^0,c
  3424  0071BA  5079               	movf	_freq^0,w,c
  3425  0071BC  0D02               	mullw	2
  3426  0071BE  0EEA               	movlw	low _radio
  3427  0071C0  24F3               	addwf	243,w,c
  3428  0071C2  6EF6               	movwf	tblptrl,c
  3429  0071C4  0E7D               	movlw	high _radio
  3430  0071C6  20F4               	addwfc	244,w,c
  3431  0071C8  6EF7               	movwf	tblptrh,c
  3432  0071CA                     	if	0	;There are less than 3 active tblptr bytes
  3433  0071CA                     	endif
  3434  0071CA  0009               	tblrd		*+
  3435  0071CC  CFF5 F013          	movff	tablat,___awdiv@dividend
  3436  0071D0  000A               	tblrd		*-
  3437  0071D2  CFF5 F014          	movff	tablat,___awdiv@dividend+1
  3438  0071D6  EC39  F033         	call	___awdiv	;wreg free
  3439  0071DA  C013  F025         	movff	?___awdiv,___awmod@dividend
  3440  0071DE  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  3441  0071E2  0E00               	movlw	0
  3442  0071E4  6E28               	movwf	(___awmod@divisor+1)^0,c
  3443  0071E6  0E0A               	movlw	10
  3444  0071E8  6E27               	movwf	___awmod@divisor^0,c
  3445  0071EA  ECD6  F031         	call	___awmod	;wreg free
  3446  0071EE  5025               	movf	?___awmod^0,w,c
  3447  0071F0  0F30               	addlw	48
  3448  0071F2  EC8E  F02B         	call	_lcdChar
  3449  0071F6                     
  3450                           ;main.c: 261:                 lcdChar(',');
  3451  0071F6  0E2C               	movlw	44
  3452  0071F8  EC8E  F02B         	call	_lcdChar
  3453  0071FC                     
  3454                           ;main.c: 262:                 lcdChar((radio[freq]%10)+48);
  3455  0071FC  5079               	movf	_freq^0,w,c
  3456  0071FE  0D02               	mullw	2
  3457  007200  0EEA               	movlw	low _radio
  3458  007202  24F3               	addwf	243,w,c
  3459  007204  6EF6               	movwf	tblptrl,c
  3460  007206  0E7D               	movlw	high _radio
  3461  007208  20F4               	addwfc	244,w,c
  3462  00720A  6EF7               	movwf	tblptrh,c
  3463  00720C                     	if	0	;There are less than 3 active tblptr bytes
  3464  00720C                     	endif
  3465  00720C  0009               	tblrd		*+
  3466  00720E  CFF5 F025          	movff	tablat,___awmod@dividend
  3467  007212  000A               	tblrd		*-
  3468  007214  CFF5 F026          	movff	tablat,___awmod@dividend+1
  3469  007218  0E00               	movlw	0
  3470  00721A  6E28               	movwf	(___awmod@divisor+1)^0,c
  3471  00721C  0E0A               	movlw	10
  3472  00721E  6E27               	movwf	___awmod@divisor^0,c
  3473  007220  ECD6  F031         	call	___awmod	;wreg free
  3474  007224  5025               	movf	?___awmod^0,w,c
  3475  007226  0F30               	addlw	48
  3476  007228  EC8E  F02B         	call	_lcdChar
  3477                           
  3478                           ;main.c: 263:                 lcdString("   ");
  3479  00722C  0EF7               	movlw	low (STR_25+3)
  3480  00722E  6E0F               	movwf	lcdString@msg^0,c
  3481  007230  0E7F               	movlw	high (STR_25+3)
  3482  007232  6E10               	movwf	(lcdString@msg+1)^0,c
  3483  007234  ECC3  F02E         	call	_lcdString	;wreg free
  3484  007238                     
  3485                           ;main.c: 264:                 lcdPosition(1,0);
  3486  007238  0E00               	movlw	0
  3487  00723A  6E10               	movwf	(lcdPosition@line+1)^0,c
  3488  00723C  0E01               	movlw	1
  3489  00723E  6E0F               	movwf	lcdPosition@line^0,c
  3490  007240  0E00               	movlw	0
  3491  007242  6E12               	movwf	(lcdPosition@col+1)^0,c
  3492  007244  0E00               	movlw	0
  3493  007246  6E11               	movwf	lcdPosition@col^0,c
  3494  007248  EC1B  F02D         	call	_lcdPosition	;wreg free
  3495  00724C                     
  3496                           ;main.c: 265:                 volume(valor);
  3497  00724C  5038               	movf	Telas@valor^0,w,c
  3498  00724E  EC72  F02F         	call	_volume
  3499                           
  3500                           ;main.c: 266:                 break;
  3501  007252  EF50  F039         	goto	l3764
  3502  007256                     l3756:
  3503                           
  3504                           ;main.c: 268:                 Cronometro();
  3505  007256  EC92  F034         	call	_Cronometro	;wreg free
  3506                           
  3507                           ;main.c: 269:                 break;
  3508  00725A  EF50  F039         	goto	l3764
  3509  00725E                     l3758:
  3510                           
  3511                           ;main.c: 271:                 tela=0;
  3512  00725E  0E00               	movlw	0
  3513  007260  6E53               	movwf	_tela^0,c
  3514                           
  3515                           ;main.c: 272:                 break;
  3516  007262  EF50  F039         	goto	l3764
  3517  007266                     l3762:
  3518  007266  5053               	movf	_tela^0,w,c
  3519  007268  6E35               	movwf	??_Telas^0,c
  3520  00726A  6A36               	clrf	(??_Telas+1)^0,c
  3521                           
  3522                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3523                           ; Switch size 1, requested type "simple"
  3524                           ; Number of cases is 1, Range of values is 0 to 0
  3525                           ; switch strategies available:
  3526                           ; Name         Instructions Cycles
  3527                           ; simple_byte            4     3 (average)
  3528                           ;	Chosen strategy is simple_byte
  3529  00726C  5036               	movf	(??_Telas+1)^0,w,c
  3530  00726E  0A00               	xorlw	0	; case 0
  3531  007270  B4D8               	btfsc	status,2,c
  3532  007272  EF3D  F039         	goto	l4160
  3533  007276  EF2F  F039         	goto	l3758
  3534  00727A                     l4160:
  3535                           
  3536                           ; Switch size 1, requested type "simple"
  3537                           ; Number of cases is 4, Range of values is 0 to 3
  3538                           ; switch strategies available:
  3539                           ; Name         Instructions Cycles
  3540                           ; simple_byte           13     7 (average)
  3541                           ;	Chosen strategy is simple_byte
  3542  00727A  5035               	movf	??_Telas^0,w,c
  3543  00727C  0A00               	xorlw	0	; case 0
  3544  00727E  B4D8               	btfsc	status,2,c
  3545  007280  EF68  F038         	goto	l3728
  3546  007284  0A01               	xorlw	1	; case 1
  3547  007286  B4D8               	btfsc	status,2,c
  3548  007288  EF6C  F038         	goto	l3730
  3549  00728C  0A03               	xorlw	3	; case 2
  3550  00728E  B4D8               	btfsc	status,2,c
  3551  007290  EF88  F038         	goto	l3738
  3552  007294  0A01               	xorlw	1	; case 3
  3553  007296  B4D8               	btfsc	status,2,c
  3554  007298  EF2B  F039         	goto	l3756
  3555  00729C  EF2F  F039         	goto	l3758
  3556  0072A0                     l3764:
  3557                           
  3558                           ;main.c: 274:         change=0;
  3559  0072A0  0E00               	movlw	0
  3560  0072A2  6E7B               	movwf	_change^0,c
  3561  0072A4                     l174:
  3562  0072A4  0012               	return		;funcret
  3563  0072A6                     __end_of_Telas:
  3564                           	callstack 0
  3565                           
  3566 ;; *************** function _volume *****************
  3567 ;; Defined at:
  3568 ;;		line 120 in file "main.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  valor           1    wreg     unsigned char 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  valor           1   19[COMRAM] unsigned char 
  3573 ;;  i               1   20[COMRAM] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, status,2, status,0, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3583 ;;      Params:         0       0       0       0       0       0       0
  3584 ;;      Locals:         2       0       0       0       0       0       0
  3585 ;;      Temps:          5       0       0       0       0       0       0
  3586 ;;      Totals:         7       0       0       0       0       0       0
  3587 ;;Total ram usage:        7 bytes
  3588 ;; Hardware stack levels used: 1
  3589 ;; Hardware stack levels required when called: 5
  3590 ;; This function calls:
  3591 ;;		_lcdChar
  3592 ;; This function is called by:
  3593 ;;		_Telas
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text19
  3598  005EE4                     __ptext19:
  3599                           	callstack 0
  3600  005EE4                     _volume:
  3601                           	callstack 24
  3602                           
  3603                           ;incstack = 0
  3604                           ;volume@valor stored from wreg
  3605  005EE4  6E14               	movwf	volume@valor^0,c
  3606  005EE6                     
  3607                           ;main.c: 121:     unsigned char i;;main.c: 122:     for(i=0;i<16;i++)
  3608  005EE6  0E00               	movlw	0
  3609  005EE8  6E15               	movwf	volume@i^0,c
  3610  005EEA                     l3454:
  3611                           
  3612                           ;main.c: 123:         if(i<valor+1)
  3613  005EEA  5014               	movf	volume@valor^0,w,c
  3614  005EEC  6E0F               	movwf	??_volume^0,c
  3615  005EEE  6A10               	clrf	(??_volume+1)^0,c
  3616  005EF0  0E01               	movlw	1
  3617  005EF2  260F               	addwf	??_volume^0,f,c
  3618  005EF4  0E00               	movlw	0
  3619  005EF6  2210               	addwfc	(??_volume+1)^0,f,c
  3620  005EF8  5015               	movf	volume@i^0,w,c
  3621  005EFA  6E11               	movwf	(??_volume+2)^0,c
  3622  005EFC  6A12               	clrf	(??_volume+3)^0,c
  3623  005EFE  500F               	movf	??_volume^0,w,c
  3624  005F00  5C11               	subwf	(??_volume+2)^0,w,c
  3625  005F02  5012               	movf	(??_volume+3)^0,w,c
  3626  005F04  0A80               	xorlw	128
  3627  005F06  6E13               	movwf	(??_volume+4)^0,c
  3628  005F08  5010               	movf	(??_volume+1)^0,w,c
  3629  005F0A  0A80               	xorlw	128
  3630  005F0C  5813               	subwfb	(??_volume+4)^0,w,c
  3631  005F0E  B0D8               	btfsc	status,0,c
  3632  005F10  EF8C  F02F         	goto	u2941
  3633  005F14  EF8E  F02F         	goto	u2940
  3634  005F18                     u2941:
  3635  005F18  EF93  F02F         	goto	l3458
  3636  005F1C                     u2940:
  3637  005F1C                     
  3638                           ;main.c: 124:             lcdChar(-1);
  3639  005F1C  0EFF               	movlw	255
  3640  005F1E  EC8E  F02B         	call	_lcdChar
  3641  005F22  EF96  F02F         	goto	l3460
  3642  005F26                     l3458:
  3643                           
  3644                           ;main.c: 126:             lcdChar(' ');
  3645  005F26  0E20               	movlw	32
  3646  005F28  EC8E  F02B         	call	_lcdChar
  3647  005F2C                     l3460:
  3648  005F2C  2A15               	incf	volume@i^0,f,c
  3649  005F2E  0E0F               	movlw	15
  3650  005F30  6415               	cpfsgt	volume@i^0,c
  3651  005F32  EF9D  F02F         	goto	u2951
  3652  005F36  EF9F  F02F         	goto	u2950
  3653  005F3A                     u2951:
  3654  005F3A  EF75  F02F         	goto	l3454
  3655  005F3E                     u2950:
  3656  005F3E  0012               	return		;funcret
  3657  005F40                     __end_of_volume:
  3658                           	callstack 0
  3659                           
  3660 ;; *************** function _radios *****************
  3661 ;; Defined at:
  3662 ;;		line 49 in file "main.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  n               1    wreg     unsigned char 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  n               1   22[COMRAM] unsigned char 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3676 ;;      Params:         0       0       0       0       0       0       0
  3677 ;;      Locals:         1       0       0       0       0       0       0
  3678 ;;      Temps:          2       0       0       0       0       0       0
  3679 ;;      Totals:         3       0       0       0       0       0       0
  3680 ;;Total ram usage:        3 bytes
  3681 ;; Hardware stack levels used: 1
  3682 ;; Hardware stack levels required when called: 6
  3683 ;; This function calls:
  3684 ;;		_lcdString
  3685 ;; This function is called by:
  3686 ;;		_Telas
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text20
  3691  006736                     __ptext20:
  3692                           	callstack 0
  3693  006736                     _radios:
  3694                           	callstack 23
  3695                           
  3696                           ;incstack = 0
  3697                           ;radios@n stored from wreg
  3698  006736  6E17               	movwf	radios@n^0,c
  3699  006738                     
  3700                           ;main.c: 50:     switch(n){
  3701  006738  EFDE  F033         	goto	l3436
  3702  00673C                     l3418:
  3703                           
  3704                           ;main.c: 52:             lcdString("FM Cidade ");
  3705  00673C  0ED4               	movlw	low STR_7
  3706  00673E  6E0F               	movwf	lcdString@msg^0,c
  3707  006740  0E7F               	movlw	high STR_7
  3708  006742  6E10               	movwf	(lcdString@msg+1)^0,c
  3709  006744  ECC3  F02E         	call	_lcdString	;wreg free
  3710                           
  3711                           ;main.c: 53:             break;
  3712  006748  EF0B  F034         	goto	l98
  3713  00674C                     l3420:
  3714                           
  3715                           ;main.c: 55:             lcdString("Sucesso FM ");
  3716  00674C  0E99               	movlw	low STR_8
  3717  00674E  6E0F               	movwf	lcdString@msg^0,c
  3718  006750  0E7F               	movlw	high STR_8
  3719  006752  6E10               	movwf	(lcdString@msg+1)^0,c
  3720  006754  ECC3  F02E         	call	_lcdString	;wreg free
  3721                           
  3722                           ;main.c: 56:             break;
  3723  006758  EF0B  F034         	goto	l98
  3724  00675C                     l3422:
  3725                           
  3726                           ;main.c: 58:             lcdString("Mais legal ");
  3727  00675C  0EA5               	movlw	low STR_9
  3728  00675E  6E0F               	movwf	lcdString@msg^0,c
  3729  006760  0E7F               	movlw	high STR_9
  3730  006762  6E10               	movwf	(lcdString@msg+1)^0,c
  3731  006764  ECC3  F02E         	call	_lcdString	;wreg free
  3732                           
  3733                           ;main.c: 59:             break;
  3734  006768  EF0B  F034         	goto	l98
  3735  00676C                     l3424:
  3736                           
  3737                           ;main.c: 61:             lcdString("Radio Pan ");
  3738  00676C  0EDF               	movlw	low STR_10
  3739  00676E  6E0F               	movwf	lcdString@msg^0,c
  3740  006770  0E7F               	movlw	high STR_10
  3741  006772  6E10               	movwf	(lcdString@msg+1)^0,c
  3742  006774  ECC3  F02E         	call	_lcdString	;wreg free
  3743                           
  3744                           ;main.c: 62:             break;
  3745  006778  EF0B  F034         	goto	l98
  3746  00677C                     l3426:
  3747                           
  3748                           ;main.c: 64:             lcdString("Radio Povo ");
  3749  00677C  0EB1               	movlw	low STR_11
  3750  00677E  6E0F               	movwf	lcdString@msg^0,c
  3751  006780  0E7F               	movlw	high STR_11
  3752  006782  6E10               	movwf	(lcdString@msg+1)^0,c
  3753  006784  ECC3  F02E         	call	_lcdString	;wreg free
  3754                           
  3755                           ;main.c: 65:             break;
  3756  006788  EF0B  F034         	goto	l98
  3757  00678C                     l3428:
  3758                           
  3759                           ;main.c: 67:             lcdString("Radional ");
  3760  00678C  0EEA               	movlw	low STR_12
  3761  00678E  6E0F               	movwf	lcdString@msg^0,c
  3762  006790  0E7F               	movlw	high STR_12
  3763  006792  6E10               	movwf	(lcdString@msg+1)^0,c
  3764  006794  ECC3  F02E         	call	_lcdString	;wreg free
  3765                           
  3766                           ;main.c: 68:             break;
  3767  006798  EF0B  F034         	goto	l98
  3768  00679C                     l3430:
  3769                           
  3770                           ;main.c: 70:             lcdString("Politica FM");
  3771  00679C  0EBD               	movlw	low STR_13
  3772  00679E  6E0F               	movwf	lcdString@msg^0,c
  3773  0067A0  0E7F               	movlw	high STR_13
  3774  0067A2  6E10               	movwf	(lcdString@msg+1)^0,c
  3775  0067A4  ECC3  F02E         	call	_lcdString	;wreg free
  3776                           
  3777                           ;main.c: 71:             break;
  3778  0067A8  EF0B  F034         	goto	l98
  3779  0067AC                     l3432:
  3780                           
  3781                           ;main.c: 73:             lcdString("Sertaneja ");
  3782  0067AC  0EC9               	movlw	low STR_14
  3783  0067AE  6E0F               	movwf	lcdString@msg^0,c
  3784  0067B0  0E7F               	movlw	high STR_14
  3785  0067B2  6E10               	movwf	(lcdString@msg+1)^0,c
  3786  0067B4  ECC3  F02E         	call	_lcdString	;wreg free
  3787                           
  3788                           ;main.c: 74:             break;
  3789  0067B8  EF0B  F034         	goto	l98
  3790  0067BC                     l3436:
  3791  0067BC  5017               	movf	radios@n^0,w,c
  3792  0067BE  6E15               	movwf	??_radios^0,c
  3793  0067C0  6A16               	clrf	(??_radios+1)^0,c
  3794                           
  3795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3796                           ; Switch size 1, requested type "simple"
  3797                           ; Number of cases is 1, Range of values is 0 to 0
  3798                           ; switch strategies available:
  3799                           ; Name         Instructions Cycles
  3800                           ; simple_byte            4     3 (average)
  3801                           ;	Chosen strategy is simple_byte
  3802  0067C2  5016               	movf	(??_radios+1)^0,w,c
  3803  0067C4  0A00               	xorlw	0	; case 0
  3804  0067C6  B4D8               	btfsc	status,2,c
  3805  0067C8  EFE8  F033         	goto	l4162
  3806  0067CC  EF0B  F034         	goto	l98
  3807  0067D0                     l4162:
  3808                           
  3809                           ; Switch size 1, requested type "simple"
  3810                           ; Number of cases is 8, Range of values is 0 to 7
  3811                           ; switch strategies available:
  3812                           ; Name         Instructions Cycles
  3813                           ; simple_byte           25    13 (average)
  3814                           ;	Chosen strategy is simple_byte
  3815  0067D0  5015               	movf	??_radios^0,w,c
  3816  0067D2  0A00               	xorlw	0	; case 0
  3817  0067D4  B4D8               	btfsc	status,2,c
  3818  0067D6  EF9E  F033         	goto	l3418
  3819  0067DA  0A01               	xorlw	1	; case 1
  3820  0067DC  B4D8               	btfsc	status,2,c
  3821  0067DE  EFA6  F033         	goto	l3420
  3822  0067E2  0A03               	xorlw	3	; case 2
  3823  0067E4  B4D8               	btfsc	status,2,c
  3824  0067E6  EFAE  F033         	goto	l3422
  3825  0067EA  0A01               	xorlw	1	; case 3
  3826  0067EC  B4D8               	btfsc	status,2,c
  3827  0067EE  EFB6  F033         	goto	l3424
  3828  0067F2  0A07               	xorlw	7	; case 4
  3829  0067F4  B4D8               	btfsc	status,2,c
  3830  0067F6  EFBE  F033         	goto	l3426
  3831  0067FA  0A01               	xorlw	1	; case 5
  3832  0067FC  B4D8               	btfsc	status,2,c
  3833  0067FE  EFC6  F033         	goto	l3428
  3834  006802  0A03               	xorlw	3	; case 6
  3835  006804  B4D8               	btfsc	status,2,c
  3836  006806  EFCE  F033         	goto	l3430
  3837  00680A  0A01               	xorlw	1	; case 7
  3838  00680C  B4D8               	btfsc	status,2,c
  3839  00680E  EFD6  F033         	goto	l3432
  3840  006812  EF0B  F034         	goto	l98
  3841  006816                     l98:
  3842  006816  0012               	return		;funcret
  3843  006818                     __end_of_radios:
  3844                           	callstack 0
  3845                           
  3846 ;; *************** function _musicas *****************
  3847 ;; Defined at:
  3848 ;;		line 27 in file "main.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  n               1    wreg     unsigned char 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  n               1   22[COMRAM] unsigned char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3862 ;;      Params:         0       0       0       0       0       0       0
  3863 ;;      Locals:         1       0       0       0       0       0       0
  3864 ;;      Temps:          2       0       0       0       0       0       0
  3865 ;;      Totals:         3       0       0       0       0       0       0
  3866 ;;Total ram usage:        3 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; Hardware stack levels required when called: 6
  3869 ;; This function calls:
  3870 ;;		_lcdString
  3871 ;; This function is called by:
  3872 ;;		_Telas
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text21
  3877  00650C                     __ptext21:
  3878                           	callstack 0
  3879  00650C                     _musicas:
  3880                           	callstack 23
  3881                           
  3882                           ;incstack = 0
  3883                           ;musicas@n stored from wreg
  3884  00650C  6E17               	movwf	musicas@n^0,c
  3885  00650E                     
  3886                           ;main.c: 28:     switch(n){
  3887  00650E  EFB9  F032         	goto	l3410
  3888  006512                     l3396:
  3889                           
  3890                           ;main.c: 30:             lcdString("Hey Jude - The Beetwes ");
  3891  006512  0E56               	movlw	low STR_1
  3892  006514  6E0F               	movwf	lcdString@msg^0,c
  3893  006516  0E7E               	movlw	high STR_1
  3894  006518  6E10               	movwf	(lcdString@msg+1)^0,c
  3895  00651A  ECC3  F02E         	call	_lcdString	;wreg free
  3896                           
  3897                           ;main.c: 31:             break;
  3898  00651E  EFDE  F032         	goto	l85
  3899  006522                     l3398:
  3900                           
  3901                           ;main.c: 33:             lcdString("Ana Julia - Los Hermanos");
  3902  006522  0E3D               	movlw	low STR_2
  3903  006524  6E0F               	movwf	lcdString@msg^0,c
  3904  006526  0E7E               	movlw	high STR_2
  3905  006528  6E10               	movwf	(lcdString@msg+1)^0,c
  3906  00652A  ECC3  F02E         	call	_lcdString	;wreg free
  3907                           
  3908                           ;main.c: 34:             break;
  3909  00652E  EFDE  F032         	goto	l85
  3910  006532                     l3400:
  3911                           
  3912                           ;main.c: 36:             lcdString("Crazy - Aerosmith");
  3913  006532  0E82               	movlw	low STR_3
  3914  006534  6E0F               	movwf	lcdString@msg^0,c
  3915  006536  0E7E               	movlw	high STR_3
  3916  006538  6E10               	movwf	(lcdString@msg+1)^0,c
  3917  00653A  ECC3  F02E         	call	_lcdString	;wreg free
  3918                           
  3919                           ;main.c: 37:             break;
  3920  00653E  EFDE  F032         	goto	l85
  3921  006542                     l3402:
  3922                           
  3923                           ;main.c: 39:             lcdString("Andei so - Natiruts");
  3924  006542  0E6E               	movlw	low STR_4
  3925  006544  6E0F               	movwf	lcdString@msg^0,c
  3926  006546  0E7E               	movlw	high STR_4
  3927  006548  6E10               	movwf	(lcdString@msg+1)^0,c
  3928  00654A  ECC3  F02E         	call	_lcdString	;wreg free
  3929                           
  3930                           ;main.c: 40:             break;
  3931  00654E  EFDE  F032         	goto	l85
  3932  006552                     l3404:
  3933                           
  3934                           ;main.c: 42:             lcdString("Infiel - Marilia Mendoca");
  3935  006552  0E24               	movlw	low STR_5
  3936  006554  6E0F               	movwf	lcdString@msg^0,c
  3937  006556  0E7E               	movlw	high STR_5
  3938  006558  6E10               	movwf	(lcdString@msg+1)^0,c
  3939  00655A  ECC3  F02E         	call	_lcdString	;wreg free
  3940                           
  3941                           ;main.c: 43:             break;
  3942  00655E  EFDE  F032         	goto	l85
  3943  006562                     l3406:
  3944                           
  3945                           ;main.c: 45:             lcdString("Epitafio - Titas");
  3946  006562  0E0B               	movlw	low STR_6
  3947  006564  6E0F               	movwf	lcdString@msg^0,c
  3948  006566  0E7F               	movlw	high STR_6
  3949  006568  6E10               	movwf	(lcdString@msg+1)^0,c
  3950  00656A  ECC3  F02E         	call	_lcdString	;wreg free
  3951                           
  3952                           ;main.c: 46:             break;
  3953  00656E  EFDE  F032         	goto	l85
  3954  006572                     l3410:
  3955  006572  5017               	movf	musicas@n^0,w,c
  3956  006574  6E15               	movwf	??_musicas^0,c
  3957  006576  6A16               	clrf	(??_musicas+1)^0,c
  3958                           
  3959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3960                           ; Switch size 1, requested type "simple"
  3961                           ; Number of cases is 1, Range of values is 0 to 0
  3962                           ; switch strategies available:
  3963                           ; Name         Instructions Cycles
  3964                           ; simple_byte            4     3 (average)
  3965                           ;	Chosen strategy is simple_byte
  3966  006578  5016               	movf	(??_musicas+1)^0,w,c
  3967  00657A  0A00               	xorlw	0	; case 0
  3968  00657C  B4D8               	btfsc	status,2,c
  3969  00657E  EFC3  F032         	goto	l4164
  3970  006582  EFDE  F032         	goto	l85
  3971  006586                     l4164:
  3972                           
  3973                           ; Switch size 1, requested type "simple"
  3974                           ; Number of cases is 6, Range of values is 0 to 5
  3975                           ; switch strategies available:
  3976                           ; Name         Instructions Cycles
  3977                           ; simple_byte           19    10 (average)
  3978                           ;	Chosen strategy is simple_byte
  3979  006586  5015               	movf	??_musicas^0,w,c
  3980  006588  0A00               	xorlw	0	; case 0
  3981  00658A  B4D8               	btfsc	status,2,c
  3982  00658C  EF89  F032         	goto	l3396
  3983  006590  0A01               	xorlw	1	; case 1
  3984  006592  B4D8               	btfsc	status,2,c
  3985  006594  EF91  F032         	goto	l3398
  3986  006598  0A03               	xorlw	3	; case 2
  3987  00659A  B4D8               	btfsc	status,2,c
  3988  00659C  EF99  F032         	goto	l3400
  3989  0065A0  0A01               	xorlw	1	; case 3
  3990  0065A2  B4D8               	btfsc	status,2,c
  3991  0065A4  EFA1  F032         	goto	l3402
  3992  0065A8  0A07               	xorlw	7	; case 4
  3993  0065AA  B4D8               	btfsc	status,2,c
  3994  0065AC  EFA9  F032         	goto	l3404
  3995  0065B0  0A01               	xorlw	1	; case 5
  3996  0065B2  B4D8               	btfsc	status,2,c
  3997  0065B4  EFB1  F032         	goto	l3406
  3998  0065B8  EFDE  F032         	goto	l85
  3999  0065BC                     l85:
  4000  0065BC  0012               	return		;funcret
  4001  0065BE                     __end_of_musicas:
  4002                           	callstack 0
  4003                           
  4004 ;; *************** function _data *****************
  4005 ;; Defined at:
  4006 ;;		line 177 in file "main.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  TempAtual       2   48[COMRAM] unsigned int 
  4011 ;;  i               1   47[COMRAM] unsigned char 
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4021 ;;      Params:         0       0       0       0       0       0       0
  4022 ;;      Locals:         7       0       0       0       0       0       0
  4023 ;;      Temps:          3       0       0       0       0       0       0
  4024 ;;      Totals:        10       0       0       0       0       0       0
  4025 ;;Total ram usage:       10 bytes
  4026 ;; Hardware stack levels used: 1
  4027 ;; Hardware stack levels required when called: 6
  4028 ;; This function calls:
  4029 ;;		___awdiv
  4030 ;;		___awmod
  4031 ;;		___lwdiv
  4032 ;;		___lwmod
  4033 ;;		___wmul
  4034 ;;		_bcd2dec
  4035 ;;		_dsReadData
  4036 ;;		_lcdChar
  4037 ;;		_lcdPosition
  4038 ;;		_lcdString
  4039 ;; This function is called by:
  4040 ;;		_Telas
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text22
  4045  007966                     __ptext22:
  4046                           	callstack 0
  4047  007966                     _data:
  4048                           	callstack 23
  4049  007966                     
  4050                           ;main.c: 178:     unsigned char i;;main.c: 179:     unsigned int TempAtual;;main.c: 181:
      +                               lcdPosition(0,0);
  4051  007966  0E00               	movlw	0
  4052  007968  6E10               	movwf	(lcdPosition@line+1)^0,c
  4053  00796A  0E00               	movlw	0
  4054  00796C  6E0F               	movwf	lcdPosition@line^0,c
  4055  00796E  0E00               	movlw	0
  4056  007970  6E12               	movwf	(lcdPosition@col+1)^0,c
  4057  007972  0E00               	movlw	0
  4058  007974  6E11               	movwf	lcdPosition@col^0,c
  4059  007976  EC1B  F02D         	call	_lcdPosition	;wreg free
  4060                           
  4061                           ;main.c: 182:     lcdChar(0);
  4062  00797A  0E00               	movlw	0
  4063  00797C  EC8E  F02B         	call	_lcdChar
  4064                           
  4065                           ;main.c: 183:     lcdChar(1);
  4066  007980  0E01               	movlw	1
  4067  007982  EC8E  F02B         	call	_lcdChar
  4068                           
  4069                           ;main.c: 184:     lcdChar(2);
  4070  007986  0E02               	movlw	2
  4071  007988  EC8E  F02B         	call	_lcdChar
  4072  00798C                     
  4073                           ;main.c: 185:     lcdString(" ");
  4074  00798C  0EF9               	movlw	low (STR_25+5)
  4075  00798E  6E0F               	movwf	lcdString@msg^0,c
  4076  007990  0E7F               	movlw	high (STR_25+5)
  4077  007992  6E10               	movwf	(lcdString@msg+1)^0,c
  4078  007994  ECC3  F02E         	call	_lcdString	;wreg free
  4079  007998                     
  4080                           ;main.c: 187:     for(i=(bcd2dec(dsReadData(3)& 0x07))*3;i<(bcd2dec(dsReadData(3)& 0x07)
      +                          )*3+3;i++)
  4081  007998  0E00               	movlw	0
  4082  00799A  6E0F               	movwf	(dsReadData@address+1)^0,c
  4083  00799C  0E03               	movlw	3
  4084  00799E  6E0E               	movwf	dsReadData@address^0,c
  4085  0079A0  ECDB  F02D         	call	_dsReadData	;wreg free
  4086  0079A4  0E07               	movlw	7
  4087  0079A6  140E               	andwf	?_dsReadData^0,w,c
  4088  0079A8  6E21               	movwf	bcd2dec@value^0,c
  4089  0079AA  6A22               	clrf	(bcd2dec@value+1)^0,c
  4090  0079AC  EC97  F02D         	call	_bcd2dec	;wreg free
  4091  0079B0  5021               	movf	?_bcd2dec^0,w,c
  4092  0079B2  0D03               	mullw	3
  4093  0079B4  CFF3 F030          	movff	prodl,data@i
  4094  0079B8  EFE9  F03C         	goto	l3528
  4095  0079BC                     l3524:
  4096                           
  4097                           ;main.c: 188:         lcdChar(semana[i]);
  4098  0079BC  0EC5               	movlw	low _semana
  4099  0079BE  2430               	addwf	data@i^0,w,c
  4100  0079C0  6EF6               	movwf	tblptrl,c
  4101  0079C2  6AF7               	clrf	tblptrh,c
  4102  0079C4  0E7D               	movlw	high _semana
  4103  0079C6  22F7               	addwfc	tblptrh,f,c
  4104  0079C8                     	if	0	;There are less than 3 active tblptr bytes
  4105  0079C8                     	endif
  4106  0079C8  0008               	tblrd		*
  4107  0079CA  50F5               	movf	tablat,w,c
  4108  0079CC  EC8E  F02B         	call	_lcdChar
  4109  0079D0  2A30               	incf	data@i^0,f,c
  4110  0079D2                     l3528:
  4111  0079D2  0E00               	movlw	0
  4112  0079D4  6E0F               	movwf	(dsReadData@address+1)^0,c
  4113  0079D6  0E03               	movlw	3
  4114  0079D8  6E0E               	movwf	dsReadData@address^0,c
  4115  0079DA  ECDB  F02D         	call	_dsReadData	;wreg free
  4116  0079DE  0E07               	movlw	7
  4117  0079E0  140E               	andwf	?_dsReadData^0,w,c
  4118  0079E2  6E21               	movwf	bcd2dec@value^0,c
  4119  0079E4  6A22               	clrf	(bcd2dec@value+1)^0,c
  4120  0079E6  EC97  F02D         	call	_bcd2dec	;wreg free
  4121  0079EA  C021  F02E         	movff	?_bcd2dec,_data$1658
  4122  0079EE  C022  F02F         	movff	?_bcd2dec+1,_data$1658+1
  4123  0079F2  C02E  F01B         	movff	_data$1658,___wmul@multiplier
  4124  0079F6  C02F  F01C         	movff	_data$1658+1,___wmul@multiplier+1
  4125  0079FA  0E00               	movlw	0
  4126  0079FC  6E1E               	movwf	(___wmul@multiplicand+1)^0,c
  4127  0079FE  0E03               	movlw	3
  4128  007A00  6E1D               	movwf	___wmul@multiplicand^0,c
  4129  007A02  ECAE  F02B         	call	___wmul	;wreg free
  4130  007A06  0E03               	movlw	3
  4131  007A08  261B               	addwf	?___wmul^0,f,c
  4132  007A0A  0E00               	movlw	0
  4133  007A0C  221C               	addwfc	(?___wmul+1)^0,f,c
  4134  007A0E  5030               	movf	data@i^0,w,c
  4135  007A10  6E2B               	movwf	??_data^0,c
  4136  007A12  6A2C               	clrf	(??_data+1)^0,c
  4137  007A14  501B               	movf	?___wmul^0,w,c
  4138  007A16  5C2B               	subwf	??_data^0,w,c
  4139  007A18  502C               	movf	(??_data+1)^0,w,c
  4140  007A1A  0A80               	xorlw	128
  4141  007A1C  6E2D               	movwf	(??_data+2)^0,c
  4142  007A1E  501C               	movf	(?___wmul+1)^0,w,c
  4143  007A20  0A80               	xorlw	128
  4144  007A22  582D               	subwfb	(??_data+2)^0,w,c
  4145  007A24  A0D8               	btfss	status,0,c
  4146  007A26  EF17  F03D         	goto	u3041
  4147  007A2A  EF19  F03D         	goto	u3040
  4148  007A2E                     u3041:
  4149  007A2E  EFDE  F03C         	goto	l3524
  4150  007A32                     u3040:
  4151  007A32                     
  4152                           ;main.c: 189:     lcdChar(' ');
  4153  007A32  0E20               	movlw	32
  4154  007A34  EC8E  F02B         	call	_lcdChar
  4155  007A38                     
  4156                           ;main.c: 191:     lcdChar(((bcd2dec(dsReadData(4)& 0x5f))/10%10)+48);
  4157  007A38  0E00               	movlw	0
  4158  007A3A  6E0F               	movwf	(dsReadData@address+1)^0,c
  4159  007A3C  0E04               	movlw	4
  4160  007A3E  6E0E               	movwf	dsReadData@address^0,c
  4161  007A40  ECDB  F02D         	call	_dsReadData	;wreg free
  4162  007A44  0E5F               	movlw	95
  4163  007A46  140E               	andwf	?_dsReadData^0,w,c
  4164  007A48  6E21               	movwf	bcd2dec@value^0,c
  4165  007A4A  6A22               	clrf	(bcd2dec@value+1)^0,c
  4166  007A4C  EC97  F02D         	call	_bcd2dec	;wreg free
  4167  007A50  C021  F033         	movff	?_bcd2dec,_data$1659
  4168  007A54  C022  F034         	movff	?_bcd2dec+1,_data$1659+1
  4169  007A58                     
  4170                           ;main.c: 191:     lcdChar(((bcd2dec(dsReadData(4)& 0x5f))/10%10)+48);
  4171  007A58  0E00               	movlw	0
  4172  007A5A  6E16               	movwf	(___awdiv@divisor+1)^0,c
  4173  007A5C  0E0A               	movlw	10
  4174  007A5E  6E15               	movwf	___awdiv@divisor^0,c
  4175  007A60  C033  F013         	movff	_data$1659,___awdiv@dividend
  4176  007A64  C034  F014         	movff	_data$1659+1,___awdiv@dividend+1
  4177  007A68  EC39  F033         	call	___awdiv	;wreg free
  4178  007A6C  C013  F025         	movff	?___awdiv,___awmod@dividend
  4179  007A70  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  4180  007A74  0E00               	movlw	0
  4181  007A76  6E28               	movwf	(___awmod@divisor+1)^0,c
  4182  007A78  0E0A               	movlw	10
  4183  007A7A  6E27               	movwf	___awmod@divisor^0,c
  4184  007A7C  ECD6  F031         	call	___awmod	;wreg free
  4185  007A80  5025               	movf	?___awmod^0,w,c
  4186  007A82  0F30               	addlw	48
  4187  007A84  EC8E  F02B         	call	_lcdChar
  4188                           
  4189                           ;main.c: 192:     lcdChar(((bcd2dec(dsReadData(4)& 0x5f))%10)+48);
  4190  007A88  0E00               	movlw	0
  4191  007A8A  6E0F               	movwf	(dsReadData@address+1)^0,c
  4192  007A8C  0E04               	movlw	4
  4193  007A8E  6E0E               	movwf	dsReadData@address^0,c
  4194  007A90  ECDB  F02D         	call	_dsReadData	;wreg free
  4195  007A94  0E5F               	movlw	95
  4196  007A96  140E               	andwf	?_dsReadData^0,w,c
  4197  007A98  6E21               	movwf	bcd2dec@value^0,c
  4198  007A9A  6A22               	clrf	(bcd2dec@value+1)^0,c
  4199  007A9C  EC97  F02D         	call	_bcd2dec	;wreg free
  4200  007AA0  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  4201  007AA4  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  4202  007AA8  0E00               	movlw	0
  4203  007AAA  6E28               	movwf	(___awmod@divisor+1)^0,c
  4204  007AAC  0E0A               	movlw	10
  4205  007AAE  6E27               	movwf	___awmod@divisor^0,c
  4206  007AB0  ECD6  F031         	call	___awmod	;wreg free
  4207  007AB4  5025               	movf	?___awmod^0,w,c
  4208  007AB6  0F30               	addlw	48
  4209  007AB8  EC8E  F02B         	call	_lcdChar
  4210  007ABC                     
  4211                           ;main.c: 193:     lcdChar('/');
  4212  007ABC  0E2F               	movlw	47
  4213  007ABE  EC8E  F02B         	call	_lcdChar
  4214  007AC2                     
  4215                           ;main.c: 194:     lcdChar(((bcd2dec(dsReadData(5)& 0x3f))/10%10)+48);
  4216  007AC2  0E00               	movlw	0
  4217  007AC4  6E0F               	movwf	(dsReadData@address+1)^0,c
  4218  007AC6  0E05               	movlw	5
  4219  007AC8  6E0E               	movwf	dsReadData@address^0,c
  4220  007ACA  ECDB  F02D         	call	_dsReadData	;wreg free
  4221  007ACE  0E3F               	movlw	63
  4222  007AD0  140E               	andwf	?_dsReadData^0,w,c
  4223  007AD2  6E21               	movwf	bcd2dec@value^0,c
  4224  007AD4  6A22               	clrf	(bcd2dec@value+1)^0,c
  4225  007AD6  EC97  F02D         	call	_bcd2dec	;wreg free
  4226  007ADA  C021  F033         	movff	?_bcd2dec,_data$1659
  4227  007ADE  C022  F034         	movff	?_bcd2dec+1,_data$1659+1
  4228                           
  4229                           ;main.c: 194:     lcdChar(((bcd2dec(dsReadData(5)& 0x3f))/10%10)+48);
  4230  007AE2  0E00               	movlw	0
  4231  007AE4  6E16               	movwf	(___awdiv@divisor+1)^0,c
  4232  007AE6  0E0A               	movlw	10
  4233  007AE8  6E15               	movwf	___awdiv@divisor^0,c
  4234  007AEA  C033  F013         	movff	_data$1659,___awdiv@dividend
  4235  007AEE  C034  F014         	movff	_data$1659+1,___awdiv@dividend+1
  4236  007AF2  EC39  F033         	call	___awdiv	;wreg free
  4237  007AF6  C013  F025         	movff	?___awdiv,___awmod@dividend
  4238  007AFA  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  4239  007AFE  0E00               	movlw	0
  4240  007B00  6E28               	movwf	(___awmod@divisor+1)^0,c
  4241  007B02  0E0A               	movlw	10
  4242  007B04  6E27               	movwf	___awmod@divisor^0,c
  4243  007B06  ECD6  F031         	call	___awmod	;wreg free
  4244  007B0A  5025               	movf	?___awmod^0,w,c
  4245  007B0C  0F30               	addlw	48
  4246  007B0E  EC8E  F02B         	call	_lcdChar
  4247  007B12                     
  4248                           ;main.c: 195:     lcdChar(((bcd2dec(dsReadData(5)& 0x3f))%10)+48);
  4249  007B12  0E00               	movlw	0
  4250  007B14  6E0F               	movwf	(dsReadData@address+1)^0,c
  4251  007B16  0E05               	movlw	5
  4252  007B18  6E0E               	movwf	dsReadData@address^0,c
  4253  007B1A  ECDB  F02D         	call	_dsReadData	;wreg free
  4254  007B1E  0E3F               	movlw	63
  4255  007B20  140E               	andwf	?_dsReadData^0,w,c
  4256  007B22  6E21               	movwf	bcd2dec@value^0,c
  4257  007B24  6A22               	clrf	(bcd2dec@value+1)^0,c
  4258  007B26  EC97  F02D         	call	_bcd2dec	;wreg free
  4259  007B2A  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  4260  007B2E  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  4261  007B32  0E00               	movlw	0
  4262  007B34  6E28               	movwf	(___awmod@divisor+1)^0,c
  4263  007B36  0E0A               	movlw	10
  4264  007B38  6E27               	movwf	___awmod@divisor^0,c
  4265  007B3A  ECD6  F031         	call	___awmod	;wreg free
  4266  007B3E  5025               	movf	?___awmod^0,w,c
  4267  007B40  0F30               	addlw	48
  4268  007B42  EC8E  F02B         	call	_lcdChar
  4269  007B46                     
  4270                           ;main.c: 196:     lcdChar('/');
  4271  007B46  0E2F               	movlw	47
  4272  007B48  EC8E  F02B         	call	_lcdChar
  4273                           
  4274                           ;main.c: 197:     lcdChar(((bcd2dec(dsReadData(6)& 0xff))/10%10)+48);
  4275  007B4C  0E00               	movlw	0
  4276  007B4E  6E0F               	movwf	(dsReadData@address+1)^0,c
  4277  007B50  0E06               	movlw	6
  4278  007B52  6E0E               	movwf	dsReadData@address^0,c
  4279  007B54  ECDB  F02D         	call	_dsReadData	;wreg free
  4280  007B58  500E               	movf	?_dsReadData^0,w,c
  4281  007B5A  6E21               	movwf	bcd2dec@value^0,c
  4282  007B5C  6A22               	clrf	(bcd2dec@value+1)^0,c
  4283  007B5E  EC97  F02D         	call	_bcd2dec	;wreg free
  4284  007B62  C021  F033         	movff	?_bcd2dec,_data$1659
  4285  007B66  C022  F034         	movff	?_bcd2dec+1,_data$1659+1
  4286  007B6A                     
  4287                           ;main.c: 197:     lcdChar(((bcd2dec(dsReadData(6)& 0xff))/10%10)+48);
  4288  007B6A  0E00               	movlw	0
  4289  007B6C  6E16               	movwf	(___awdiv@divisor+1)^0,c
  4290  007B6E  0E0A               	movlw	10
  4291  007B70  6E15               	movwf	___awdiv@divisor^0,c
  4292  007B72  C033  F013         	movff	_data$1659,___awdiv@dividend
  4293  007B76  C034  F014         	movff	_data$1659+1,___awdiv@dividend+1
  4294  007B7A  EC39  F033         	call	___awdiv	;wreg free
  4295  007B7E  C013  F025         	movff	?___awdiv,___awmod@dividend
  4296  007B82  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  4297  007B86  0E00               	movlw	0
  4298  007B88  6E28               	movwf	(___awmod@divisor+1)^0,c
  4299  007B8A  0E0A               	movlw	10
  4300  007B8C  6E27               	movwf	___awmod@divisor^0,c
  4301  007B8E  ECD6  F031         	call	___awmod	;wreg free
  4302  007B92  5025               	movf	?___awmod^0,w,c
  4303  007B94  0F30               	addlw	48
  4304  007B96  EC8E  F02B         	call	_lcdChar
  4305  007B9A                     
  4306                           ;main.c: 198:     lcdChar(((bcd2dec(dsReadData(6)& 0xff))%10)+48);
  4307  007B9A  0E00               	movlw	0
  4308  007B9C  6E0F               	movwf	(dsReadData@address+1)^0,c
  4309  007B9E  0E06               	movlw	6
  4310  007BA0  6E0E               	movwf	dsReadData@address^0,c
  4311  007BA2  ECDB  F02D         	call	_dsReadData	;wreg free
  4312  007BA6  500E               	movf	?_dsReadData^0,w,c
  4313  007BA8  6E21               	movwf	bcd2dec@value^0,c
  4314  007BAA  6A22               	clrf	(bcd2dec@value+1)^0,c
  4315  007BAC  EC97  F02D         	call	_bcd2dec	;wreg free
  4316  007BB0  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  4317  007BB4  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  4318  007BB8  0E00               	movlw	0
  4319  007BBA  6E28               	movwf	(___awmod@divisor+1)^0,c
  4320  007BBC  0E0A               	movlw	10
  4321  007BBE  6E27               	movwf	___awmod@divisor^0,c
  4322  007BC0  ECD6  F031         	call	___awmod	;wreg free
  4323  007BC4  5025               	movf	?___awmod^0,w,c
  4324  007BC6  0F30               	addlw	48
  4325  007BC8  EC8E  F02B         	call	_lcdChar
  4326  007BCC                     
  4327                           ;main.c: 199:     lcdString("  ");
  4328  007BCC  0EF8               	movlw	low (STR_25+4)
  4329  007BCE  6E0F               	movwf	lcdString@msg^0,c
  4330  007BD0  0E7F               	movlw	high (STR_25+4)
  4331  007BD2  6E10               	movwf	(lcdString@msg+1)^0,c
  4332  007BD4  ECC3  F02E         	call	_lcdString	;wreg free
  4333  007BD8                     
  4334                           ;main.c: 201:     lcdPosition(1,0);
  4335  007BD8  0E00               	movlw	0
  4336  007BDA  6E10               	movwf	(lcdPosition@line+1)^0,c
  4337  007BDC  0E01               	movlw	1
  4338  007BDE  6E0F               	movwf	lcdPosition@line^0,c
  4339  007BE0  0E00               	movlw	0
  4340  007BE2  6E12               	movwf	(lcdPosition@col+1)^0,c
  4341  007BE4  0E00               	movlw	0
  4342  007BE6  6E11               	movwf	lcdPosition@col^0,c
  4343  007BE8  EC1B  F02D         	call	_lcdPosition	;wreg free
  4344  007BEC                     
  4345                           ;main.c: 202:     lcdChar(3);
  4346  007BEC  0E03               	movlw	3
  4347  007BEE  EC8E  F02B         	call	_lcdChar
  4348  007BF2                     
  4349                           ;main.c: 203:     lcdChar(6);
  4350  007BF2  0E06               	movlw	6
  4351  007BF4  EC8E  F02B         	call	_lcdChar
  4352  007BF8                     
  4353                           ;main.c: 204:     lcdChar(7);
  4354  007BF8  0E07               	movlw	7
  4355  007BFA  EC8E  F02B         	call	_lcdChar
  4356  007BFE                     
  4357                           ;main.c: 206:     TempAtual=temperatura/2+358;
  4358  007BFE  90D8               	bcf	status,0,c
  4359  007C00  3078               	rrcf	(_temperatura+1)^0,w,c
  4360  007C02  6E2C               	movwf	(??_data+1)^0,c
  4361  007C04  3077               	rrcf	_temperatura^0,w,c
  4362  007C06  6E2B               	movwf	??_data^0,c
  4363  007C08  0E66               	movlw	102
  4364  007C0A  242B               	addwf	??_data^0,w,c
  4365  007C0C  6E31               	movwf	data@TempAtual^0,c
  4366  007C0E  0E01               	movlw	1
  4367  007C10  202C               	addwfc	(??_data+1)^0,w,c
  4368  007C12  6E32               	movwf	(data@TempAtual+1)^0,c
  4369  007C14                     
  4370                           ;main.c: 207:     lcdChar(' ');
  4371  007C14  0E20               	movlw	32
  4372  007C16  EC8E  F02B         	call	_lcdChar
  4373  007C1A                     
  4374                           ;main.c: 208:     lcdChar((TempAtual/100%10)+48);
  4375  007C1A  0E00               	movlw	0
  4376  007C1C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  4377  007C1E  0E64               	movlw	100
  4378  007C20  6E03               	movwf	___lwdiv@divisor^0,c
  4379  007C22  C031  F001         	movff	data@TempAtual,___lwdiv@dividend
  4380  007C26  C032  F002         	movff	data@TempAtual+1,___lwdiv@dividend+1
  4381  007C2A  EC0A  F031         	call	___lwdiv	;wreg free
  4382  007C2E  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  4383  007C32  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  4384  007C36  0E00               	movlw	0
  4385  007C38  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  4386  007C3A  0E0A               	movlw	10
  4387  007C3C  6E0A               	movwf	___lwmod@divisor^0,c
  4388  007C3E  EC34  F030         	call	___lwmod	;wreg free
  4389  007C42  5008               	movf	?___lwmod^0,w,c
  4390  007C44  0F30               	addlw	48
  4391  007C46  EC8E  F02B         	call	_lcdChar
  4392  007C4A                     
  4393                           ;main.c: 209:     lcdChar((TempAtual/10%10)+48);
  4394  007C4A  0E00               	movlw	0
  4395  007C4C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  4396  007C4E  0E0A               	movlw	10
  4397  007C50  6E03               	movwf	___lwdiv@divisor^0,c
  4398  007C52  C031  F001         	movff	data@TempAtual,___lwdiv@dividend
  4399  007C56  C032  F002         	movff	data@TempAtual+1,___lwdiv@dividend+1
  4400  007C5A  EC0A  F031         	call	___lwdiv	;wreg free
  4401  007C5E  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  4402  007C62  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  4403  007C66  0E00               	movlw	0
  4404  007C68  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  4405  007C6A  0E0A               	movlw	10
  4406  007C6C  6E0A               	movwf	___lwmod@divisor^0,c
  4407  007C6E  EC34  F030         	call	___lwmod	;wreg free
  4408  007C72  5008               	movf	?___lwmod^0,w,c
  4409  007C74  0F30               	addlw	48
  4410  007C76  EC8E  F02B         	call	_lcdChar
  4411  007C7A                     
  4412                           ;main.c: 210:     lcdChar(',');
  4413  007C7A  0E2C               	movlw	44
  4414  007C7C  EC8E  F02B         	call	_lcdChar
  4415  007C80                     
  4416                           ;main.c: 211:     lcdChar((TempAtual%10)+48);
  4417  007C80  C031  F008         	movff	data@TempAtual,___lwmod@dividend
  4418  007C84  C032  F009         	movff	data@TempAtual+1,___lwmod@dividend+1
  4419  007C88  0E00               	movlw	0
  4420  007C8A  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  4421  007C8C  0E0A               	movlw	10
  4422  007C8E  6E0A               	movwf	___lwmod@divisor^0,c
  4423  007C90  EC34  F030         	call	___lwmod	;wreg free
  4424  007C94  5008               	movf	?___lwmod^0,w,c
  4425  007C96  0F30               	addlw	48
  4426  007C98  EC8E  F02B         	call	_lcdChar
  4427  007C9C                     
  4428                           ;main.c: 212:     lcdString("C ");
  4429  007C9C  0EFB               	movlw	low STR_22
  4430  007C9E  6E0F               	movwf	lcdString@msg^0,c
  4431  007CA0  0E7F               	movlw	high STR_22
  4432  007CA2  6E10               	movwf	(lcdString@msg+1)^0,c
  4433  007CA4  ECC3  F02E         	call	_lcdString	;wreg free
  4434  007CA8                     
  4435                           ;main.c: 214:     lcdChar(((bcd2dec(dsReadData(2)& 0x5f))/10%10)+48);
  4436  007CA8  0E00               	movlw	0
  4437  007CAA  6E0F               	movwf	(dsReadData@address+1)^0,c
  4438  007CAC  0E02               	movlw	2
  4439  007CAE  6E0E               	movwf	dsReadData@address^0,c
  4440  007CB0  ECDB  F02D         	call	_dsReadData	;wreg free
  4441  007CB4  0E5F               	movlw	95
  4442  007CB6  140E               	andwf	?_dsReadData^0,w,c
  4443  007CB8  6E21               	movwf	bcd2dec@value^0,c
  4444  007CBA  6A22               	clrf	(bcd2dec@value+1)^0,c
  4445  007CBC  EC97  F02D         	call	_bcd2dec	;wreg free
  4446  007CC0  C021  F033         	movff	?_bcd2dec,_data$1659
  4447  007CC4  C022  F034         	movff	?_bcd2dec+1,_data$1659+1
  4448  007CC8                     
  4449                           ;main.c: 214:     lcdChar(((bcd2dec(dsReadData(2)& 0x5f))/10%10)+48);
  4450  007CC8  0E00               	movlw	0
  4451  007CCA  6E16               	movwf	(___awdiv@divisor+1)^0,c
  4452  007CCC  0E0A               	movlw	10
  4453  007CCE  6E15               	movwf	___awdiv@divisor^0,c
  4454  007CD0  C033  F013         	movff	_data$1659,___awdiv@dividend
  4455  007CD4  C034  F014         	movff	_data$1659+1,___awdiv@dividend+1
  4456  007CD8  EC39  F033         	call	___awdiv	;wreg free
  4457  007CDC  C013  F025         	movff	?___awdiv,___awmod@dividend
  4458  007CE0  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  4459  007CE4  0E00               	movlw	0
  4460  007CE6  6E28               	movwf	(___awmod@divisor+1)^0,c
  4461  007CE8  0E0A               	movlw	10
  4462  007CEA  6E27               	movwf	___awmod@divisor^0,c
  4463  007CEC  ECD6  F031         	call	___awmod	;wreg free
  4464  007CF0  5025               	movf	?___awmod^0,w,c
  4465  007CF2  0F30               	addlw	48
  4466  007CF4  EC8E  F02B         	call	_lcdChar
  4467  007CF8                     
  4468                           ;main.c: 215:     lcdChar(((bcd2dec(dsReadData(2)& 0x5f))%10)+48);
  4469  007CF8  0E00               	movlw	0
  4470  007CFA  6E0F               	movwf	(dsReadData@address+1)^0,c
  4471  007CFC  0E02               	movlw	2
  4472  007CFE  6E0E               	movwf	dsReadData@address^0,c
  4473  007D00  ECDB  F02D         	call	_dsReadData	;wreg free
  4474  007D04  0E5F               	movlw	95
  4475  007D06  140E               	andwf	?_dsReadData^0,w,c
  4476  007D08  6E21               	movwf	bcd2dec@value^0,c
  4477  007D0A  6A22               	clrf	(bcd2dec@value+1)^0,c
  4478  007D0C  EC97  F02D         	call	_bcd2dec	;wreg free
  4479  007D10  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  4480  007D14  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  4481  007D18  0E00               	movlw	0
  4482  007D1A  6E28               	movwf	(___awmod@divisor+1)^0,c
  4483  007D1C  0E0A               	movlw	10
  4484  007D1E  6E27               	movwf	___awmod@divisor^0,c
  4485  007D20  ECD6  F031         	call	___awmod	;wreg free
  4486  007D24  5025               	movf	?___awmod^0,w,c
  4487  007D26  0F30               	addlw	48
  4488  007D28  EC8E  F02B         	call	_lcdChar
  4489  007D2C                     
  4490                           ;main.c: 216:     lcdChar(':');
  4491  007D2C  0E3A               	movlw	58
  4492  007D2E  EC8E  F02B         	call	_lcdChar
  4493  007D32                     
  4494                           ;main.c: 217:     lcdChar(((bcd2dec(dsReadData(1)& 0x7f))/10%10)+48);
  4495  007D32  0E00               	movlw	0
  4496  007D34  6E0F               	movwf	(dsReadData@address+1)^0,c
  4497  007D36  0E01               	movlw	1
  4498  007D38  6E0E               	movwf	dsReadData@address^0,c
  4499  007D3A  ECDB  F02D         	call	_dsReadData	;wreg free
  4500  007D3E  0E7F               	movlw	127
  4501  007D40  140E               	andwf	?_dsReadData^0,w,c
  4502  007D42  6E21               	movwf	bcd2dec@value^0,c
  4503  007D44  6A22               	clrf	(bcd2dec@value+1)^0,c
  4504  007D46  EC97  F02D         	call	_bcd2dec	;wreg free
  4505  007D4A  C021  F033         	movff	?_bcd2dec,_data$1659
  4506  007D4E  C022  F034         	movff	?_bcd2dec+1,_data$1659+1
  4507  007D52                     
  4508                           ;main.c: 217:     lcdChar(((bcd2dec(dsReadData(1)& 0x7f))/10%10)+48);
  4509  007D52  0E00               	movlw	0
  4510  007D54  6E16               	movwf	(___awdiv@divisor+1)^0,c
  4511  007D56  0E0A               	movlw	10
  4512  007D58  6E15               	movwf	___awdiv@divisor^0,c
  4513  007D5A  C033  F013         	movff	_data$1659,___awdiv@dividend
  4514  007D5E  C034  F014         	movff	_data$1659+1,___awdiv@dividend+1
  4515  007D62  EC39  F033         	call	___awdiv	;wreg free
  4516  007D66  C013  F025         	movff	?___awdiv,___awmod@dividend
  4517  007D6A  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  4518  007D6E  0E00               	movlw	0
  4519  007D70  6E28               	movwf	(___awmod@divisor+1)^0,c
  4520  007D72  0E0A               	movlw	10
  4521  007D74  6E27               	movwf	___awmod@divisor^0,c
  4522  007D76  ECD6  F031         	call	___awmod	;wreg free
  4523  007D7A  5025               	movf	?___awmod^0,w,c
  4524  007D7C  0F30               	addlw	48
  4525  007D7E  EC8E  F02B         	call	_lcdChar
  4526  007D82                     
  4527                           ;main.c: 218:     lcdChar(((bcd2dec(dsReadData(1)& 0x7f))%10)+48);
  4528  007D82  0E00               	movlw	0
  4529  007D84  6E0F               	movwf	(dsReadData@address+1)^0,c
  4530  007D86  0E01               	movlw	1
  4531  007D88  6E0E               	movwf	dsReadData@address^0,c
  4532  007D8A  ECDB  F02D         	call	_dsReadData	;wreg free
  4533  007D8E  0E7F               	movlw	127
  4534  007D90  140E               	andwf	?_dsReadData^0,w,c
  4535  007D92  6E21               	movwf	bcd2dec@value^0,c
  4536  007D94  6A22               	clrf	(bcd2dec@value+1)^0,c
  4537  007D96  EC97  F02D         	call	_bcd2dec	;wreg free
  4538  007D9A  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  4539  007D9E  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  4540  007DA2  0E00               	movlw	0
  4541  007DA4  6E28               	movwf	(___awmod@divisor+1)^0,c
  4542  007DA6  0E0A               	movlw	10
  4543  007DA8  6E27               	movwf	___awmod@divisor^0,c
  4544  007DAA  ECD6  F031         	call	___awmod	;wreg free
  4545  007DAE  5025               	movf	?___awmod^0,w,c
  4546  007DB0  0F30               	addlw	48
  4547  007DB2  EC8E  F02B         	call	_lcdChar
  4548  007DB6                     
  4549                           ;main.c: 219:     lcdString("   ");
  4550  007DB6  0EF7               	movlw	low (STR_25+3)
  4551  007DB8  6E0F               	movwf	lcdString@msg^0,c
  4552  007DBA  0E7F               	movlw	high (STR_25+3)
  4553  007DBC  6E10               	movwf	(lcdString@msg+1)^0,c
  4554  007DBE  ECC3  F02E         	call	_lcdString	;wreg free
  4555  007DC2  0012               	return		;funcret
  4556  007DC4                     __end_of_data:
  4557                           	callstack 0
  4558                           
  4559 ;; *************** function _dsReadData *****************
  4560 ;; Defined at:
  4561 ;;		line 29 in file "ds1307.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  address         2   13[COMRAM] int 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  result          2   16[COMRAM] int 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  2   13[COMRAM] int 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0, cstack
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4575 ;;      Params:         2       0       0       0       0       0       0
  4576 ;;      Locals:         2       0       0       0       0       0       0
  4577 ;;      Temps:          1       0       0       0       0       0       0
  4578 ;;      Totals:         5       0       0       0       0       0       0
  4579 ;;Total ram usage:        5 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; Hardware stack levels required when called: 4
  4582 ;; This function calls:
  4583 ;;		_i2cReadByte
  4584 ;;		_i2cWriteByte
  4585 ;; This function is called by:
  4586 ;;		_data
  4587 ;;		_dsStartClock
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text23
  4592  005BB6                     __ptext23:
  4593                           	callstack 0
  4594  005BB6                     _dsReadData:
  4595                           	callstack 24
  4596  005BB6                     
  4597                           ;ds1307.c: 30:  int result;;ds1307.c: 31:  i2cWriteByte(1,0,(0x68<<1) | 0);
  4598  005BB6  0E00               	movlw	0
  4599  005BB8  6E08               	movwf	i2cWriteByte@send_stop^0,c
  4600  005BBA  0ED0               	movlw	208
  4601  005BBC  6E09               	movwf	i2cWriteByte@byte^0,c
  4602  005BBE  0E01               	movlw	1
  4603  005BC0  ECA0  F02F         	call	_i2cWriteByte
  4604                           
  4605                           ;ds1307.c: 32:  i2cWriteByte(0,0,address);
  4606  005BC4  0E00               	movlw	0
  4607  005BC6  6E08               	movwf	i2cWriteByte@send_stop^0,c
  4608  005BC8  C00E  F009         	movff	dsReadData@address,i2cWriteByte@byte
  4609  005BCC  0E00               	movlw	0
  4610  005BCE  ECA0  F02F         	call	_i2cWriteByte
  4611                           
  4612                           ;ds1307.c: 33:  i2cWriteByte(1,0, (0x68<<1) | 1);
  4613  005BD2  0E00               	movlw	0
  4614  005BD4  6E08               	movwf	i2cWriteByte@send_stop^0,c
  4615  005BD6  0ED1               	movlw	209
  4616  005BD8  6E09               	movwf	i2cWriteByte@byte^0,c
  4617  005BDA  0E01               	movlw	1
  4618  005BDC  ECA0  F02F         	call	_i2cWriteByte
  4619                           
  4620                           ;ds1307.c: 34:  result = i2cReadByte(1,1 );
  4621  005BE0  0E01               	movlw	1
  4622  005BE2  6E08               	movwf	i2cReadByte@send_stop^0,c
  4623  005BE4  0E01               	movlw	1
  4624  005BE6  EC99  F02E         	call	_i2cReadByte
  4625  005BEA  6E10               	movwf	??_dsReadData^0,c
  4626  005BEC  5010               	movf	??_dsReadData^0,w,c
  4627  005BEE  6E11               	movwf	dsReadData@result^0,c
  4628  005BF0  6A12               	clrf	(dsReadData@result+1)^0,c
  4629  005BF2                     
  4630                           ;ds1307.c: 35:  return result;
  4631  005BF2  C011  F00E         	movff	dsReadData@result,?_dsReadData
  4632  005BF6  C012  F00F         	movff	dsReadData@result+1,?_dsReadData+1
  4633  005BFA  0012               	return		;funcret
  4634  005BFC                     __end_of_dsReadData:
  4635                           	callstack 0
  4636                           
  4637 ;; *************** function _i2cWriteByte *****************
  4638 ;; Defined at:
  4639 ;;		line 113 in file "i2c.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;  send_start      1    wreg     unsigned char 
  4642 ;;  send_stop       1    7[COMRAM] unsigned char 
  4643 ;;  byte            1    8[COMRAM] unsigned char 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  send_start      1    9[COMRAM] unsigned char 
  4646 ;;  bit             1   10[COMRAM] unsigned char 
  4647 ;;  nack            1    0        unsigned char 
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      unsigned char 
  4650 ;; Registers used:
  4651 ;;		wreg, status,2, status,0, cstack
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4657 ;;      Params:         2       0       0       0       0       0       0
  4658 ;;      Locals:         2       0       0       0       0       0       0
  4659 ;;      Temps:          0       0       0       0       0       0       0
  4660 ;;      Totals:         4       0       0       0       0       0       0
  4661 ;;Total ram usage:        4 bytes
  4662 ;; Hardware stack levels used: 1
  4663 ;; Hardware stack levels required when called: 3
  4664 ;; This function calls:
  4665 ;;		_i2c_read_bit
  4666 ;;		_i2c_start
  4667 ;;		_i2c_stop
  4668 ;;		_i2c_write_bit
  4669 ;; This function is called by:
  4670 ;;		_dsReadData
  4671 ;;		_dsWriteData
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           	psect	text24
  4676  005F40                     __ptext24:
  4677                           	callstack 0
  4678  005F40                     _i2cWriteByte:
  4679                           	callstack 24
  4680                           
  4681                           ;incstack = 0
  4682                           ;i2cWriteByte@send_start stored from wreg
  4683  005F40  6E0A               	movwf	i2cWriteByte@send_start^0,c
  4684  005F42                     
  4685                           ;i2c.c: 114:  unsigned char bit;;i2c.c: 115:  unsigned char nack;;i2c.c: 116:  if (send_
      +                          start) {
  4686  005F42  500A               	movf	i2cWriteByte@send_start^0,w,c
  4687  005F44  B4D8               	btfsc	status,2,c
  4688  005F46  EFA7  F02F         	goto	u2561
  4689  005F4A  EFA9  F02F         	goto	u2560
  4690  005F4E                     u2561:
  4691  005F4E  EFAB  F02F         	goto	l3110
  4692  005F52                     u2560:
  4693  005F52                     
  4694                           ;i2c.c: 117:   i2c_start();
  4695  005F52  ECB8  F02D         	call	_i2c_start	;wreg free
  4696  005F56                     l3110:
  4697                           
  4698                           ;i2c.c: 119:  for (bit = 0; bit < 8; bit++) {
  4699  005F56  0E00               	movlw	0
  4700  005F58  6E0B               	movwf	i2cWriteByte@bit^0,c
  4701  005F5A                     l3116:
  4702                           
  4703                           ;i2c.c: 120:   i2c_write_bit((byte & 0x80) != 0);
  4704  005F5A  BE09               	btfsc	i2cWriteByte@byte^0,7,c
  4705  005F5C  EFB2  F02F         	goto	u2571
  4706  005F60  EFB5  F02F         	goto	u2570
  4707  005F64                     u2571:
  4708  005F64  0E01               	movlw	1
  4709  005F66  EFB6  F02F         	goto	u2580
  4710  005F6A                     u2570:
  4711  005F6A  0E00               	movlw	0
  4712  005F6C                     u2580:
  4713  005F6C  EC19  F02F         	call	_i2c_write_bit
  4714  005F70                     
  4715                           ;i2c.c: 121:   byte <<= 1;
  4716  005F70  90D8               	bcf	status,0,c
  4717  005F72  3609               	rlcf	i2cWriteByte@byte^0,f,c
  4718  005F74                     
  4719                           ;i2c.c: 122:  }
  4720  005F74  2A0B               	incf	i2cWriteByte@bit^0,f,c
  4721  005F76  0E07               	movlw	7
  4722  005F78  640B               	cpfsgt	i2cWriteByte@bit^0,c
  4723  005F7A  EFC1  F02F         	goto	u2591
  4724  005F7E  EFC3  F02F         	goto	u2590
  4725  005F82                     u2591:
  4726  005F82  EFAD  F02F         	goto	l3116
  4727  005F86                     u2590:
  4728  005F86  EC96  F02C         	call	_i2c_read_bit	;wreg free
  4729  005F8A                     
  4730                           ;i2c.c: 124:  if (send_stop) {
  4731  005F8A  5008               	movf	i2cWriteByte@send_stop^0,w,c
  4732  005F8C  B4D8               	btfsc	status,2,c
  4733  005F8E  EFCB  F02F         	goto	u2601
  4734  005F92  EFCD  F02F         	goto	u2600
  4735  005F96                     u2601:
  4736  005F96  EFCF  F02F         	goto	l324
  4737  005F9A                     u2600:
  4738  005F9A                     
  4739                           ;i2c.c: 125:   i2c_stop();
  4740  005F9A  EC4F  F02C         	call	_i2c_stop	;wreg free
  4741  005F9E                     l324:
  4742  005F9E  0012               	return		;funcret
  4743  005FA0                     __end_of_i2cWriteByte:
  4744                           	callstack 0
  4745                           
  4746 ;; *************** function _i2c_start *****************
  4747 ;; Defined at:
  4748 ;;		line 52 in file "i2c.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;		None
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;		None
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  1    wreg      void 
  4755 ;; Registers used:
  4756 ;;		wreg, status,2, status,0, cstack
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4762 ;;      Params:         0       0       0       0       0       0       0
  4763 ;;      Locals:         0       0       0       0       0       0       0
  4764 ;;      Temps:          0       0       0       0       0       0       0
  4765 ;;      Totals:         0       0       0       0       0       0       0
  4766 ;;Total ram usage:        0 bytes
  4767 ;; Hardware stack levels used: 1
  4768 ;; Hardware stack levels required when called: 2
  4769 ;; This function calls:
  4770 ;;		_I2C_delay
  4771 ;;		_clear_SCL
  4772 ;;		_clear_SDA
  4773 ;;		_read_SCL
  4774 ;;		_read_SDA
  4775 ;; This function is called by:
  4776 ;;		_i2cWriteByte
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           	psect	text25
  4781  005B70                     __ptext25:
  4782                           	callstack 0
  4783  005B70                     _i2c_start:
  4784                           	callstack 24
  4785  005B70                     
  4786                           ;i2c.c: 54:  if (started) {
  4787  005B70  5052               	movf	_started^0,w,c
  4788  005B72  B4D8               	btfsc	status,2,c
  4789  005B74  EFBE  F02D         	goto	u2411
  4790  005B78  EFC0  F02D         	goto	u2410
  4791  005B7C                     u2411:
  4792  005B7C  EFD0  F02D         	goto	l3010
  4793  005B80                     u2410:
  4794  005B80                     
  4795                           ;i2c.c: 55:   read_SDA();
  4796  005B80  ECFF  F02C         	call	_read_SDA	;wreg free
  4797  005B84                     
  4798                           ;i2c.c: 56:   I2C_delay();
  4799  005B84  EC3B  F02B         	call	_I2C_delay	;wreg free
  4800  005B88                     l3006:
  4801  005B88  ECE3  F02C         	call	_read_SCL	;wreg free
  4802  005B8C  0900               	iorlw	0
  4803  005B8E  B4D8               	btfsc	status,2,c
  4804  005B90  EFCC  F02D         	goto	u2421
  4805  005B94  EFCE  F02D         	goto	u2420
  4806  005B98                     u2421:
  4807  005B98  EFC4  F02D         	goto	l3006
  4808  005B9C                     u2420:
  4809  005B9C                     
  4810                           ;i2c.c: 59:   I2C_delay();
  4811  005B9C  EC3B  F02B         	call	_I2C_delay	;wreg free
  4812  005BA0                     l3010:
  4813                           
  4814                           ;i2c.c: 61:  if (read_SDA() == 0) {
  4815  005BA0  ECFF  F02C         	call	_read_SDA	;wreg free
  4816  005BA4                     
  4817                           ;i2c.c: 65:  clear_SDA();
  4818  005BA4  EC3A  F02C         	call	_clear_SDA	;wreg free
  4819  005BA8                     
  4820                           ;i2c.c: 66:  I2C_delay();
  4821  005BA8  EC3B  F02B         	call	_I2C_delay	;wreg free
  4822  005BAC                     
  4823                           ;i2c.c: 67:  clear_SCL();
  4824  005BAC  EC25  F02C         	call	_clear_SCL	;wreg free
  4825  005BB0                     
  4826                           ;i2c.c: 68:  started = 1;
  4827  005BB0  0E01               	movlw	1
  4828  005BB2  6E52               	movwf	_started^0,c
  4829  005BB4  0012               	return		;funcret
  4830  005BB6                     __end_of_i2c_start:
  4831                           	callstack 0
  4832                           
  4833 ;; *************** function _i2cReadByte *****************
  4834 ;; Defined at:
  4835 ;;		line 131 in file "i2c.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  nack            1    wreg     unsigned char 
  4838 ;;  send_stop       1    7[COMRAM] unsigned char 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  nack            1    9[COMRAM] unsigned char 
  4841 ;;  bit             2   10[COMRAM] unsigned int 
  4842 ;;  byte            1   12[COMRAM] unsigned char 
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  1    wreg      unsigned char 
  4845 ;; Registers used:
  4846 ;;		wreg, status,2, status,0, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4852 ;;      Params:         1       0       0       0       0       0       0
  4853 ;;      Locals:         4       0       0       0       0       0       0
  4854 ;;      Temps:          1       0       0       0       0       0       0
  4855 ;;      Totals:         6       0       0       0       0       0       0
  4856 ;;Total ram usage:        6 bytes
  4857 ;; Hardware stack levels used: 1
  4858 ;; Hardware stack levels required when called: 3
  4859 ;; This function calls:
  4860 ;;		_i2c_read_bit
  4861 ;;		_i2c_stop
  4862 ;;		_i2c_write_bit
  4863 ;; This function is called by:
  4864 ;;		_dsReadData
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text26
  4869  005D32                     __ptext26:
  4870                           	callstack 0
  4871  005D32                     _i2cReadByte:
  4872                           	callstack 24
  4873                           
  4874                           ;incstack = 0
  4875                           ;i2cReadByte@nack stored from wreg
  4876  005D32  6E0A               	movwf	i2cReadByte@nack^0,c
  4877  005D34                     
  4878                           ;i2c.c: 132:  unsigned char byte = 0;
  4879  005D34  0E00               	movlw	0
  4880  005D36  6E0D               	movwf	i2cReadByte@byte^0,c
  4881                           
  4882                           ;i2c.c: 133:  unsigned bit;;i2c.c: 134:  for (bit = 0; bit < 8; bit++) {
  4883  005D38  0E00               	movlw	0
  4884  005D3A  6E0C               	movwf	(i2cReadByte@bit+1)^0,c
  4885  005D3C  0E00               	movlw	0
  4886  005D3E  6E0B               	movwf	i2cReadByte@bit^0,c
  4887  005D40                     l3138:
  4888                           
  4889                           ;i2c.c: 135:   byte = (byte << 1) | i2c_read_bit();
  4890  005D40  EC96  F02C         	call	_i2c_read_bit	;wreg free
  4891  005D44  6E09               	movwf	??_i2cReadByte^0,c
  4892  005D46  500D               	movf	i2cReadByte@byte^0,w,c
  4893  005D48  240D               	addwf	i2cReadByte@byte^0,w,c
  4894  005D4A  1009               	iorwf	??_i2cReadByte^0,w,c
  4895  005D4C  6E0D               	movwf	i2cReadByte@byte^0,c
  4896  005D4E                     
  4897                           ;i2c.c: 136:  }
  4898  005D4E  4A0B               	infsnz	i2cReadByte@bit^0,f,c
  4899  005D50  2A0C               	incf	(i2cReadByte@bit+1)^0,f,c
  4900  005D52  500C               	movf	(i2cReadByte@bit+1)^0,w,c
  4901  005D54  E109               	bnz	u2610
  4902  005D56  0E08               	movlw	8
  4903  005D58  5C0B               	subwf	i2cReadByte@bit^0,w,c
  4904  005D5A  A0D8               	btfss	status,0,c
  4905  005D5C  EFB2  F02E         	goto	u2611
  4906  005D60  EFB4  F02E         	goto	u2610
  4907  005D64                     u2611:
  4908  005D64  EFA0  F02E         	goto	l3138
  4909  005D68                     u2610:
  4910  005D68                     
  4911                           ;i2c.c: 137:  i2c_write_bit(nack);
  4912  005D68  500A               	movf	i2cReadByte@nack^0,w,c
  4913  005D6A  EC19  F02F         	call	_i2c_write_bit
  4914  005D6E                     
  4915                           ;i2c.c: 138:  if (send_stop) {
  4916  005D6E  5008               	movf	i2cReadByte@send_stop^0,w,c
  4917  005D70  B4D8               	btfsc	status,2,c
  4918  005D72  EFBD  F02E         	goto	u2621
  4919  005D76  EFBF  F02E         	goto	u2620
  4920  005D7A                     u2621:
  4921  005D7A  EFC1  F02E         	goto	l3150
  4922  005D7E                     u2620:
  4923  005D7E                     
  4924                           ;i2c.c: 139:   i2c_stop();
  4925  005D7E  EC4F  F02C         	call	_i2c_stop	;wreg free
  4926  005D82                     l3150:
  4927                           
  4928                           ;i2c.c: 141:  return byte;
  4929  005D82  500D               	movf	i2cReadByte@byte^0,w,c
  4930  005D84  0012               	return		;funcret
  4931  005D86                     __end_of_i2cReadByte:
  4932                           	callstack 0
  4933                           
  4934 ;; *************** function _i2c_write_bit *****************
  4935 ;; Defined at:
  4936 ;;		line 84 in file "i2c.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  bit             1    wreg     unsigned char 
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;  bit             1    6[COMRAM] unsigned char 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      void 
  4943 ;; Registers used:
  4944 ;;		wreg, status,2, status,0, cstack
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4950 ;;      Params:         0       0       0       0       0       0       0
  4951 ;;      Locals:         1       0       0       0       0       0       0
  4952 ;;      Temps:          0       0       0       0       0       0       0
  4953 ;;      Totals:         1       0       0       0       0       0       0
  4954 ;;Total ram usage:        1 bytes
  4955 ;; Hardware stack levels used: 1
  4956 ;; Hardware stack levels required when called: 2
  4957 ;; This function calls:
  4958 ;;		_I2C_delay
  4959 ;;		_clear_SCL
  4960 ;;		_clear_SDA
  4961 ;;		_read_SCL
  4962 ;;		_read_SDA
  4963 ;; This function is called by:
  4964 ;;		_i2cWriteByte
  4965 ;;		_i2cReadByte
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text27
  4970  005E32                     __ptext27:
  4971                           	callstack 0
  4972  005E32                     _i2c_write_bit:
  4973                           	callstack 24
  4974                           
  4975                           ;incstack = 0
  4976                           ;i2c_write_bit@bit stored from wreg
  4977  005E32  6E07               	movwf	i2c_write_bit@bit^0,c
  4978  005E34                     
  4979                           ;i2c.c: 85:  if (bit) {
  4980  005E34  5007               	movf	i2c_write_bit@bit^0,w,c
  4981  005E36  B4D8               	btfsc	status,2,c
  4982  005E38  EF20  F02F         	goto	u2441
  4983  005E3C  EF22  F02F         	goto	u2440
  4984  005E40                     u2441:
  4985  005E40  EF26  F02F         	goto	l3038
  4986  005E44                     u2440:
  4987  005E44                     
  4988                           ;i2c.c: 86:   read_SDA();
  4989  005E44  ECFF  F02C         	call	_read_SDA	;wreg free
  4990                           
  4991                           ;i2c.c: 87:  } else {
  4992  005E48  EF28  F02F         	goto	l3040
  4993  005E4C                     l3038:
  4994                           
  4995                           ;i2c.c: 88:   clear_SDA();
  4996  005E4C  EC3A  F02C         	call	_clear_SDA	;wreg free
  4997  005E50                     l3040:
  4998                           
  4999                           ;i2c.c: 90:  I2C_delay();
  5000  005E50  EC3B  F02B         	call	_I2C_delay	;wreg free
  5001  005E54                     l3042:
  5002  005E54  ECE3  F02C         	call	_read_SCL	;wreg free
  5003  005E58  0900               	iorlw	0
  5004  005E5A  B4D8               	btfsc	status,2,c
  5005  005E5C  EF32  F02F         	goto	u2451
  5006  005E60  EF34  F02F         	goto	u2450
  5007  005E64                     u2451:
  5008  005E64  EF2A  F02F         	goto	l3042
  5009  005E68                     u2450:
  5010  005E68                     
  5011                           ;i2c.c: 92:  if (bit && read_SDA() == 0) {
  5012  005E68  5007               	movf	i2c_write_bit@bit^0,w,c
  5013  005E6A  B4D8               	btfsc	status,2,c
  5014  005E6C  EF3A  F02F         	goto	u2461
  5015  005E70  EF3C  F02F         	goto	u2460
  5016  005E74                     u2461:
  5017  005E74  EF3E  F02F         	goto	l3048
  5018  005E78                     u2460:
  5019  005E78  ECFF  F02C         	call	_read_SDA	;wreg free
  5020  005E7C                     l3048:
  5021                           
  5022                           ;i2c.c: 95:  I2C_delay();
  5023  005E7C  EC3B  F02B         	call	_I2C_delay	;wreg free
  5024  005E80                     
  5025                           ;i2c.c: 96:  clear_SCL();
  5026  005E80  EC25  F02C         	call	_clear_SCL	;wreg free
  5027  005E84                     
  5028                           ;i2c.c: 97:  I2C_delay();
  5029  005E84  EC3B  F02B         	call	_I2C_delay	;wreg free
  5030  005E88  0012               	return		;funcret
  5031  005E8A                     __end_of_i2c_write_bit:
  5032                           	callstack 0
  5033                           
  5034 ;; *************** function _i2c_stop *****************
  5035 ;; Defined at:
  5036 ;;		line 71 in file "i2c.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;		None
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;		None
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5050 ;;      Params:         0       0       0       0       0       0       0
  5051 ;;      Locals:         0       0       0       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0
  5053 ;;      Totals:         0       0       0       0       0       0       0
  5054 ;;Total ram usage:        0 bytes
  5055 ;; Hardware stack levels used: 1
  5056 ;; Hardware stack levels required when called: 2
  5057 ;; This function calls:
  5058 ;;		_I2C_delay
  5059 ;;		_clear_SDA
  5060 ;;		_read_SCL
  5061 ;;		_read_SDA
  5062 ;; This function is called by:
  5063 ;;		_i2cWriteByte
  5064 ;;		_i2cReadByte
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text28
  5069  00589E                     __ptext28:
  5070                           	callstack 0
  5071  00589E                     _i2c_stop:
  5072                           	callstack 24
  5073  00589E                     
  5074                           ;i2c.c: 73:  clear_SDA();
  5075  00589E  EC3A  F02C         	call	_clear_SDA	;wreg free
  5076  0058A2                     
  5077                           ;i2c.c: 74:  I2C_delay();
  5078  0058A2  EC3B  F02B         	call	_I2C_delay	;wreg free
  5079  0058A6                     l3024:
  5080  0058A6  ECE3  F02C         	call	_read_SCL	;wreg free
  5081  0058AA  0900               	iorlw	0
  5082  0058AC  B4D8               	btfsc	status,2,c
  5083  0058AE  EF5B  F02C         	goto	u2431
  5084  0058B2  EF5D  F02C         	goto	u2430
  5085  0058B6                     u2431:
  5086  0058B6  EF53  F02C         	goto	l3024
  5087  0058BA                     u2430:
  5088  0058BA                     
  5089                           ;i2c.c: 76:  I2C_delay();
  5090  0058BA  EC3B  F02B         	call	_I2C_delay	;wreg free
  5091  0058BE                     
  5092                           ;i2c.c: 77:  if (read_SDA() == 0) {
  5093  0058BE  ECFF  F02C         	call	_read_SDA	;wreg free
  5094  0058C2                     
  5095                           ;i2c.c: 80:  I2C_delay();
  5096  0058C2  EC3B  F02B         	call	_I2C_delay	;wreg free
  5097  0058C6                     
  5098                           ;i2c.c: 81:  started = 0;
  5099  0058C6  0E00               	movlw	0
  5100  0058C8  6E52               	movwf	_started^0,c
  5101  0058CA  0012               	return		;funcret
  5102  0058CC                     __end_of_i2c_stop:
  5103                           	callstack 0
  5104                           
  5105 ;; *************** function _clear_SDA *****************
  5106 ;; Defined at:
  5107 ;;		line 45 in file "i2c.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;		None
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      void 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5121 ;;      Params:         0       0       0       0       0       0       0
  5122 ;;      Locals:         0       0       0       0       0       0       0
  5123 ;;      Temps:          0       0       0       0       0       0       0
  5124 ;;      Totals:         0       0       0       0       0       0       0
  5125 ;;Total ram usage:        0 bytes
  5126 ;; Hardware stack levels used: 1
  5127 ;; Hardware stack levels required when called: 1
  5128 ;; This function calls:
  5129 ;;		_digitalWrite
  5130 ;;		_pinMode
  5131 ;; This function is called by:
  5132 ;;		_i2c_start
  5133 ;;		_i2c_stop
  5134 ;;		_i2c_write_bit
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text29
  5139  005874                     __ptext29:
  5140                           	callstack 0
  5141  005874                     _clear_SDA:
  5142                           	callstack 24
  5143  005874                     
  5144                           ;i2c.c: 47:  pinMode(PIN_B4,0);
  5145  005874  0E00               	movlw	0
  5146  005876  6E02               	movwf	(pinMode@pin+1)^0,c
  5147  005878  0E0C               	movlw	12
  5148  00587A  6E01               	movwf	pinMode@pin^0,c
  5149  00587C  0E00               	movlw	0
  5150  00587E  6E04               	movwf	(pinMode@type+1)^0,c
  5151  005880  0E00               	movlw	0
  5152  005882  6E03               	movwf	pinMode@type^0,c
  5153  005884  EC8C  F03B         	call	_pinMode	;wreg free
  5154                           
  5155                           ;i2c.c: 48:  digitalWrite(PIN_B4,0);
  5156  005888  0E00               	movlw	0
  5157  00588A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5158  00588C  0E0C               	movlw	12
  5159  00588E  6E01               	movwf	digitalWrite@pin^0,c
  5160  005890  0E00               	movlw	0
  5161  005892  6E04               	movwf	(digitalWrite@value+1)^0,c
  5162  005894  0E00               	movlw	0
  5163  005896  6E03               	movwf	digitalWrite@value^0,c
  5164  005898  EC65  F03A         	call	_digitalWrite	;wreg free
  5165  00589C  0012               	return		;funcret
  5166  00589E                     __end_of_clear_SDA:
  5167                           	callstack 0
  5168                           
  5169 ;; *************** function _i2c_read_bit *****************
  5170 ;; Defined at:
  5171 ;;		line 100 in file "i2c.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;		None
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  bit             1    6[COMRAM] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      unsigned char 
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5185 ;;      Params:         0       0       0       0       0       0       0
  5186 ;;      Locals:         1       0       0       0       0       0       0
  5187 ;;      Temps:          0       0       0       0       0       0       0
  5188 ;;      Totals:         1       0       0       0       0       0       0
  5189 ;;Total ram usage:        1 bytes
  5190 ;; Hardware stack levels used: 1
  5191 ;; Hardware stack levels required when called: 2
  5192 ;; This function calls:
  5193 ;;		_I2C_delay
  5194 ;;		_clear_SCL
  5195 ;;		_read_SCL
  5196 ;;		_read_SDA
  5197 ;; This function is called by:
  5198 ;;		_i2cWriteByte
  5199 ;;		_i2cReadByte
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text30
  5204  00592C                     __ptext30:
  5205                           	callstack 0
  5206  00592C                     _i2c_read_bit:
  5207                           	callstack 24
  5208  00592C                     
  5209                           ;i2c.c: 101:  unsigned char bit;;i2c.c: 102:  read_SDA();
  5210  00592C  ECFF  F02C         	call	_read_SDA	;wreg free
  5211  005930                     
  5212                           ;i2c.c: 103:  I2C_delay();
  5213  005930  EC3B  F02B         	call	_I2C_delay	;wreg free
  5214  005934                     l3058:
  5215  005934  ECE3  F02C         	call	_read_SCL	;wreg free
  5216  005938  0900               	iorlw	0
  5217  00593A  B4D8               	btfsc	status,2,c
  5218  00593C  EFA2  F02C         	goto	u2471
  5219  005940  EFA4  F02C         	goto	u2470
  5220  005944                     u2471:
  5221  005944  EF9A  F02C         	goto	l3058
  5222  005948                     u2470:
  5223  005948                     
  5224                           ;i2c.c: 105:  bit = read_SDA();
  5225  005948  ECFF  F02C         	call	_read_SDA	;wreg free
  5226  00594C  6E07               	movwf	i2c_read_bit@bit^0,c
  5227  00594E                     
  5228                           ;i2c.c: 106:  I2C_delay();
  5229  00594E  EC3B  F02B         	call	_I2C_delay	;wreg free
  5230  005952                     
  5231                           ;i2c.c: 107:  clear_SCL();
  5232  005952  EC25  F02C         	call	_clear_SCL	;wreg free
  5233                           
  5234                           ;i2c.c: 108:  I2C_delay();
  5235  005956  EC3B  F02B         	call	_I2C_delay	;wreg free
  5236  00595A                     
  5237                           ;i2c.c: 109:  return bit;
  5238  00595A  5007               	movf	i2c_read_bit@bit^0,w,c
  5239  00595C  0012               	return		;funcret
  5240  00595E                     __end_of_i2c_read_bit:
  5241                           	callstack 0
  5242                           
  5243 ;; *************** function _read_SDA *****************
  5244 ;; Defined at:
  5245 ;;		line 34 in file "i2c.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;		None
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      unsigned char 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0, cstack
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5259 ;;      Params:         0       0       0       0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0
  5262 ;;      Totals:         0       0       0       0       0       0       0
  5263 ;;Total ram usage:        0 bytes
  5264 ;; Hardware stack levels used: 1
  5265 ;; Hardware stack levels required when called: 1
  5266 ;; This function calls:
  5267 ;;		_digitalRead
  5268 ;;		_pinMode
  5269 ;; This function is called by:
  5270 ;;		_i2c_start
  5271 ;;		_i2c_stop
  5272 ;;		_i2c_write_bit
  5273 ;;		_i2c_read_bit
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text31
  5278  0059FE                     __ptext31:
  5279                           	callstack 0
  5280  0059FE                     _read_SDA:
  5281                           	callstack 24
  5282  0059FE                     
  5283                           ;i2c.c: 36:  pinMode(PIN_B4,1);
  5284  0059FE  0E00               	movlw	0
  5285  005A00  6E02               	movwf	(pinMode@pin+1)^0,c
  5286  005A02  0E0C               	movlw	12
  5287  005A04  6E01               	movwf	pinMode@pin^0,c
  5288  005A06  0E00               	movlw	0
  5289  005A08  6E04               	movwf	(pinMode@type+1)^0,c
  5290  005A0A  0E01               	movlw	1
  5291  005A0C  6E03               	movwf	pinMode@type^0,c
  5292  005A0E  EC8C  F03B         	call	_pinMode	;wreg free
  5293                           
  5294                           ;i2c.c: 37:  return !!digitalRead(PIN_B4);
  5295  005A12  0E00               	movlw	0
  5296  005A14  6E02               	movwf	(digitalRead@pin+1)^0,c
  5297  005A16  0E0C               	movlw	12
  5298  005A18  6E01               	movwf	digitalRead@pin^0,c
  5299  005A1A  ECD5  F036         	call	_digitalRead	;wreg free
  5300  005A1E  5001               	movf	?_digitalRead^0,w,c
  5301  005A20  1002               	iorwf	(?_digitalRead+1)^0,w,c
  5302  005A22  A4D8               	btfss	status,2,c
  5303  005A24  EF16  F02D         	goto	u2351
  5304  005A28  EF19  F02D         	goto	u2350
  5305  005A2C                     u2351:
  5306  005A2C  0E01               	movlw	1
  5307  005A2E  EF1A  F02D         	goto	u2360
  5308  005A32                     u2350:
  5309  005A32  0E00               	movlw	0
  5310  005A34                     u2360:
  5311  005A34  0012               	return		;funcret
  5312  005A36                     __end_of_read_SDA:
  5313                           	callstack 0
  5314                           
  5315 ;; *************** function _read_SCL *****************
  5316 ;; Defined at:
  5317 ;;		line 29 in file "i2c.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;		None
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;		None
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      unsigned char 
  5324 ;; Registers used:
  5325 ;;		wreg, status,2, status,0, cstack
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5331 ;;      Params:         0       0       0       0       0       0       0
  5332 ;;      Locals:         0       0       0       0       0       0       0
  5333 ;;      Temps:          0       0       0       0       0       0       0
  5334 ;;      Totals:         0       0       0       0       0       0       0
  5335 ;;Total ram usage:        0 bytes
  5336 ;; Hardware stack levels used: 1
  5337 ;; Hardware stack levels required when called: 1
  5338 ;; This function calls:
  5339 ;;		_digitalRead
  5340 ;;		_pinMode
  5341 ;; This function is called by:
  5342 ;;		_i2c_start
  5343 ;;		_i2c_stop
  5344 ;;		_i2c_write_bit
  5345 ;;		_i2c_read_bit
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           	psect	text32
  5350  0059C6                     __ptext32:
  5351                           	callstack 0
  5352  0059C6                     _read_SCL:
  5353                           	callstack 24
  5354  0059C6                     
  5355                           ;i2c.c: 31:  pinMode(PIN_B3,1);
  5356  0059C6  0E00               	movlw	0
  5357  0059C8  6E02               	movwf	(pinMode@pin+1)^0,c
  5358  0059CA  0E0B               	movlw	11
  5359  0059CC  6E01               	movwf	pinMode@pin^0,c
  5360  0059CE  0E00               	movlw	0
  5361  0059D0  6E04               	movwf	(pinMode@type+1)^0,c
  5362  0059D2  0E01               	movlw	1
  5363  0059D4  6E03               	movwf	pinMode@type^0,c
  5364  0059D6  EC8C  F03B         	call	_pinMode	;wreg free
  5365                           
  5366                           ;i2c.c: 32:  return !!digitalRead(PIN_B3);
  5367  0059DA  0E00               	movlw	0
  5368  0059DC  6E02               	movwf	(digitalRead@pin+1)^0,c
  5369  0059DE  0E0B               	movlw	11
  5370  0059E0  6E01               	movwf	digitalRead@pin^0,c
  5371  0059E2  ECD5  F036         	call	_digitalRead	;wreg free
  5372  0059E6  5001               	movf	?_digitalRead^0,w,c
  5373  0059E8  1002               	iorwf	(?_digitalRead+1)^0,w,c
  5374  0059EA  A4D8               	btfss	status,2,c
  5375  0059EC  EFFA  F02C         	goto	u2331
  5376  0059F0  EFFD  F02C         	goto	u2330
  5377  0059F4                     u2331:
  5378  0059F4  0E01               	movlw	1
  5379  0059F6  EFFE  F02C         	goto	u2340
  5380  0059FA                     u2330:
  5381  0059FA  0E00               	movlw	0
  5382  0059FC                     u2340:
  5383  0059FC  0012               	return		;funcret
  5384  0059FE                     __end_of_read_SCL:
  5385                           	callstack 0
  5386                           
  5387 ;; *************** function _digitalRead *****************
  5388 ;; Defined at:
  5389 ;;		line 39 in file "io.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  pin             2    0[COMRAM] int 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  2    0[COMRAM] int 
  5396 ;; Registers used:
  5397 ;;		wreg, status,2, status,0
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5403 ;;      Params:         2       0       0       0       0       0       0
  5404 ;;      Locals:         0       0       0       0       0       0       0
  5405 ;;      Temps:          3       0       0       0       0       0       0
  5406 ;;      Totals:         5       0       0       0       0       0       0
  5407 ;;Total ram usage:        5 bytes
  5408 ;; Hardware stack levels used: 1
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		_read_SCL
  5413 ;;		_read_SDA
  5414 ;;		_kpDebounce
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text33
  5419  006DAA                     __ptext33:
  5420                           	callstack 0
  5421  006DAA                     _digitalRead:
  5422                           	callstack 29
  5423  006DAA                     
  5424                           ;io.c: 40:     if(pin <8){
  5425  006DAA  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5426  006DAC  EFE3  F036         	goto	u2220
  5427  006DB0  5002               	movf	(digitalRead@pin+1)^0,w,c
  5428  006DB2  E107               	bnz	u2221
  5429  006DB4  0E08               	movlw	8
  5430  006DB6  5C01               	subwf	digitalRead@pin^0,w,c
  5431  006DB8  B0D8               	btfsc	status,0,c
  5432  006DBA  EFE1  F036         	goto	u2221
  5433  006DBE  EFE3  F036         	goto	u2220
  5434  006DC2                     u2221:
  5435  006DC2  EFF7  F036         	goto	l2898
  5436  006DC6                     u2220:
  5437  006DC6                     
  5438                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  5439  006DC6  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5440  006DCA  0E01               	movlw	1
  5441  006DCC  6E04               	movwf	(??_digitalRead+1)^0,c
  5442  006DCE  2A03               	incf	??_digitalRead^0,f,c
  5443  006DD0  EFEC  F036         	goto	u2234
  5444  006DD4                     u2235:
  5445  006DD4  90D8               	bcf	status,0,c
  5446  006DD6  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5447  006DD8                     u2234:
  5448  006DD8  2E03               	decfsz	??_digitalRead^0,f,c
  5449  006DDA  EFEA  F036         	goto	u2235
  5450  006DDE  5004               	movf	(??_digitalRead+1)^0,w,c
  5451  006DE0  1480               	andwf	128,w,c	;volatile
  5452  006DE2  6E05               	movwf	(??_digitalRead+2)^0,c
  5453  006DE4  5005               	movf	(??_digitalRead+2)^0,w,c
  5454  006DE6  6E01               	movwf	?_digitalRead^0,c
  5455  006DE8  6A02               	clrf	(?_digitalRead+1)^0,c
  5456  006DEA  EF89  F037         	goto	l376
  5457  006DEE                     l2898:
  5458  006DEE  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5459  006DF0  EF05  F037         	goto	u2240
  5460  006DF4  5002               	movf	(digitalRead@pin+1)^0,w,c
  5461  006DF6  E107               	bnz	u2241
  5462  006DF8  0E10               	movlw	16
  5463  006DFA  5C01               	subwf	digitalRead@pin^0,w,c
  5464  006DFC  B0D8               	btfsc	status,0,c
  5465  006DFE  EF03  F037         	goto	u2241
  5466  006E02  EF05  F037         	goto	u2240
  5467  006E06                     u2241:
  5468  006E06  EF1B  F037         	goto	l2906
  5469  006E0A                     u2240:
  5470  006E0A                     
  5471                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  5472  006E0A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5473  006E0E  0EF8               	movlw	-8
  5474  006E10  2603               	addwf	??_digitalRead^0,f,c
  5475  006E12  0E01               	movlw	1
  5476  006E14  6E04               	movwf	(??_digitalRead+1)^0,c
  5477  006E16  2A03               	incf	??_digitalRead^0,f,c
  5478  006E18  EF10  F037         	goto	u2254
  5479  006E1C                     u2255:
  5480  006E1C  90D8               	bcf	status,0,c
  5481  006E1E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5482  006E20                     u2254:
  5483  006E20  2E03               	decfsz	??_digitalRead^0,f,c
  5484  006E22  EF0E  F037         	goto	u2255
  5485  006E26  5004               	movf	(??_digitalRead+1)^0,w,c
  5486  006E28  1481               	andwf	129,w,c	;volatile
  5487  006E2A  6E05               	movwf	(??_digitalRead+2)^0,c
  5488  006E2C  5005               	movf	(??_digitalRead+2)^0,w,c
  5489  006E2E  6E01               	movwf	?_digitalRead^0,c
  5490  006E30  6A02               	clrf	(?_digitalRead+1)^0,c
  5491  006E32  EF89  F037         	goto	l376
  5492  006E36                     l2906:
  5493  006E36  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5494  006E38  EF29  F037         	goto	u2260
  5495  006E3C  5002               	movf	(digitalRead@pin+1)^0,w,c
  5496  006E3E  E107               	bnz	u2261
  5497  006E40  0E18               	movlw	24
  5498  006E42  5C01               	subwf	digitalRead@pin^0,w,c
  5499  006E44  B0D8               	btfsc	status,0,c
  5500  006E46  EF27  F037         	goto	u2261
  5501  006E4A  EF29  F037         	goto	u2260
  5502  006E4E                     u2261:
  5503  006E4E  EF3F  F037         	goto	l2914
  5504  006E52                     u2260:
  5505  006E52                     
  5506                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  5507  006E52  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5508  006E56  0EF0               	movlw	-16
  5509  006E58  2603               	addwf	??_digitalRead^0,f,c
  5510  006E5A  0E01               	movlw	1
  5511  006E5C  6E04               	movwf	(??_digitalRead+1)^0,c
  5512  006E5E  2A03               	incf	??_digitalRead^0,f,c
  5513  006E60  EF34  F037         	goto	u2274
  5514  006E64                     u2275:
  5515  006E64  90D8               	bcf	status,0,c
  5516  006E66  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5517  006E68                     u2274:
  5518  006E68  2E03               	decfsz	??_digitalRead^0,f,c
  5519  006E6A  EF32  F037         	goto	u2275
  5520  006E6E  5004               	movf	(??_digitalRead+1)^0,w,c
  5521  006E70  1482               	andwf	130,w,c	;volatile
  5522  006E72  6E05               	movwf	(??_digitalRead+2)^0,c
  5523  006E74  5005               	movf	(??_digitalRead+2)^0,w,c
  5524  006E76  6E01               	movwf	?_digitalRead^0,c
  5525  006E78  6A02               	clrf	(?_digitalRead+1)^0,c
  5526  006E7A  EF89  F037         	goto	l376
  5527  006E7E                     l2914:
  5528  006E7E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5529  006E80  EF4D  F037         	goto	u2280
  5530  006E84  5002               	movf	(digitalRead@pin+1)^0,w,c
  5531  006E86  E107               	bnz	u2281
  5532  006E88  0E20               	movlw	32
  5533  006E8A  5C01               	subwf	digitalRead@pin^0,w,c
  5534  006E8C  B0D8               	btfsc	status,0,c
  5535  006E8E  EF4B  F037         	goto	u2281
  5536  006E92  EF4D  F037         	goto	u2280
  5537  006E96                     u2281:
  5538  006E96  EF63  F037         	goto	l2922
  5539  006E9A                     u2280:
  5540  006E9A                     
  5541                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  5542  006E9A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5543  006E9E  0EE8               	movlw	-24
  5544  006EA0  2603               	addwf	??_digitalRead^0,f,c
  5545  006EA2  0E01               	movlw	1
  5546  006EA4  6E04               	movwf	(??_digitalRead+1)^0,c
  5547  006EA6  2A03               	incf	??_digitalRead^0,f,c
  5548  006EA8  EF58  F037         	goto	u2294
  5549  006EAC                     u2295:
  5550  006EAC  90D8               	bcf	status,0,c
  5551  006EAE  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5552  006EB0                     u2294:
  5553  006EB0  2E03               	decfsz	??_digitalRead^0,f,c
  5554  006EB2  EF56  F037         	goto	u2295
  5555  006EB6  5004               	movf	(??_digitalRead+1)^0,w,c
  5556  006EB8  1483               	andwf	131,w,c	;volatile
  5557  006EBA  6E05               	movwf	(??_digitalRead+2)^0,c
  5558  006EBC  5005               	movf	(??_digitalRead+2)^0,w,c
  5559  006EBE  6E01               	movwf	?_digitalRead^0,c
  5560  006EC0  6A02               	clrf	(?_digitalRead+1)^0,c
  5561  006EC2  EF89  F037         	goto	l376
  5562  006EC6                     l2922:
  5563  006EC6  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  5564  006EC8  EF71  F037         	goto	u2300
  5565  006ECC  5002               	movf	(digitalRead@pin+1)^0,w,c
  5566  006ECE  E107               	bnz	u2301
  5567  006ED0  0E28               	movlw	40
  5568  006ED2  5C01               	subwf	digitalRead@pin^0,w,c
  5569  006ED4  B0D8               	btfsc	status,0,c
  5570  006ED6  EF6F  F037         	goto	u2301
  5571  006EDA  EF71  F037         	goto	u2300
  5572  006EDE                     u2301:
  5573  006EDE  EF87  F037         	goto	l381
  5574  006EE2                     u2300:
  5575  006EE2                     
  5576                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  5577  006EE2  C001  F003         	movff	digitalRead@pin,??_digitalRead
  5578  006EE6  0EE0               	movlw	-32
  5579  006EE8  2603               	addwf	??_digitalRead^0,f,c
  5580  006EEA  0E01               	movlw	1
  5581  006EEC  6E04               	movwf	(??_digitalRead+1)^0,c
  5582  006EEE  2A03               	incf	??_digitalRead^0,f,c
  5583  006EF0  EF7C  F037         	goto	u2314
  5584  006EF4                     u2315:
  5585  006EF4  90D8               	bcf	status,0,c
  5586  006EF6  3604               	rlcf	(??_digitalRead+1)^0,f,c
  5587  006EF8                     u2314:
  5588  006EF8  2E03               	decfsz	??_digitalRead^0,f,c
  5589  006EFA  EF7A  F037         	goto	u2315
  5590  006EFE  5004               	movf	(??_digitalRead+1)^0,w,c
  5591  006F00  1484               	andwf	132,w,c	;volatile
  5592  006F02  6E05               	movwf	(??_digitalRead+2)^0,c
  5593  006F04  5005               	movf	(??_digitalRead+2)^0,w,c
  5594  006F06  6E01               	movwf	?_digitalRead^0,c
  5595  006F08  6A02               	clrf	(?_digitalRead+1)^0,c
  5596  006F0A  EF89  F037         	goto	l376
  5597  006F0E                     l381:
  5598  006F0E                     
  5599                           ;io.c: 51:     return -1;
  5600  006F0E  6801               	setf	?_digitalRead^0,c
  5601  006F10  6802               	setf	(?_digitalRead+1)^0,c
  5602  006F12                     l376:
  5603  006F12  0012               	return		;funcret
  5604  006F14                     __end_of_digitalRead:
  5605                           	callstack 0
  5606                           
  5607 ;; *************** function _clear_SCL *****************
  5608 ;; Defined at:
  5609 ;;		line 39 in file "i2c.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;		None
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;		None
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      void 
  5616 ;; Registers used:
  5617 ;;		wreg, status,2, status,0, cstack
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5623 ;;      Params:         0       0       0       0       0       0       0
  5624 ;;      Locals:         0       0       0       0       0       0       0
  5625 ;;      Temps:          0       0       0       0       0       0       0
  5626 ;;      Totals:         0       0       0       0       0       0       0
  5627 ;;Total ram usage:        0 bytes
  5628 ;; Hardware stack levels used: 1
  5629 ;; Hardware stack levels required when called: 1
  5630 ;; This function calls:
  5631 ;;		_digitalWrite
  5632 ;;		_pinMode
  5633 ;; This function is called by:
  5634 ;;		_i2c_start
  5635 ;;		_i2c_write_bit
  5636 ;;		_i2c_read_bit
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text34
  5641  00584A                     __ptext34:
  5642                           	callstack 0
  5643  00584A                     _clear_SCL:
  5644                           	callstack 24
  5645  00584A                     
  5646                           ;i2c.c: 41:  pinMode(PIN_B3,0);
  5647  00584A  0E00               	movlw	0
  5648  00584C  6E02               	movwf	(pinMode@pin+1)^0,c
  5649  00584E  0E0B               	movlw	11
  5650  005850  6E01               	movwf	pinMode@pin^0,c
  5651  005852  0E00               	movlw	0
  5652  005854  6E04               	movwf	(pinMode@type+1)^0,c
  5653  005856  0E00               	movlw	0
  5654  005858  6E03               	movwf	pinMode@type^0,c
  5655  00585A  EC8C  F03B         	call	_pinMode	;wreg free
  5656                           
  5657                           ;i2c.c: 42:  digitalWrite(PIN_B3,0);
  5658  00585E  0E00               	movlw	0
  5659  005860  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5660  005862  0E0B               	movlw	11
  5661  005864  6E01               	movwf	digitalWrite@pin^0,c
  5662  005866  0E00               	movlw	0
  5663  005868  6E04               	movwf	(digitalWrite@value+1)^0,c
  5664  00586A  0E00               	movlw	0
  5665  00586C  6E03               	movwf	digitalWrite@value^0,c
  5666  00586E  EC65  F03A         	call	_digitalWrite	;wreg free
  5667  005872  0012               	return		;funcret
  5668  005874                     __end_of_clear_SCL:
  5669                           	callstack 0
  5670                           
  5671 ;; *************** function _pinMode *****************
  5672 ;; Defined at:
  5673 ;;		line 54 in file "io.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  pin             2    0[COMRAM] int 
  5676 ;;  type            2    2[COMRAM] int 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;		None
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      void 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5688 ;;      Params:         4       0       0       0       0       0       0
  5689 ;;      Locals:         0       0       0       0       0       0       0
  5690 ;;      Temps:          2       0       0       0       0       0       0
  5691 ;;      Totals:         6       0       0       0       0       0       0
  5692 ;;Total ram usage:        6 bytes
  5693 ;; Hardware stack levels used: 1
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		_adcInit
  5698 ;;		_read_SCL
  5699 ;;		_read_SDA
  5700 ;;		_clear_SCL
  5701 ;;		_clear_SDA
  5702 ;;		_kpInit
  5703 ;;		_lcdInit
  5704 ;;		_rgbInit
  5705 ;;		_soInit
  5706 ;;		_i2cInit
  5707 ;;		_ssdInit
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           	psect	text35
  5712  007718                     __ptext35:
  5713                           	callstack 0
  5714  007718                     _pinMode:
  5715                           	callstack 29
  5716  007718                     
  5717                           ;io.c: 56:     if(pin <8){
  5718  007718  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5719  00771A  EF9A  F03B         	goto	u2020
  5720  00771E  5002               	movf	(pinMode@pin+1)^0,w,c
  5721  007720  E107               	bnz	u2021
  5722  007722  0E08               	movlw	8
  5723  007724  5C01               	subwf	pinMode@pin^0,w,c
  5724  007726  B0D8               	btfsc	status,0,c
  5725  007728  EF98  F03B         	goto	u2021
  5726  00772C  EF9A  F03B         	goto	u2020
  5727  007730                     u2021:
  5728  007730  EFC4  F03B         	goto	l2858
  5729  007734                     u2020:
  5730  007734                     
  5731                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  5732  007734  5003               	movf	pinMode@type^0,w,c
  5733  007736  1004               	iorwf	(pinMode@type+1)^0,w,c
  5734  007738  B4D8               	btfsc	status,2,c
  5735  00773A  EFA1  F03B         	goto	u2031
  5736  00773E  EFA3  F03B         	goto	u2030
  5737  007742                     u2031:
  5738  007742  EFB3  F03B         	goto	l2856
  5739  007746                     u2030:
  5740  007746  C001  F005         	movff	pinMode@pin,??_pinMode
  5741  00774A  0E01               	movlw	1
  5742  00774C  6E06               	movwf	(??_pinMode+1)^0,c
  5743  00774E  2A05               	incf	??_pinMode^0,f,c
  5744  007750  EFAC  F03B         	goto	u2044
  5745  007754                     u2045:
  5746  007754  90D8               	bcf	status,0,c
  5747  007756  3606               	rlcf	(??_pinMode+1)^0,f,c
  5748  007758                     u2044:
  5749  007758  2E05               	decfsz	??_pinMode^0,f,c
  5750  00775A  EFAA  F03B         	goto	u2045
  5751  00775E  5006               	movf	(??_pinMode+1)^0,w,c
  5752  007760  1292               	iorwf	146,f,c	;volatile
  5753  007762  EFB2  F03C         	goto	l406
  5754  007766                     l2856:
  5755  007766  C001  F005         	movff	pinMode@pin,??_pinMode
  5756  00776A  0E01               	movlw	1
  5757  00776C  6E06               	movwf	(??_pinMode+1)^0,c
  5758  00776E  2A05               	incf	??_pinMode^0,f,c
  5759  007770  EFBC  F03B         	goto	u2054
  5760  007774                     u2055:
  5761  007774  90D8               	bcf	status,0,c
  5762  007776  3606               	rlcf	(??_pinMode+1)^0,f,c
  5763  007778                     u2054:
  5764  007778  2E05               	decfsz	??_pinMode^0,f,c
  5765  00777A  EFBA  F03B         	goto	u2055
  5766  00777E  5006               	movf	(??_pinMode+1)^0,w,c
  5767  007780  0AFF               	xorlw	255
  5768  007782  1692               	andwf	146,f,c	;volatile
  5769  007784  EFB2  F03C         	goto	l406
  5770  007788                     l2858:
  5771  007788  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5772  00778A  EFD2  F03B         	goto	u2060
  5773  00778E  5002               	movf	(pinMode@pin+1)^0,w,c
  5774  007790  E107               	bnz	u2061
  5775  007792  0E10               	movlw	16
  5776  007794  5C01               	subwf	pinMode@pin^0,w,c
  5777  007796  B0D8               	btfsc	status,0,c
  5778  007798  EFD0  F03B         	goto	u2061
  5779  00779C  EFD2  F03B         	goto	u2060
  5780  0077A0                     u2061:
  5781  0077A0  EF00  F03C         	goto	l2866
  5782  0077A4                     u2060:
  5783  0077A4                     
  5784                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  5785  0077A4  5003               	movf	pinMode@type^0,w,c
  5786  0077A6  1004               	iorwf	(pinMode@type+1)^0,w,c
  5787  0077A8  B4D8               	btfsc	status,2,c
  5788  0077AA  EFD9  F03B         	goto	u2071
  5789  0077AE  EFDB  F03B         	goto	u2070
  5790  0077B2                     u2071:
  5791  0077B2  EFED  F03B         	goto	l2864
  5792  0077B6                     u2070:
  5793  0077B6  C001  F005         	movff	pinMode@pin,??_pinMode
  5794  0077BA  0EF8               	movlw	-8
  5795  0077BC  2605               	addwf	??_pinMode^0,f,c
  5796  0077BE  0E01               	movlw	1
  5797  0077C0  6E06               	movwf	(??_pinMode+1)^0,c
  5798  0077C2  2A05               	incf	??_pinMode^0,f,c
  5799  0077C4  EFE6  F03B         	goto	u2084
  5800  0077C8                     u2085:
  5801  0077C8  90D8               	bcf	status,0,c
  5802  0077CA  3606               	rlcf	(??_pinMode+1)^0,f,c
  5803  0077CC                     u2084:
  5804  0077CC  2E05               	decfsz	??_pinMode^0,f,c
  5805  0077CE  EFE4  F03B         	goto	u2085
  5806  0077D2  5006               	movf	(??_pinMode+1)^0,w,c
  5807  0077D4  1293               	iorwf	147,f,c	;volatile
  5808  0077D6  EFB2  F03C         	goto	l406
  5809  0077DA                     l2864:
  5810  0077DA  C001  F005         	movff	pinMode@pin,??_pinMode
  5811  0077DE  0EF8               	movlw	-8
  5812  0077E0  2605               	addwf	??_pinMode^0,f,c
  5813  0077E2  0E01               	movlw	1
  5814  0077E4  6E06               	movwf	(??_pinMode+1)^0,c
  5815  0077E6  2A05               	incf	??_pinMode^0,f,c
  5816  0077E8  EFF8  F03B         	goto	u2094
  5817  0077EC                     u2095:
  5818  0077EC  90D8               	bcf	status,0,c
  5819  0077EE  3606               	rlcf	(??_pinMode+1)^0,f,c
  5820  0077F0                     u2094:
  5821  0077F0  2E05               	decfsz	??_pinMode^0,f,c
  5822  0077F2  EFF6  F03B         	goto	u2095
  5823  0077F6  5006               	movf	(??_pinMode+1)^0,w,c
  5824  0077F8  0AFF               	xorlw	255
  5825  0077FA  1693               	andwf	147,f,c	;volatile
  5826  0077FC  EFB2  F03C         	goto	l406
  5827  007800                     l2866:
  5828  007800  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5829  007802  EF0E  F03C         	goto	u2100
  5830  007806  5002               	movf	(pinMode@pin+1)^0,w,c
  5831  007808  E107               	bnz	u2101
  5832  00780A  0E18               	movlw	24
  5833  00780C  5C01               	subwf	pinMode@pin^0,w,c
  5834  00780E  B0D8               	btfsc	status,0,c
  5835  007810  EF0C  F03C         	goto	u2101
  5836  007814  EF0E  F03C         	goto	u2100
  5837  007818                     u2101:
  5838  007818  EF3C  F03C         	goto	l2874
  5839  00781C                     u2100:
  5840  00781C                     
  5841                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  5842  00781C  5003               	movf	pinMode@type^0,w,c
  5843  00781E  1004               	iorwf	(pinMode@type+1)^0,w,c
  5844  007820  B4D8               	btfsc	status,2,c
  5845  007822  EF15  F03C         	goto	u2111
  5846  007826  EF17  F03C         	goto	u2110
  5847  00782A                     u2111:
  5848  00782A  EF29  F03C         	goto	l2872
  5849  00782E                     u2110:
  5850  00782E  C001  F005         	movff	pinMode@pin,??_pinMode
  5851  007832  0EF0               	movlw	-16
  5852  007834  2605               	addwf	??_pinMode^0,f,c
  5853  007836  0E01               	movlw	1
  5854  007838  6E06               	movwf	(??_pinMode+1)^0,c
  5855  00783A  2A05               	incf	??_pinMode^0,f,c
  5856  00783C  EF22  F03C         	goto	u2124
  5857  007840                     u2125:
  5858  007840  90D8               	bcf	status,0,c
  5859  007842  3606               	rlcf	(??_pinMode+1)^0,f,c
  5860  007844                     u2124:
  5861  007844  2E05               	decfsz	??_pinMode^0,f,c
  5862  007846  EF20  F03C         	goto	u2125
  5863  00784A  5006               	movf	(??_pinMode+1)^0,w,c
  5864  00784C  1294               	iorwf	148,f,c	;volatile
  5865  00784E  EFB2  F03C         	goto	l406
  5866  007852                     l2872:
  5867  007852  C001  F005         	movff	pinMode@pin,??_pinMode
  5868  007856  0EF0               	movlw	-16
  5869  007858  2605               	addwf	??_pinMode^0,f,c
  5870  00785A  0E01               	movlw	1
  5871  00785C  6E06               	movwf	(??_pinMode+1)^0,c
  5872  00785E  2A05               	incf	??_pinMode^0,f,c
  5873  007860  EF34  F03C         	goto	u2134
  5874  007864                     u2135:
  5875  007864  90D8               	bcf	status,0,c
  5876  007866  3606               	rlcf	(??_pinMode+1)^0,f,c
  5877  007868                     u2134:
  5878  007868  2E05               	decfsz	??_pinMode^0,f,c
  5879  00786A  EF32  F03C         	goto	u2135
  5880  00786E  5006               	movf	(??_pinMode+1)^0,w,c
  5881  007870  0AFF               	xorlw	255
  5882  007872  1694               	andwf	148,f,c	;volatile
  5883  007874  EFB2  F03C         	goto	l406
  5884  007878                     l2874:
  5885  007878  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5886  00787A  EF4A  F03C         	goto	u2140
  5887  00787E  5002               	movf	(pinMode@pin+1)^0,w,c
  5888  007880  E107               	bnz	u2141
  5889  007882  0E20               	movlw	32
  5890  007884  5C01               	subwf	pinMode@pin^0,w,c
  5891  007886  B0D8               	btfsc	status,0,c
  5892  007888  EF48  F03C         	goto	u2141
  5893  00788C  EF4A  F03C         	goto	u2140
  5894  007890                     u2141:
  5895  007890  EF78  F03C         	goto	l2882
  5896  007894                     u2140:
  5897  007894                     
  5898                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  5899  007894  5003               	movf	pinMode@type^0,w,c
  5900  007896  1004               	iorwf	(pinMode@type+1)^0,w,c
  5901  007898  B4D8               	btfsc	status,2,c
  5902  00789A  EF51  F03C         	goto	u2151
  5903  00789E  EF53  F03C         	goto	u2150
  5904  0078A2                     u2151:
  5905  0078A2  EF65  F03C         	goto	l2880
  5906  0078A6                     u2150:
  5907  0078A6  C001  F005         	movff	pinMode@pin,??_pinMode
  5908  0078AA  0EE8               	movlw	-24
  5909  0078AC  2605               	addwf	??_pinMode^0,f,c
  5910  0078AE  0E01               	movlw	1
  5911  0078B0  6E06               	movwf	(??_pinMode+1)^0,c
  5912  0078B2  2A05               	incf	??_pinMode^0,f,c
  5913  0078B4  EF5E  F03C         	goto	u2164
  5914  0078B8                     u2165:
  5915  0078B8  90D8               	bcf	status,0,c
  5916  0078BA  3606               	rlcf	(??_pinMode+1)^0,f,c
  5917  0078BC                     u2164:
  5918  0078BC  2E05               	decfsz	??_pinMode^0,f,c
  5919  0078BE  EF5C  F03C         	goto	u2165
  5920  0078C2  5006               	movf	(??_pinMode+1)^0,w,c
  5921  0078C4  1295               	iorwf	149,f,c	;volatile
  5922  0078C6  EFB2  F03C         	goto	l406
  5923  0078CA                     l2880:
  5924  0078CA  C001  F005         	movff	pinMode@pin,??_pinMode
  5925  0078CE  0EE8               	movlw	-24
  5926  0078D0  2605               	addwf	??_pinMode^0,f,c
  5927  0078D2  0E01               	movlw	1
  5928  0078D4  6E06               	movwf	(??_pinMode+1)^0,c
  5929  0078D6  2A05               	incf	??_pinMode^0,f,c
  5930  0078D8  EF70  F03C         	goto	u2174
  5931  0078DC                     u2175:
  5932  0078DC  90D8               	bcf	status,0,c
  5933  0078DE  3606               	rlcf	(??_pinMode+1)^0,f,c
  5934  0078E0                     u2174:
  5935  0078E0  2E05               	decfsz	??_pinMode^0,f,c
  5936  0078E2  EF6E  F03C         	goto	u2175
  5937  0078E6  5006               	movf	(??_pinMode+1)^0,w,c
  5938  0078E8  0AFF               	xorlw	255
  5939  0078EA  1695               	andwf	149,f,c	;volatile
  5940  0078EC  EFB2  F03C         	goto	l406
  5941  0078F0                     l2882:
  5942  0078F0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5943  0078F2  EF86  F03C         	goto	u2180
  5944  0078F6  5002               	movf	(pinMode@pin+1)^0,w,c
  5945  0078F8  E107               	bnz	u2181
  5946  0078FA  0E28               	movlw	40
  5947  0078FC  5C01               	subwf	pinMode@pin^0,w,c
  5948  0078FE  B0D8               	btfsc	status,0,c
  5949  007900  EF84  F03C         	goto	u2181
  5950  007904  EF86  F03C         	goto	u2180
  5951  007908                     u2181:
  5952  007908  EFB2  F03C         	goto	l406
  5953  00790C                     u2180:
  5954  00790C                     
  5955                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  5956  00790C  5003               	movf	pinMode@type^0,w,c
  5957  00790E  1004               	iorwf	(pinMode@type+1)^0,w,c
  5958  007910  B4D8               	btfsc	status,2,c
  5959  007912  EF8D  F03C         	goto	u2191
  5960  007916  EF8F  F03C         	goto	u2190
  5961  00791A                     u2191:
  5962  00791A  EFA1  F03C         	goto	l2888
  5963  00791E                     u2190:
  5964  00791E  C001  F005         	movff	pinMode@pin,??_pinMode
  5965  007922  0EE0               	movlw	-32
  5966  007924  2605               	addwf	??_pinMode^0,f,c
  5967  007926  0E01               	movlw	1
  5968  007928  6E06               	movwf	(??_pinMode+1)^0,c
  5969  00792A  2A05               	incf	??_pinMode^0,f,c
  5970  00792C  EF9A  F03C         	goto	u2204
  5971  007930                     u2205:
  5972  007930  90D8               	bcf	status,0,c
  5973  007932  3606               	rlcf	(??_pinMode+1)^0,f,c
  5974  007934                     u2204:
  5975  007934  2E05               	decfsz	??_pinMode^0,f,c
  5976  007936  EF98  F03C         	goto	u2205
  5977  00793A  5006               	movf	(??_pinMode+1)^0,w,c
  5978  00793C  1296               	iorwf	150,f,c	;volatile
  5979  00793E  EFB2  F03C         	goto	l406
  5980  007942                     l2888:
  5981  007942  C001  F005         	movff	pinMode@pin,??_pinMode
  5982  007946  0EE0               	movlw	-32
  5983  007948  2605               	addwf	??_pinMode^0,f,c
  5984  00794A  0E01               	movlw	1
  5985  00794C  6E06               	movwf	(??_pinMode+1)^0,c
  5986  00794E  2A05               	incf	??_pinMode^0,f,c
  5987  007950  EFAC  F03C         	goto	u2214
  5988  007954                     u2215:
  5989  007954  90D8               	bcf	status,0,c
  5990  007956  3606               	rlcf	(??_pinMode+1)^0,f,c
  5991  007958                     u2214:
  5992  007958  2E05               	decfsz	??_pinMode^0,f,c
  5993  00795A  EFAA  F03C         	goto	u2215
  5994  00795E  5006               	movf	(??_pinMode+1)^0,w,c
  5995  007960  0AFF               	xorlw	255
  5996  007962  1696               	andwf	150,f,c	;volatile
  5997  007964                     l406:
  5998  007964  0012               	return		;funcret
  5999  007966                     __end_of_pinMode:
  6000                           	callstack 0
  6001                           
  6002 ;; *************** function _I2C_delay *****************
  6003 ;; Defined at:
  6004 ;;		line 22 in file "i2c.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;		None
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  i               2    0        int 
  6009 ;;  v               2    0        volatile int 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      void 
  6012 ;; Registers used:
  6013 ;;		None
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6019 ;;      Params:         0       0       0       0       0       0       0
  6020 ;;      Locals:         0       0       0       0       0       0       0
  6021 ;;      Temps:          0       0       0       0       0       0       0
  6022 ;;      Totals:         0       0       0       0       0       0       0
  6023 ;;Total ram usage:        0 bytes
  6024 ;; Hardware stack levels used: 1
  6025 ;; This function calls:
  6026 ;;		Nothing
  6027 ;; This function is called by:
  6028 ;;		_i2c_start
  6029 ;;		_i2c_stop
  6030 ;;		_i2c_write_bit
  6031 ;;		_i2c_read_bit
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           	psect	text36
  6036  005676                     __ptext36:
  6037                           	callstack 0
  6038  005676                     _I2C_delay:
  6039                           	callstack 25
  6040  005676  0012               	return		;funcret
  6041  005678                     __end_of_I2C_delay:
  6042                           	callstack 0
  6043                           
  6044 ;; *************** function _bcd2dec *****************
  6045 ;; Defined at:
  6046 ;;		line 12 in file "ds1307.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  value           2   32[COMRAM] int 
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;		None
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  2   32[COMRAM] int 
  6053 ;; Registers used:
  6054 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6060 ;;      Params:         2       0       0       0       0       0       0
  6061 ;;      Locals:         0       0       0       0       0       0       0
  6062 ;;      Temps:          2       0       0       0       0       0       0
  6063 ;;      Totals:         4       0       0       0       0       0       0
  6064 ;;Total ram usage:        4 bytes
  6065 ;; Hardware stack levels used: 1
  6066 ;; Hardware stack levels required when called: 1
  6067 ;; This function calls:
  6068 ;;		___awdiv
  6069 ;;		___wmul
  6070 ;; This function is called by:
  6071 ;;		_data
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text37
  6076  005B2E                     __ptext37:
  6077                           	callstack 0
  6078  005B2E                     _bcd2dec:
  6079                           	callstack 27
  6080  005B2E                     
  6081                           ;ds1307.c: 13:  return ((value / 16 * 10) + (value % 16));
  6082  005B2E  0E0F               	movlw	15
  6083  005B30  1421               	andwf	bcd2dec@value^0,w,c
  6084  005B32  6E23               	movwf	??_bcd2dec^0,c
  6085  005B34  0E00               	movlw	0
  6086  005B36  1422               	andwf	(bcd2dec@value+1)^0,w,c
  6087  005B38  6E24               	movwf	(??_bcd2dec+1)^0,c
  6088  005B3A  0E00               	movlw	0
  6089  005B3C  6E16               	movwf	(___awdiv@divisor+1)^0,c
  6090  005B3E  0E10               	movlw	16
  6091  005B40  6E15               	movwf	___awdiv@divisor^0,c
  6092  005B42  C021  F013         	movff	bcd2dec@value,___awdiv@dividend
  6093  005B46  C022  F014         	movff	bcd2dec@value+1,___awdiv@dividend+1
  6094  005B4A  EC39  F033         	call	___awdiv	;wreg free
  6095  005B4E  C013  F01B         	movff	?___awdiv,___wmul@multiplier
  6096  005B52  C014  F01C         	movff	?___awdiv+1,___wmul@multiplier+1
  6097  005B56  0E00               	movlw	0
  6098  005B58  6E1E               	movwf	(___wmul@multiplicand+1)^0,c
  6099  005B5A  0E0A               	movlw	10
  6100  005B5C  6E1D               	movwf	___wmul@multiplicand^0,c
  6101  005B5E  ECAE  F02B         	call	___wmul	;wreg free
  6102  005B62  5023               	movf	??_bcd2dec^0,w,c
  6103  005B64  241B               	addwf	?___wmul^0,w,c
  6104  005B66  6E21               	movwf	?_bcd2dec^0,c
  6105  005B68  5024               	movf	(??_bcd2dec+1)^0,w,c
  6106  005B6A  201C               	addwfc	(?___wmul+1)^0,w,c
  6107  005B6C  6E22               	movwf	(?_bcd2dec+1)^0,c
  6108  005B6E  0012               	return		;funcret
  6109  005B70                     __end_of_bcd2dec:
  6110                           	callstack 0
  6111                           
  6112 ;; *************** function ___lwmod *****************
  6113 ;; Defined at:
  6114 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  dividend        2    7[COMRAM] unsigned int 
  6117 ;;  divisor         2    9[COMRAM] unsigned int 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;  counter         1   11[COMRAM] unsigned char 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  2    7[COMRAM] unsigned int 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6129 ;;      Params:         4       0       0       0       0       0       0
  6130 ;;      Locals:         1       0       0       0       0       0       0
  6131 ;;      Temps:          0       0       0       0       0       0       0
  6132 ;;      Totals:         5       0       0       0       0       0       0
  6133 ;;Total ram usage:        5 bytes
  6134 ;; Hardware stack levels used: 1
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_data
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text38
  6143  006068                     __ptext38:
  6144                           	callstack 0
  6145  006068                     ___lwmod:
  6146                           	callstack 28
  6147  006068  500A               	movf	___lwmod@divisor^0,w,c
  6148  00606A  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  6149  00606C  B4D8               	btfsc	status,2,c
  6150  00606E  EF3B  F030         	goto	u2911
  6151  006072  EF3D  F030         	goto	u2910
  6152  006076                     u2911:
  6153  006076  EF61  F030         	goto	l1196
  6154  00607A                     u2910:
  6155  00607A  0E01               	movlw	1
  6156  00607C  6E0C               	movwf	___lwmod@counter^0,c
  6157  00607E  EF45  F030         	goto	l3384
  6158  006082                     l3382:
  6159  006082  90D8               	bcf	status,0,c
  6160  006084  360A               	rlcf	___lwmod@divisor^0,f,c
  6161  006086  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  6162  006088  2A0C               	incf	___lwmod@counter^0,f,c
  6163  00608A                     l3384:
  6164  00608A  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  6165  00608C  EF4A  F030         	goto	u2921
  6166  006090  EF4C  F030         	goto	u2920
  6167  006094                     u2921:
  6168  006094  EF41  F030         	goto	l3382
  6169  006098                     u2920:
  6170  006098                     l3386:
  6171  006098  500A               	movf	___lwmod@divisor^0,w,c
  6172  00609A  5C08               	subwf	___lwmod@dividend^0,w,c
  6173  00609C  500B               	movf	(___lwmod@divisor+1)^0,w,c
  6174  00609E  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  6175  0060A0  A0D8               	btfss	status,0,c
  6176  0060A2  EF55  F030         	goto	u2931
  6177  0060A6  EF57  F030         	goto	u2930
  6178  0060AA                     u2931:
  6179  0060AA  EF5B  F030         	goto	l3390
  6180  0060AE                     u2930:
  6181  0060AE  500A               	movf	___lwmod@divisor^0,w,c
  6182  0060B0  5E08               	subwf	___lwmod@dividend^0,f,c
  6183  0060B2  500B               	movf	(___lwmod@divisor+1)^0,w,c
  6184  0060B4  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  6185  0060B6                     l3390:
  6186  0060B6  90D8               	bcf	status,0,c
  6187  0060B8  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  6188  0060BA  320A               	rrcf	___lwmod@divisor^0,f,c
  6189  0060BC  2E0C               	decfsz	___lwmod@counter^0,f,c
  6190  0060BE  EF4C  F030         	goto	l3386
  6191  0060C2                     l1196:
  6192  0060C2  C008  F008         	movff	___lwmod@dividend,?___lwmod
  6193  0060C6  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  6194  0060CA  0012               	return		;funcret
  6195  0060CC                     __end_of___lwmod:
  6196                           	callstack 0
  6197                           
  6198 ;; *************** function _adcRead *****************
  6199 ;; Defined at:
  6200 ;;		line 38 in file "adc.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;  channel         2    0[COMRAM] unsigned int 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  ADvalor         2    2[COMRAM] unsigned int 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;                  2    0[COMRAM] int 
  6207 ;; Registers used:
  6208 ;;		wreg, status,2, status,0
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6214 ;;      Params:         2       0       0       0       0       0       0
  6215 ;;      Locals:         2       0       0       0       0       0       0
  6216 ;;      Temps:          0       0       0       0       0       0       0
  6217 ;;      Totals:         4       0       0       0       0       0       0
  6218 ;;Total ram usage:        4 bytes
  6219 ;; Hardware stack levels used: 1
  6220 ;; This function calls:
  6221 ;;		Nothing
  6222 ;; This function is called by:
  6223 ;;		_Telas
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text39
  6228  005CE2                     __ptext39:
  6229                           	callstack 0
  6230  005CE2                     _adcRead:
  6231                           	callstack 29
  6232  005CE2                     
  6233                           ;adc.c: 39:     unsigned int ADvalor;;adc.c: 40:     ADCON0 &= 0b11000011;
  6234  005CE2  0EC3               	movlw	195
  6235  005CE4  16C2               	andwf	194,f,c	;volatile
  6236                           
  6237                           ;adc.c: 41:     if (channel < 3) {
  6238  005CE6  5002               	movf	(adcRead@channel+1)^0,w,c
  6239  005CE8  E107               	bnz	u3061
  6240  005CEA  0E03               	movlw	3
  6241  005CEC  5C01               	subwf	adcRead@channel^0,w,c
  6242  005CEE  B0D8               	btfsc	status,0,c
  6243  005CF0  EF7C  F02E         	goto	u3061
  6244  005CF4  EF7E  F02E         	goto	u3060
  6245  005CF8                     u3061:
  6246  005CF8  EF82  F02E         	goto	l3618
  6247  005CFC                     u3060:
  6248  005CFC                     
  6249                           ;adc.c: 42:         ADCON0 |= channel << 2;
  6250  005CFC  4401               	rlncf	adcRead@channel^0,w,c	;volatile
  6251  005CFE  46E8               	rlncf	wreg,f,c
  6252  005D00  0BFC               	andlw	252
  6253  005D02  12C2               	iorwf	194,f,c	;volatile
  6254  005D04                     l3618:
  6255                           
  6256                           ;adc.c: 45:     ADCON0 |= 0b00000010;
  6257  005D04  82C2               	bsf	194,1,c	;volatile
  6258  005D06                     l230:
  6259  005D06  B2C2               	btfsc	194,1,c	;volatile
  6260  005D08  EF88  F02E         	goto	u3071
  6261  005D0C  EF8A  F02E         	goto	u3070
  6262  005D10                     u3071:
  6263  005D10  EF83  F02E         	goto	l230
  6264  005D14                     u3070:
  6265  005D14                     
  6266                           ;adc.c: 49:     ADvalor = ADRESH;
  6267  005D14  CFC4 F003          	movff	4036,adcRead@ADvalor	;volatile
  6268  005D18  6A04               	clrf	(adcRead@ADvalor+1)^0,c
  6269  005D1A                     
  6270                           ;adc.c: 50:     ADvalor <<= 8;
  6271  005D1A  5003               	movf	adcRead@ADvalor^0,w,c
  6272  005D1C  6E04               	movwf	(adcRead@ADvalor+1)^0,c
  6273  005D1E  6A03               	clrf	adcRead@ADvalor^0,c
  6274  005D20                     
  6275                           ;adc.c: 51:     ADvalor += ADRESL;
  6276  005D20  50C3               	movf	195,w,c	;volatile
  6277  005D22  2603               	addwf	adcRead@ADvalor^0,f,c
  6278  005D24  0E00               	movlw	0
  6279  005D26  2204               	addwfc	(adcRead@ADvalor+1)^0,f,c
  6280  005D28                     
  6281                           ;adc.c: 52:     return ADvalor;
  6282  005D28  C003  F001         	movff	adcRead@ADvalor,?_adcRead
  6283  005D2C  C004  F002         	movff	adcRead@ADvalor+1,?_adcRead+1
  6284  005D30  0012               	return		;funcret
  6285  005D32                     __end_of_adcRead:
  6286                           	callstack 0
  6287                           
  6288 ;; *************** function _Cronometro *****************
  6289 ;; Defined at:
  6290 ;;		line 222 in file "main.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;		None
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;  anterior        1   42[COMRAM] unsigned char 
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      void 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6304 ;;      Params:         0       0       0       0       0       0       0
  6305 ;;      Locals:         1       0       0       0       0       0       0
  6306 ;;      Temps:          0       0       0       0       0       0       0
  6307 ;;      Totals:         1       0       0       0       0       0       0
  6308 ;;Total ram usage:        1 bytes
  6309 ;; Hardware stack levels used: 1
  6310 ;; Hardware stack levels required when called: 6
  6311 ;; This function calls:
  6312 ;;		___awdiv
  6313 ;;		___awmod
  6314 ;;		_lcdChar
  6315 ;;		_lcdPosition
  6316 ;;		_lcdString
  6317 ;; This function is called by:
  6318 ;;		_Telas
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text40
  6323  006924                     __ptext40:
  6324                           	callstack 0
  6325  006924                     _Cronometro:
  6326                           	callstack 23
  6327  006924                     
  6328                           ;main.c: 223:     unsigned char anterior;;main.c: 224:     if(tempos!=anterior){
  6329  006924  502B               	movf	Cronometro@anterior^0,w,c
  6330  006926  1855               	xorwf	_tempos^0,w,c
  6331  006928  B4D8               	btfsc	status,2,c
  6332  00692A  EF99  F034         	goto	u3051
  6333  00692E  EF9B  F034         	goto	u3050
  6334  006932                     u3051:
  6335  006932  EF18  F035         	goto	l162
  6336  006936                     u3050:
  6337  006936                     
  6338                           ;main.c: 225:         lcdPosition(0,0);
  6339  006936  0E00               	movlw	0
  6340  006938  6E10               	movwf	(lcdPosition@line+1)^0,c
  6341  00693A  0E00               	movlw	0
  6342  00693C  6E0F               	movwf	lcdPosition@line^0,c
  6343  00693E  0E00               	movlw	0
  6344  006940  6E12               	movwf	(lcdPosition@col+1)^0,c
  6345  006942  0E00               	movlw	0
  6346  006944  6E11               	movwf	lcdPosition@col^0,c
  6347  006946  EC1B  F02D         	call	_lcdPosition	;wreg free
  6348  00694A                     
  6349                           ;main.c: 226:         lcdString("   Cronometro   ");
  6350  00694A  0E94               	movlw	low STR_24
  6351  00694C  6E0F               	movwf	lcdString@msg^0,c
  6352  00694E  0E7E               	movlw	high STR_24
  6353  006950  6E10               	movwf	(lcdString@msg+1)^0,c
  6354  006952  ECC3  F02E         	call	_lcdString	;wreg free
  6355  006956                     
  6356                           ;main.c: 227:         lcdPosition(1,0);
  6357  006956  0E00               	movlw	0
  6358  006958  6E10               	movwf	(lcdPosition@line+1)^0,c
  6359  00695A  0E01               	movlw	1
  6360  00695C  6E0F               	movwf	lcdPosition@line^0,c
  6361  00695E  0E00               	movlw	0
  6362  006960  6E12               	movwf	(lcdPosition@col+1)^0,c
  6363  006962  0E00               	movlw	0
  6364  006964  6E11               	movwf	lcdPosition@col^0,c
  6365  006966  EC1B  F02D         	call	_lcdPosition	;wreg free
  6366                           
  6367                           ;main.c: 228:         lcdString("      ");
  6368  00696A  0EF4               	movlw	low STR_25
  6369  00696C  6E0F               	movwf	lcdString@msg^0,c
  6370  00696E  0E7F               	movlw	high STR_25
  6371  006970  6E10               	movwf	(lcdString@msg+1)^0,c
  6372  006972  ECC3  F02E         	call	_lcdString	;wreg free
  6373  006976                     
  6374                           ;main.c: 229:         lcdChar(((tempos/600)%6)+48);
  6375  006976  0E02               	movlw	2
  6376  006978  6E16               	movwf	(___awdiv@divisor+1)^0,c
  6377  00697A  0E58               	movlw	88
  6378  00697C  6E15               	movwf	___awdiv@divisor^0,c
  6379  00697E  C055  F013         	movff	_tempos,___awdiv@dividend
  6380  006982  6A14               	clrf	(___awdiv@dividend+1)^0,c
  6381  006984  EC39  F033         	call	___awdiv	;wreg free
  6382  006988  C013  F025         	movff	?___awdiv,___awmod@dividend
  6383  00698C  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  6384  006990  0E00               	movlw	0
  6385  006992  6E28               	movwf	(___awmod@divisor+1)^0,c
  6386  006994  0E06               	movlw	6
  6387  006996  6E27               	movwf	___awmod@divisor^0,c
  6388  006998  ECD6  F031         	call	___awmod	;wreg free
  6389  00699C  5025               	movf	?___awmod^0,w,c
  6390  00699E  0F30               	addlw	48
  6391  0069A0  EC8E  F02B         	call	_lcdChar
  6392  0069A4                     
  6393                           ;main.c: 230:         lcdChar(((tempos/60)%10)+48);
  6394  0069A4  0E00               	movlw	0
  6395  0069A6  6E16               	movwf	(___awdiv@divisor+1)^0,c
  6396  0069A8  0E3C               	movlw	60
  6397  0069AA  6E15               	movwf	___awdiv@divisor^0,c
  6398  0069AC  C055  F013         	movff	_tempos,___awdiv@dividend
  6399  0069B0  6A14               	clrf	(___awdiv@dividend+1)^0,c
  6400  0069B2  EC39  F033         	call	___awdiv	;wreg free
  6401  0069B6  C013  F025         	movff	?___awdiv,___awmod@dividend
  6402  0069BA  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  6403  0069BE  0E00               	movlw	0
  6404  0069C0  6E28               	movwf	(___awmod@divisor+1)^0,c
  6405  0069C2  0E0A               	movlw	10
  6406  0069C4  6E27               	movwf	___awmod@divisor^0,c
  6407  0069C6  ECD6  F031         	call	___awmod	;wreg free
  6408  0069CA  5025               	movf	?___awmod^0,w,c
  6409  0069CC  0F30               	addlw	48
  6410  0069CE  EC8E  F02B         	call	_lcdChar
  6411  0069D2                     
  6412                           ;main.c: 231:         lcdChar(':');
  6413  0069D2  0E3A               	movlw	58
  6414  0069D4  EC8E  F02B         	call	_lcdChar
  6415  0069D8                     
  6416                           ;main.c: 232:         lcdChar(((tempos/10)%6)+48);
  6417  0069D8  0E00               	movlw	0
  6418  0069DA  6E16               	movwf	(___awdiv@divisor+1)^0,c
  6419  0069DC  0E0A               	movlw	10
  6420  0069DE  6E15               	movwf	___awdiv@divisor^0,c
  6421  0069E0  C055  F013         	movff	_tempos,___awdiv@dividend
  6422  0069E4  6A14               	clrf	(___awdiv@dividend+1)^0,c
  6423  0069E6  EC39  F033         	call	___awdiv	;wreg free
  6424  0069EA  C013  F025         	movff	?___awdiv,___awmod@dividend
  6425  0069EE  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  6426  0069F2  0E00               	movlw	0
  6427  0069F4  6E28               	movwf	(___awmod@divisor+1)^0,c
  6428  0069F6  0E06               	movlw	6
  6429  0069F8  6E27               	movwf	___awmod@divisor^0,c
  6430  0069FA  ECD6  F031         	call	___awmod	;wreg free
  6431  0069FE  5025               	movf	?___awmod^0,w,c
  6432  006A00  0F30               	addlw	48
  6433  006A02  EC8E  F02B         	call	_lcdChar
  6434  006A06                     
  6435                           ;main.c: 233:         lcdChar(((tempos)%10)+48);
  6436  006A06  C055  F025         	movff	_tempos,___awmod@dividend
  6437  006A0A  6A26               	clrf	(___awmod@dividend+1)^0,c
  6438  006A0C  0E00               	movlw	0
  6439  006A0E  6E28               	movwf	(___awmod@divisor+1)^0,c
  6440  006A10  0E0A               	movlw	10
  6441  006A12  6E27               	movwf	___awmod@divisor^0,c
  6442  006A14  ECD6  F031         	call	___awmod	;wreg free
  6443  006A18  5025               	movf	?___awmod^0,w,c
  6444  006A1A  0F30               	addlw	48
  6445  006A1C  EC8E  F02B         	call	_lcdChar
  6446  006A20                     
  6447                           ;main.c: 234:         lcdString("     ");
  6448  006A20  0EF5               	movlw	low (STR_25+1)
  6449  006A22  6E0F               	movwf	lcdString@msg^0,c
  6450  006A24  0E7F               	movlw	high (STR_25+1)
  6451  006A26  6E10               	movwf	(lcdString@msg+1)^0,c
  6452  006A28  ECC3  F02E         	call	_lcdString	;wreg free
  6453  006A2C                     
  6454                           ;main.c: 236:         change=1;
  6455  006A2C  0E01               	movlw	1
  6456  006A2E  6E7B               	movwf	_change^0,c
  6457  006A30                     l162:
  6458  006A30  0012               	return		;funcret
  6459  006A32                     __end_of_Cronometro:
  6460                           	callstack 0
  6461                           
  6462 ;; *************** function ___awdiv *****************
  6463 ;; Defined at:
  6464 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  dividend        2   18[COMRAM] int 
  6467 ;;  divisor         2   20[COMRAM] int 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  quotient        2   24[COMRAM] int 
  6470 ;;  sign            1   23[COMRAM] unsigned char 
  6471 ;;  counter         1   22[COMRAM] unsigned char 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  2   18[COMRAM] int 
  6474 ;; Registers used:
  6475 ;;		wreg, status,2, status,0
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6481 ;;      Params:         4       0       0       0       0       0       0
  6482 ;;      Locals:         4       0       0       0       0       0       0
  6483 ;;      Temps:          0       0       0       0       0       0       0
  6484 ;;      Totals:         8       0       0       0       0       0       0
  6485 ;;Total ram usage:        8 bytes
  6486 ;; Hardware stack levels used: 1
  6487 ;; This function calls:
  6488 ;;		Nothing
  6489 ;; This function is called by:
  6490 ;;		_data
  6491 ;;		_Cronometro
  6492 ;;		_Telas
  6493 ;;		_bcd2dec
  6494 ;;		_dec2bcd
  6495 ;;		_lcdNumber
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           	psect	text41
  6500  006672                     __ptext41:
  6501                           	callstack 0
  6502  006672                     ___awdiv:
  6503                           	callstack 27
  6504  006672  0E00               	movlw	0
  6505  006674  6E18               	movwf	___awdiv@sign^0,c
  6506  006676  BE16               	btfsc	(___awdiv@divisor+1)^0,7,c
  6507  006678  EF42  F033         	goto	u2630
  6508  00667C  EF40  F033         	goto	u2631
  6509  006680                     u2631:
  6510  006680  EF48  F033         	goto	l3168
  6511  006684                     u2630:
  6512  006684  6C15               	negf	___awdiv@divisor^0,c
  6513  006686  1E16               	comf	(___awdiv@divisor+1)^0,f,c
  6514  006688  B0D8               	btfsc	status,0,c
  6515  00668A  2A16               	incf	(___awdiv@divisor+1)^0,f,c
  6516  00668C  0E01               	movlw	1
  6517  00668E  6E18               	movwf	___awdiv@sign^0,c
  6518  006690                     l3168:
  6519  006690  BE14               	btfsc	(___awdiv@dividend+1)^0,7,c
  6520  006692  EF4F  F033         	goto	u2640
  6521  006696  EF4D  F033         	goto	u2641
  6522  00669A                     u2641:
  6523  00669A  EF55  F033         	goto	l3174
  6524  00669E                     u2640:
  6525  00669E  6C13               	negf	___awdiv@dividend^0,c
  6526  0066A0  1E14               	comf	(___awdiv@dividend+1)^0,f,c
  6527  0066A2  B0D8               	btfsc	status,0,c
  6528  0066A4  2A14               	incf	(___awdiv@dividend+1)^0,f,c
  6529  0066A6  0E01               	movlw	1
  6530  0066A8  1A18               	xorwf	___awdiv@sign^0,f,c
  6531  0066AA                     l3174:
  6532  0066AA  0E00               	movlw	0
  6533  0066AC  6E1A               	movwf	(___awdiv@quotient+1)^0,c
  6534  0066AE  0E00               	movlw	0
  6535  0066B0  6E19               	movwf	___awdiv@quotient^0,c
  6536  0066B2  5015               	movf	___awdiv@divisor^0,w,c
  6537  0066B4  1016               	iorwf	(___awdiv@divisor+1)^0,w,c
  6538  0066B6  B4D8               	btfsc	status,2,c
  6539  0066B8  EF60  F033         	goto	u2651
  6540  0066BC  EF62  F033         	goto	u2650
  6541  0066C0                     u2651:
  6542  0066C0  EF8A  F033         	goto	l3196
  6543  0066C4                     u2650:
  6544  0066C4  0E01               	movlw	1
  6545  0066C6  6E17               	movwf	___awdiv@counter^0,c
  6546  0066C8  EF6A  F033         	goto	l3182
  6547  0066CC                     l3180:
  6548  0066CC  90D8               	bcf	status,0,c
  6549  0066CE  3615               	rlcf	___awdiv@divisor^0,f,c
  6550  0066D0  3616               	rlcf	(___awdiv@divisor+1)^0,f,c
  6551  0066D2  2A17               	incf	___awdiv@counter^0,f,c
  6552  0066D4                     l3182:
  6553  0066D4  AE16               	btfss	(___awdiv@divisor+1)^0,7,c
  6554  0066D6  EF6F  F033         	goto	u2661
  6555  0066DA  EF71  F033         	goto	u2660
  6556  0066DE                     u2661:
  6557  0066DE  EF66  F033         	goto	l3180
  6558  0066E2                     u2660:
  6559  0066E2                     l3184:
  6560  0066E2  90D8               	bcf	status,0,c
  6561  0066E4  3619               	rlcf	___awdiv@quotient^0,f,c
  6562  0066E6  361A               	rlcf	(___awdiv@quotient+1)^0,f,c
  6563  0066E8  5015               	movf	___awdiv@divisor^0,w,c
  6564  0066EA  5C13               	subwf	___awdiv@dividend^0,w,c
  6565  0066EC  5016               	movf	(___awdiv@divisor+1)^0,w,c
  6566  0066EE  5814               	subwfb	(___awdiv@dividend+1)^0,w,c
  6567  0066F0  A0D8               	btfss	status,0,c
  6568  0066F2  EF7D  F033         	goto	u2671
  6569  0066F6  EF7F  F033         	goto	u2670
  6570  0066FA                     u2671:
  6571  0066FA  EF84  F033         	goto	l3192
  6572  0066FE                     u2670:
  6573  0066FE  5015               	movf	___awdiv@divisor^0,w,c
  6574  006700  5E13               	subwf	___awdiv@dividend^0,f,c
  6575  006702  5016               	movf	(___awdiv@divisor+1)^0,w,c
  6576  006704  5A14               	subwfb	(___awdiv@dividend+1)^0,f,c
  6577  006706  8019               	bsf	___awdiv@quotient^0,0,c
  6578  006708                     l3192:
  6579  006708  90D8               	bcf	status,0,c
  6580  00670A  3216               	rrcf	(___awdiv@divisor+1)^0,f,c
  6581  00670C  3215               	rrcf	___awdiv@divisor^0,f,c
  6582  00670E  2E17               	decfsz	___awdiv@counter^0,f,c
  6583  006710  EF71  F033         	goto	l3184
  6584  006714                     l3196:
  6585  006714  5018               	movf	___awdiv@sign^0,w,c
  6586  006716  B4D8               	btfsc	status,2,c
  6587  006718  EF90  F033         	goto	u2681
  6588  00671C  EF92  F033         	goto	u2680
  6589  006720                     u2681:
  6590  006720  EF96  F033         	goto	l3200
  6591  006724                     u2680:
  6592  006724  6C19               	negf	___awdiv@quotient^0,c
  6593  006726  1E1A               	comf	(___awdiv@quotient+1)^0,f,c
  6594  006728  B0D8               	btfsc	status,0,c
  6595  00672A  2A1A               	incf	(___awdiv@quotient+1)^0,f,c
  6596  00672C                     l3200:
  6597  00672C  C019  F013         	movff	___awdiv@quotient,?___awdiv
  6598  006730  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  6599  006734  0012               	return		;funcret
  6600  006736                     __end_of___awdiv:
  6601                           	callstack 0
  6602                           
  6603 ;; *************** function _LogoUnifei *****************
  6604 ;; Defined at:
  6605 ;;		line 77 in file "main.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;		None
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;  logo           48   14[COMRAM] unsigned char [48]
  6610 ;;  i               1   62[COMRAM] unsigned char 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  1    wreg      void 
  6613 ;; Registers used:
  6614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6620 ;;      Params:         0       0       0       0       0       0       0
  6621 ;;      Locals:        49       0       0       0       0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0
  6623 ;;      Totals:        49       0       0       0       0       0       0
  6624 ;;Total ram usage:       49 bytes
  6625 ;; Hardware stack levels used: 1
  6626 ;; Hardware stack levels required when called: 5
  6627 ;; This function calls:
  6628 ;;		_lcdChar
  6629 ;;		_lcdCommand
  6630 ;; This function is called by:
  6631 ;;		_main
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text42
  6636  006B4C                     __ptext42:
  6637                           	callstack 0
  6638  006B4C                     _LogoUnifei:
  6639                           	callstack 25
  6640  006B4C                     
  6641                           ;main.c: 78:     unsigned char i;;main.c: 79:     char logo[48] = {
  6642  006B4C  EE20  F080         	lfsr	2,LogoUnifei@F2429
  6643  006B50  EE10  F00F         	lfsr	1,LogoUnifei@logo
  6644  006B54  0E2F               	movlw	47
  6645  006B56                     u3081:
  6646  006B56  CFDB FFE3          	movff	plusw2,plusw1
  6647  006B5A  06E8               	decf	wreg,f,c
  6648  006B5C  E2FC               	bc	u3081
  6649  006B5E                     
  6650                           ;main.c: 87:     lcdCommand(0x40);
  6651  006B5E  0E40               	movlw	64
  6652  006B60  EC7F  F02B         	call	_lcdCommand
  6653  006B64                     
  6654                           ;main.c: 88:     for(i=0;i<8;i++)
  6655  006B64  0E00               	movlw	0
  6656  006B66  6E3F               	movwf	LogoUnifei@i^0,c
  6657  006B68                     l3644:
  6658                           
  6659                           ;main.c: 89:         lcdChar(logo[i]);
  6660  006B68  0E0F               	movlw	low LogoUnifei@logo
  6661  006B6A  243F               	addwf	LogoUnifei@i^0,w,c
  6662  006B6C  6ED9               	movwf	fsr2l,c
  6663  006B6E  6ADA               	clrf	fsr2h,c
  6664  006B70  0E00               	movlw	high LogoUnifei@logo
  6665  006B72  22DA               	addwfc	fsr2h,f,c
  6666  006B74  50DF               	movf	indf2,w,c
  6667  006B76  EC8E  F02B         	call	_lcdChar
  6668  006B7A  2A3F               	incf	LogoUnifei@i^0,f,c
  6669  006B7C  0E07               	movlw	7
  6670  006B7E  643F               	cpfsgt	LogoUnifei@i^0,c
  6671  006B80  EFC4  F035         	goto	u3091
  6672  006B84  EFC6  F035         	goto	u3090
  6673  006B88                     u3091:
  6674  006B88  EFB4  F035         	goto	l3644
  6675  006B8C                     u3090:
  6676  006B8C                     
  6677                           ;main.c: 90:     lcdCommand(0x48);
  6678  006B8C  0E48               	movlw	72
  6679  006B8E  EC7F  F02B         	call	_lcdCommand
  6680  006B92                     
  6681                           ;main.c: 91:     for(i=8;i<16;i++)
  6682  006B92  0E08               	movlw	8
  6683  006B94  6E3F               	movwf	LogoUnifei@i^0,c
  6684  006B96                     l3658:
  6685                           
  6686                           ;main.c: 92:         lcdChar(logo[i]);
  6687  006B96  0E0F               	movlw	low LogoUnifei@logo
  6688  006B98  243F               	addwf	LogoUnifei@i^0,w,c
  6689  006B9A  6ED9               	movwf	fsr2l,c
  6690  006B9C  6ADA               	clrf	fsr2h,c
  6691  006B9E  0E00               	movlw	high LogoUnifei@logo
  6692  006BA0  22DA               	addwfc	fsr2h,f,c
  6693  006BA2  50DF               	movf	indf2,w,c
  6694  006BA4  EC8E  F02B         	call	_lcdChar
  6695  006BA8  2A3F               	incf	LogoUnifei@i^0,f,c
  6696  006BAA  0E0F               	movlw	15
  6697  006BAC  643F               	cpfsgt	LogoUnifei@i^0,c
  6698  006BAE  EFDB  F035         	goto	u3101
  6699  006BB2  EFDD  F035         	goto	u3100
  6700  006BB6                     u3101:
  6701  006BB6  EFCB  F035         	goto	l3658
  6702  006BBA                     u3100:
  6703  006BBA                     
  6704                           ;main.c: 93:     lcdCommand(0x50);
  6705  006BBA  0E50               	movlw	80
  6706  006BBC  EC7F  F02B         	call	_lcdCommand
  6707  006BC0                     
  6708                           ;main.c: 94:     for(i=16;i<24;i++)
  6709  006BC0  0E10               	movlw	16
  6710  006BC2  6E3F               	movwf	LogoUnifei@i^0,c
  6711  006BC4                     l3672:
  6712                           
  6713                           ;main.c: 95:         lcdChar(logo[i]);
  6714  006BC4  0E0F               	movlw	low LogoUnifei@logo
  6715  006BC6  243F               	addwf	LogoUnifei@i^0,w,c
  6716  006BC8  6ED9               	movwf	fsr2l,c
  6717  006BCA  6ADA               	clrf	fsr2h,c
  6718  006BCC  0E00               	movlw	high LogoUnifei@logo
  6719  006BCE  22DA               	addwfc	fsr2h,f,c
  6720  006BD0  50DF               	movf	indf2,w,c
  6721  006BD2  EC8E  F02B         	call	_lcdChar
  6722  006BD6  2A3F               	incf	LogoUnifei@i^0,f,c
  6723  006BD8  0E17               	movlw	23
  6724  006BDA  643F               	cpfsgt	LogoUnifei@i^0,c
  6725  006BDC  EFF2  F035         	goto	u3111
  6726  006BE0  EFF4  F035         	goto	u3110
  6727  006BE4                     u3111:
  6728  006BE4  EFE2  F035         	goto	l3672
  6729  006BE8                     u3110:
  6730  006BE8                     
  6731                           ;main.c: 96:     lcdCommand(0x58);
  6732  006BE8  0E58               	movlw	88
  6733  006BEA  EC7F  F02B         	call	_lcdCommand
  6734  006BEE                     
  6735                           ;main.c: 97:     for(i=24;i<32;i++)
  6736  006BEE  0E18               	movlw	24
  6737  006BF0  6E3F               	movwf	LogoUnifei@i^0,c
  6738  006BF2                     l3686:
  6739                           
  6740                           ;main.c: 98:         lcdChar(logo[i]);
  6741  006BF2  0E0F               	movlw	low LogoUnifei@logo
  6742  006BF4  243F               	addwf	LogoUnifei@i^0,w,c
  6743  006BF6  6ED9               	movwf	fsr2l,c
  6744  006BF8  6ADA               	clrf	fsr2h,c
  6745  006BFA  0E00               	movlw	high LogoUnifei@logo
  6746  006BFC  22DA               	addwfc	fsr2h,f,c
  6747  006BFE  50DF               	movf	indf2,w,c
  6748  006C00  EC8E  F02B         	call	_lcdChar
  6749  006C04  2A3F               	incf	LogoUnifei@i^0,f,c
  6750  006C06  0E1F               	movlw	31
  6751  006C08  643F               	cpfsgt	LogoUnifei@i^0,c
  6752  006C0A  EF09  F036         	goto	u3121
  6753  006C0E  EF0B  F036         	goto	u3120
  6754  006C12                     u3121:
  6755  006C12  EFF9  F035         	goto	l3686
  6756  006C16                     u3120:
  6757  006C16                     
  6758                           ;main.c: 99:     lcdCommand(0x70);
  6759  006C16  0E70               	movlw	112
  6760  006C18  EC7F  F02B         	call	_lcdCommand
  6761  006C1C                     
  6762                           ;main.c: 100:     for(i=32;i<40;i++)
  6763  006C1C  0E20               	movlw	32
  6764  006C1E  6E3F               	movwf	LogoUnifei@i^0,c
  6765  006C20                     l3700:
  6766                           
  6767                           ;main.c: 101:         lcdChar(logo[i]);
  6768  006C20  0E0F               	movlw	low LogoUnifei@logo
  6769  006C22  243F               	addwf	LogoUnifei@i^0,w,c
  6770  006C24  6ED9               	movwf	fsr2l,c
  6771  006C26  6ADA               	clrf	fsr2h,c
  6772  006C28  0E00               	movlw	high LogoUnifei@logo
  6773  006C2A  22DA               	addwfc	fsr2h,f,c
  6774  006C2C  50DF               	movf	indf2,w,c
  6775  006C2E  EC8E  F02B         	call	_lcdChar
  6776  006C32  2A3F               	incf	LogoUnifei@i^0,f,c
  6777  006C34  0E27               	movlw	39
  6778  006C36  643F               	cpfsgt	LogoUnifei@i^0,c
  6779  006C38  EF20  F036         	goto	u3131
  6780  006C3C  EF22  F036         	goto	u3130
  6781  006C40                     u3131:
  6782  006C40  EF10  F036         	goto	l3700
  6783  006C44                     u3130:
  6784  006C44                     
  6785                           ;main.c: 102:     lcdCommand(0x78);
  6786  006C44  0E78               	movlw	120
  6787  006C46  EC7F  F02B         	call	_lcdCommand
  6788  006C4A                     
  6789                           ;main.c: 103:     for(i=40;i<48;i++)
  6790  006C4A  0E28               	movlw	40
  6791  006C4C  6E3F               	movwf	LogoUnifei@i^0,c
  6792  006C4E                     l3714:
  6793                           
  6794                           ;main.c: 104:         lcdChar(logo[i]);
  6795  006C4E  0E0F               	movlw	low LogoUnifei@logo
  6796  006C50  243F               	addwf	LogoUnifei@i^0,w,c
  6797  006C52  6ED9               	movwf	fsr2l,c
  6798  006C54  6ADA               	clrf	fsr2h,c
  6799  006C56  0E00               	movlw	high LogoUnifei@logo
  6800  006C58  22DA               	addwfc	fsr2h,f,c
  6801  006C5A  50DF               	movf	indf2,w,c
  6802  006C5C  EC8E  F02B         	call	_lcdChar
  6803  006C60  2A3F               	incf	LogoUnifei@i^0,f,c
  6804  006C62  0E2F               	movlw	47
  6805  006C64  643F               	cpfsgt	LogoUnifei@i^0,c
  6806  006C66  EF37  F036         	goto	u3141
  6807  006C6A  EF39  F036         	goto	u3140
  6808  006C6E                     u3141:
  6809  006C6E  EF27  F036         	goto	l3714
  6810  006C72                     u3140:
  6811  006C72  0012               	return		;funcret
  6812  006C74                     __end_of_LogoUnifei:
  6813                           	callstack 0
  6814                           
  6815 ;; *************** function _Finalizando *****************
  6816 ;; Defined at:
  6817 ;;		line 323 in file "main.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;		None
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;		None
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  1    wreg      void 
  6824 ;; Registers used:
  6825 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6831 ;;      Params:         0       0       0       0       0       0       0
  6832 ;;      Locals:         0       0       0       0       0       0       0
  6833 ;;      Temps:          0       0       0       0       0       0       0
  6834 ;;      Totals:         0       0       0       0       0       0       0
  6835 ;;Total ram usage:        0 bytes
  6836 ;; Hardware stack levels used: 1
  6837 ;; Hardware stack levels required when called: 7
  6838 ;; This function calls:
  6839 ;;		_Limpa
  6840 ;;		_atraso_ms
  6841 ;;		_buzzer
  6842 ;;		_lcdCommand
  6843 ;;		_lcdPosition
  6844 ;;		_lcdString
  6845 ;; This function is called by:
  6846 ;;		_main
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           
  6850                           	psect	text43
  6851  006004                     __ptext43:
  6852                           	callstack 0
  6853  006004                     _Finalizando:
  6854                           	callstack 23
  6855  006004                     
  6856                           ;main.c: 324:     buzzer(1000);
  6857  006004  0E03               	movlw	3
  6858  006006  6E27               	movwf	(buzzer@time+1)^0,c
  6859  006008  0EE8               	movlw	232
  6860  00600A  6E26               	movwf	buzzer@time^0,c
  6861  00600C  EC65  F02B         	call	_buzzer	;wreg free
  6862  006010                     
  6863                           ;main.c: 325:     Limpa();
  6864  006010  ECC8  F02C         	call	_Limpa	;wreg free
  6865  006014                     
  6866                           ;main.c: 326:     lcdPosition(0,0);
  6867  006014  0E00               	movlw	0
  6868  006016  6E10               	movwf	(lcdPosition@line+1)^0,c
  6869  006018  0E00               	movlw	0
  6870  00601A  6E0F               	movwf	lcdPosition@line^0,c
  6871  00601C  0E00               	movlw	0
  6872  00601E  6E12               	movwf	(lcdPosition@col+1)^0,c
  6873  006020  0E00               	movlw	0
  6874  006022  6E11               	movwf	lcdPosition@col^0,c
  6875  006024  EC1B  F02D         	call	_lcdPosition	;wreg free
  6876  006028                     
  6877                           ;main.c: 327:     lcdString("Algo deu errado!");
  6878  006028  0EB6               	movlw	low STR_37
  6879  00602A  6E0F               	movwf	lcdString@msg^0,c
  6880  00602C  0E7E               	movlw	high STR_37
  6881  00602E  6E10               	movwf	(lcdString@msg+1)^0,c
  6882  006030  ECC3  F02E         	call	_lcdString	;wreg free
  6883  006034                     
  6884                           ;main.c: 328:     lcdPosition(1,0);
  6885  006034  0E00               	movlw	0
  6886  006036  6E10               	movwf	(lcdPosition@line+1)^0,c
  6887  006038  0E01               	movlw	1
  6888  00603A  6E0F               	movwf	lcdPosition@line^0,c
  6889  00603C  0E00               	movlw	0
  6890  00603E  6E12               	movwf	(lcdPosition@col+1)^0,c
  6891  006040  0E00               	movlw	0
  6892  006042  6E11               	movwf	lcdPosition@col^0,c
  6893  006044  EC1B  F02D         	call	_lcdPosition	;wreg free
  6894  006048                     
  6895                           ;main.c: 329:     lcdString("Desligando...");
  6896  006048  0E8B               	movlw	low STR_38
  6897  00604A  6E0F               	movwf	lcdString@msg^0,c
  6898  00604C  0E7F               	movlw	high STR_38
  6899  00604E  6E10               	movwf	(lcdString@msg+1)^0,c
  6900  006050  ECC3  F02E         	call	_lcdString	;wreg free
  6901  006054                     
  6902                           ;main.c: 330:     atraso_ms(5000);
  6903  006054  0E13               	movlw	19
  6904  006056  6E02               	movwf	(atraso_ms@num+1)^0,c
  6905  006058  0E88               	movlw	136
  6906  00605A  6E01               	movwf	atraso_ms@num^0,c
  6907  00605C  ECD0  F02F         	call	_atraso_ms	;wreg free
  6908  006060                     
  6909                           ;main.c: 331:     lcdCommand(0);
  6910  006060  0E00               	movlw	0
  6911  006062  EC7F  F02B         	call	_lcdCommand
  6912  006066  0012               	return		;funcret
  6913  006068                     __end_of_Finalizando:
  6914                           	callstack 0
  6915                           
  6916 ;; *************** function _buzzer *****************
  6917 ;; Defined at:
  6918 ;;		line 114 in file "main.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  time            2   37[COMRAM] unsigned int 
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;		None
  6923 ;; Return value:  Size  Location     Type
  6924 ;;                  1    wreg      void 
  6925 ;; Registers used:
  6926 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6927 ;; Tracked objects:
  6928 ;;		On entry : 0/0
  6929 ;;		On exit  : 0/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6932 ;;      Params:         2       0       0       0       0       0       0
  6933 ;;      Locals:         0       0       0       0       0       0       0
  6934 ;;      Temps:          0       0       0       0       0       0       0
  6935 ;;      Totals:         2       0       0       0       0       0       0
  6936 ;;Total ram usage:        2 bytes
  6937 ;; Hardware stack levels used: 1
  6938 ;; Hardware stack levels required when called: 2
  6939 ;; This function calls:
  6940 ;;		_atraso_ms
  6941 ;;		_pwmSet
  6942 ;; This function is called by:
  6943 ;;		_Finalizando
  6944 ;;		_main
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           	psect	text44
  6949  0056CA                     __ptext44:
  6950                           	callstack 0
  6951  0056CA                     _buzzer:
  6952                           	callstack 28
  6953  0056CA                     
  6954                           ;main.c: 115:     pwmSet(100);
  6955  0056CA  0E64               	movlw	100
  6956  0056CC  EC9A  F030         	call	_pwmSet
  6957  0056D0                     
  6958                           ;main.c: 116:     atraso_ms(time);
  6959  0056D0  C026  F001         	movff	buzzer@time,atraso_ms@num
  6960  0056D4  C027  F002         	movff	buzzer@time+1,atraso_ms@num+1
  6961  0056D8  ECD0  F02F         	call	_atraso_ms	;wreg free
  6962  0056DC                     
  6963                           ;main.c: 117:     pwmSet(0);
  6964  0056DC  0E00               	movlw	0
  6965  0056DE  EC9A  F030         	call	_pwmSet
  6966  0056E2  0012               	return		;funcret
  6967  0056E4                     __end_of_buzzer:
  6968                           	callstack 0
  6969                           
  6970 ;; *************** function _pwmSet *****************
  6971 ;; Defined at:
  6972 ;;		line 24 in file "pwm.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  porcento        1    wreg     unsigned char 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  porcento        1   34[COMRAM] unsigned char 
  6977 ;;  val             2   35[COMRAM] unsigned int 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1    wreg      void 
  6980 ;; Registers used:
  6981 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6987 ;;      Params:         0       0       0       0       0       0       0
  6988 ;;      Locals:         3       0       0       0       0       0       0
  6989 ;;      Temps:          2       0       0       0       0       0       0
  6990 ;;      Totals:         5       0       0       0       0       0       0
  6991 ;;Total ram usage:        5 bytes
  6992 ;; Hardware stack levels used: 1
  6993 ;; Hardware stack levels required when called: 1
  6994 ;; This function calls:
  6995 ;;		___lwdiv
  6996 ;;		___wmul
  6997 ;; This function is called by:
  6998 ;;		_buzzer
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           	psect	text45
  7003  006134                     __ptext45:
  7004                           	callstack 0
  7005  006134                     _pwmSet:
  7006                           	callstack 28
  7007                           
  7008                           ;incstack = 0
  7009                           ;pwmSet@porcento stored from wreg
  7010  006134  6E23               	movwf	pwmSet@porcento^0,c
  7011  006136                     
  7012                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  7013  006136  0E01               	movlw	1
  7014  006138  24CB               	addwf	203,w,c	;volatile
  7015  00613A  6E1B               	movwf	___wmul@multiplier^0,c
  7016  00613C  6A1C               	clrf	(___wmul@multiplier+1)^0,c
  7017  00613E  0E00               	movlw	0
  7018  006140  221C               	addwfc	(___wmul@multiplier+1)^0,f,c
  7019  006142  C023  F01D         	movff	pwmSet@porcento,___wmul@multiplicand
  7020  006146  6A1E               	clrf	(___wmul@multiplicand+1)^0,c
  7021  006148  ECAE  F02B         	call	___wmul	;wreg free
  7022  00614C  C01B  F024         	movff	?___wmul,pwmSet@val
  7023  006150  C01C  F025         	movff	?___wmul+1,pwmSet@val+1
  7024  006154                     
  7025                           ;pwm.c: 33:     val = val / 25;
  7026  006154  C024  F001         	movff	pwmSet@val,___lwdiv@dividend
  7027  006158  C025  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  7028  00615C  0E00               	movlw	0
  7029  00615E  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  7030  006160  0E19               	movlw	25
  7031  006162  6E03               	movwf	___lwdiv@divisor^0,c
  7032  006164  EC0A  F031         	call	___lwdiv	;wreg free
  7033  006168  C001  F024         	movff	?___lwdiv,pwmSet@val
  7034  00616C  C002  F025         	movff	?___lwdiv+1,pwmSet@val+1
  7035  006170                     
  7036                           ;pwm.c: 35:  val &= 0x03ff;
  7037  006170  0EFF               	movlw	255
  7038  006172  1624               	andwf	pwmSet@val^0,f,c
  7039  006174  0E03               	movlw	3
  7040  006176  1625               	andwf	(pwmSet@val+1)^0,f,c
  7041  006178                     
  7042                           ;pwm.c: 37:  CCPR2L = val >> 2;
  7043  006178  C024  F021         	movff	pwmSet@val,??_pwmSet
  7044  00617C  C025  F022         	movff	pwmSet@val+1,??_pwmSet+1
  7045  006180  90D8               	bcf	status,0,c
  7046  006182  3222               	rrcf	(??_pwmSet+1)^0,f,c
  7047  006184  3221               	rrcf	??_pwmSet^0,f,c
  7048  006186  90D8               	bcf	status,0,c
  7049  006188  3222               	rrcf	(??_pwmSet+1)^0,f,c
  7050  00618A  3221               	rrcf	??_pwmSet^0,f,c
  7051  00618C  5021               	movf	??_pwmSet^0,w,c
  7052  00618E  6EBB               	movwf	187,c	;volatile
  7053  006190                     
  7054                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  7055  006190  C024  F021         	movff	pwmSet@val,??_pwmSet	;volatile
  7056  006194  0E03               	movlw	3
  7057  006196  1621               	andwf	??_pwmSet^0,f,c
  7058  006198  3821               	swapf	??_pwmSet^0,w,c
  7059  00619A  0BF0               	andlw	240
  7060  00619C  12BA               	iorwf	186,f,c	;volatile
  7061  00619E  0012               	return		;funcret
  7062  0061A0                     __end_of_pwmSet:
  7063                           	callstack 0
  7064                           
  7065 ;; *************** function ___wmul *****************
  7066 ;; Defined at:
  7067 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  multiplier      2   26[COMRAM] unsigned int 
  7070 ;;  multiplicand    2   28[COMRAM] unsigned int 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  product         2   30[COMRAM] unsigned int 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  2   26[COMRAM] unsigned int 
  7075 ;; Registers used:
  7076 ;;		wreg, status,2, status,0, prodl, prodh
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7082 ;;      Params:         4       0       0       0       0       0       0
  7083 ;;      Locals:         2       0       0       0       0       0       0
  7084 ;;      Temps:          0       0       0       0       0       0       0
  7085 ;;      Totals:         6       0       0       0       0       0       0
  7086 ;;Total ram usage:        6 bytes
  7087 ;; Hardware stack levels used: 1
  7088 ;; This function calls:
  7089 ;;		Nothing
  7090 ;; This function is called by:
  7091 ;;		_data
  7092 ;;		_bcd2dec
  7093 ;;		_pwmSet
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text46
  7098  00575C                     __ptext46:
  7099                           	callstack 0
  7100  00575C                     ___wmul:
  7101                           	callstack 28
  7102  00575C  501B               	movf	___wmul@multiplier^0,w,c
  7103  00575E  021D               	mulwf	___wmul@multiplicand^0,c
  7104  005760  CFF3 F01F          	movff	prodl,___wmul@product
  7105  005764  CFF4 F020          	movff	prodh,___wmul@product+1
  7106  005768  501B               	movf	___wmul@multiplier^0,w,c
  7107  00576A  021E               	mulwf	(___wmul@multiplicand+1)^0,c
  7108  00576C  50F3               	movf	243,w,c
  7109  00576E  2620               	addwf	(___wmul@product+1)^0,f,c
  7110  005770  501C               	movf	(___wmul@multiplier+1)^0,w,c
  7111  005772  021D               	mulwf	___wmul@multiplicand^0,c
  7112  005774  50F3               	movf	243,w,c
  7113  005776  2620               	addwf	(___wmul@product+1)^0,f,c
  7114  005778  C01F  F01B         	movff	___wmul@product,?___wmul
  7115  00577C  C020  F01C         	movff	___wmul@product+1,?___wmul+1
  7116  005780  0012               	return		;funcret
  7117  005782                     __end_of___wmul:
  7118                           	callstack 0
  7119                           
  7120 ;; *************** function ___lwdiv *****************
  7121 ;; Defined at:
  7122 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  7123 ;; Parameters:    Size  Location     Type
  7124 ;;  dividend        2    0[COMRAM] unsigned int 
  7125 ;;  divisor         2    2[COMRAM] unsigned int 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  quotient        2    4[COMRAM] unsigned int 
  7128 ;;  counter         1    6[COMRAM] unsigned char 
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  2    0[COMRAM] unsigned int 
  7131 ;; Registers used:
  7132 ;;		wreg, status,2, status,0
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7138 ;;      Params:         4       0       0       0       0       0       0
  7139 ;;      Locals:         3       0       0       0       0       0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0
  7141 ;;      Totals:         7       0       0       0       0       0       0
  7142 ;;Total ram usage:        7 bytes
  7143 ;; Hardware stack levels used: 1
  7144 ;; This function calls:
  7145 ;;		Nothing
  7146 ;; This function is called by:
  7147 ;;		_data
  7148 ;;		_pwmSet
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           	psect	text47
  7153  006214                     __ptext47:
  7154                           	callstack 0
  7155  006214                     ___lwdiv:
  7156                           	callstack 28
  7157  006214  0E00               	movlw	0
  7158  006216  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  7159  006218  0E00               	movlw	0
  7160  00621A  6E05               	movwf	___lwdiv@quotient^0,c
  7161  00621C  5003               	movf	___lwdiv@divisor^0,w,c
  7162  00621E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7163  006220  B4D8               	btfsc	status,2,c
  7164  006222  EF15  F031         	goto	u2751
  7165  006226  EF17  F031         	goto	u2750
  7166  00622A                     u2751:
  7167  00622A  EF3F  F031         	goto	l1186
  7168  00622E                     u2750:
  7169  00622E  0E01               	movlw	1
  7170  006230  6E07               	movwf	___lwdiv@counter^0,c
  7171  006232  EF1F  F031         	goto	l3248
  7172  006236                     l3246:
  7173  006236  90D8               	bcf	status,0,c
  7174  006238  3603               	rlcf	___lwdiv@divisor^0,f,c
  7175  00623A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7176  00623C  2A07               	incf	___lwdiv@counter^0,f,c
  7177  00623E                     l3248:
  7178  00623E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  7179  006240  EF24  F031         	goto	u2761
  7180  006244  EF26  F031         	goto	u2760
  7181  006248                     u2761:
  7182  006248  EF1B  F031         	goto	l3246
  7183  00624C                     u2760:
  7184  00624C                     l3250:
  7185  00624C  90D8               	bcf	status,0,c
  7186  00624E  3605               	rlcf	___lwdiv@quotient^0,f,c
  7187  006250  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7188  006252  5003               	movf	___lwdiv@divisor^0,w,c
  7189  006254  5C01               	subwf	___lwdiv@dividend^0,w,c
  7190  006256  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7191  006258  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7192  00625A  A0D8               	btfss	status,0,c
  7193  00625C  EF32  F031         	goto	u2771
  7194  006260  EF34  F031         	goto	u2770
  7195  006264                     u2771:
  7196  006264  EF39  F031         	goto	l3258
  7197  006268                     u2770:
  7198  006268  5003               	movf	___lwdiv@divisor^0,w,c
  7199  00626A  5E01               	subwf	___lwdiv@dividend^0,f,c
  7200  00626C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  7201  00626E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7202  006270  8005               	bsf	___lwdiv@quotient^0,0,c
  7203  006272                     l3258:
  7204  006272  90D8               	bcf	status,0,c
  7205  006274  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7206  006276  3203               	rrcf	___lwdiv@divisor^0,f,c
  7207  006278  2E07               	decfsz	___lwdiv@counter^0,f,c
  7208  00627A  EF26  F031         	goto	l3250
  7209  00627E                     l1186:
  7210  00627E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  7211  006282  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7212  006286  0012               	return		;funcret
  7213  006288                     __end_of___lwdiv:
  7214                           	callstack 0
  7215                           
  7216 ;; *************** function _Bemvindo *****************
  7217 ;; Defined at:
  7218 ;;		line 286 in file "main.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;		None
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;  i               1    0        unsigned char 
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1    wreg      void 
  7225 ;; Registers used:
  7226 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7232 ;;      Params:         0       0       0       0       0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0
  7235 ;;      Totals:         0       0       0       0       0       0       0
  7236 ;;Total ram usage:        0 bytes
  7237 ;; Hardware stack levels used: 1
  7238 ;; Hardware stack levels required when called: 8
  7239 ;; This function calls:
  7240 ;;		_IMC
  7241 ;;		_LeInfo
  7242 ;;		_Limpa
  7243 ;;		_atraso_ms
  7244 ;;		_lcdPosition
  7245 ;;		_lcdString
  7246 ;;		_serial_tx_str
  7247 ;; This function is called by:
  7248 ;;		_main
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252                           	psect	text48
  7253  006F14                     __ptext48:
  7254                           	callstack 0
  7255  006F14                     _Bemvindo:
  7256                           	callstack 22
  7257  006F14                     
  7258                           ;main.c: 288:     lcdPosition(0,0);
  7259  006F14  0E00               	movlw	0
  7260  006F16  6E10               	movwf	(lcdPosition@line+1)^0,c
  7261  006F18  0E00               	movlw	0
  7262  006F1A  6E0F               	movwf	lcdPosition@line^0,c
  7263  006F1C  0E00               	movlw	0
  7264  006F1E  6E12               	movwf	(lcdPosition@col+1)^0,c
  7265  006F20  0E00               	movlw	0
  7266  006F22  6E11               	movwf	lcdPosition@col^0,c
  7267  006F24  EC1B  F02D         	call	_lcdPosition	;wreg free
  7268  006F28                     
  7269                           ;main.c: 289:     lcdString("Este eh o maior");
  7270  006F28  0E6C               	movlw	low STR_28
  7271  006F2A  6E0F               	movwf	lcdString@msg^0,c
  7272  006F2C  0E7F               	movlw	high STR_28
  7273  006F2E  6E10               	movwf	(lcdString@msg+1)^0,c
  7274  006F30  ECC3  F02E         	call	_lcdString	;wreg free
  7275  006F34                     
  7276                           ;main.c: 290:     lcdPosition(1,0);
  7277  006F34  0E00               	movlw	0
  7278  006F36  6E10               	movwf	(lcdPosition@line+1)^0,c
  7279  006F38  0E01               	movlw	1
  7280  006F3A  6E0F               	movwf	lcdPosition@line^0,c
  7281  006F3C  0E00               	movlw	0
  7282  006F3E  6E12               	movwf	(lcdPosition@col+1)^0,c
  7283  006F40  0E00               	movlw	0
  7284  006F42  6E11               	movwf	lcdPosition@col^0,c
  7285  006F44  EC1B  F02D         	call	_lcdPosition	;wreg free
  7286  006F48                     
  7287                           ;main.c: 291:     lcdString("Smartwhact visto");
  7288  006F48  0EFA               	movlw	low STR_29
  7289  006F4A  6E0F               	movwf	lcdString@msg^0,c
  7290  006F4C  0E7E               	movlw	high STR_29
  7291  006F4E  6E10               	movwf	(lcdString@msg+1)^0,c
  7292  006F50  ECC3  F02E         	call	_lcdString	;wreg free
  7293  006F54                     
  7294                           ;main.c: 292:     atraso_ms(3000);
  7295  006F54  0E0B               	movlw	11
  7296  006F56  6E02               	movwf	(atraso_ms@num+1)^0,c
  7297  006F58  0EB8               	movlw	184
  7298  006F5A  6E01               	movwf	atraso_ms@num^0,c
  7299  006F5C  ECD0  F02F         	call	_atraso_ms	;wreg free
  7300  006F60                     
  7301                           ;main.c: 293:     Limpa();
  7302  006F60  ECC8  F02C         	call	_Limpa	;wreg free
  7303  006F64                     
  7304                           ;main.c: 295:     lcdPosition(0,0);
  7305  006F64  0E00               	movlw	0
  7306  006F66  6E10               	movwf	(lcdPosition@line+1)^0,c
  7307  006F68  0E00               	movlw	0
  7308  006F6A  6E0F               	movwf	lcdPosition@line^0,c
  7309  006F6C  0E00               	movlw	0
  7310  006F6E  6E12               	movwf	(lcdPosition@col+1)^0,c
  7311  006F70  0E00               	movlw	0
  7312  006F72  6E11               	movwf	lcdPosition@col^0,c
  7313  006F74  EC1B  F02D         	call	_lcdPosition	;wreg free
  7314  006F78                     
  7315                           ;main.c: 296:     lcdString("Ele precisa ser");
  7316  006F78  0E5C               	movlw	low STR_30
  7317  006F7A  6E0F               	movwf	lcdString@msg^0,c
  7318  006F7C  0E7F               	movlw	high STR_30
  7319  006F7E  6E10               	movwf	(lcdString@msg+1)^0,c
  7320  006F80  ECC3  F02E         	call	_lcdString	;wreg free
  7321  006F84                     
  7322                           ;main.c: 297:     lcdPosition(1,0);
  7323  006F84  0E00               	movlw	0
  7324  006F86  6E10               	movwf	(lcdPosition@line+1)^0,c
  7325  006F88  0E01               	movlw	1
  7326  006F8A  6E0F               	movwf	lcdPosition@line^0,c
  7327  006F8C  0E00               	movlw	0
  7328  006F8E  6E12               	movwf	(lcdPosition@col+1)^0,c
  7329  006F90  0E00               	movlw	0
  7330  006F92  6E11               	movwf	lcdPosition@col^0,c
  7331  006F94  EC1B  F02D         	call	_lcdPosition	;wreg free
  7332  006F98                     
  7333                           ;main.c: 298:     lcdString(" Configurado...");
  7334  006F98  0E2C               	movlw	low STR_31
  7335  006F9A  6E0F               	movwf	lcdString@msg^0,c
  7336  006F9C  0E7F               	movlw	high STR_31
  7337  006F9E  6E10               	movwf	(lcdString@msg+1)^0,c
  7338  006FA0  ECC3  F02E         	call	_lcdString	;wreg free
  7339  006FA4                     
  7340                           ;main.c: 299:     atraso_ms(3000);
  7341  006FA4  0E0B               	movlw	11
  7342  006FA6  6E02               	movwf	(atraso_ms@num+1)^0,c
  7343  006FA8  0EB8               	movlw	184
  7344  006FAA  6E01               	movwf	atraso_ms@num^0,c
  7345  006FAC  ECD0  F02F         	call	_atraso_ms	;wreg free
  7346  006FB0                     
  7347                           ;main.c: 300:     Limpa();
  7348  006FB0  ECC8  F02C         	call	_Limpa	;wreg free
  7349  006FB4                     
  7350                           ;main.c: 302:     lcdPosition(0,0);
  7351  006FB4  0E00               	movlw	0
  7352  006FB6  6E10               	movwf	(lcdPosition@line+1)^0,c
  7353  006FB8  0E00               	movlw	0
  7354  006FBA  6E0F               	movwf	lcdPosition@line^0,c
  7355  006FBC  0E00               	movlw	0
  7356  006FBE  6E12               	movwf	(lcdPosition@col+1)^0,c
  7357  006FC0  0E00               	movlw	0
  7358  006FC2  6E11               	movwf	lcdPosition@col^0,c
  7359  006FC4  EC1B  F02D         	call	_lcdPosition	;wreg free
  7360  006FC8                     
  7361                           ;main.c: 303:     lcdString("Diga seu nome:");
  7362  006FC8  0E7C               	movlw	low STR_32
  7363  006FCA  6E0F               	movwf	lcdString@msg^0,c
  7364  006FCC  0E7F               	movlw	high STR_32
  7365  006FCE  6E10               	movwf	(lcdString@msg+1)^0,c
  7366  006FD0  ECC3  F02E         	call	_lcdString	;wreg free
  7367  006FD4                     
  7368                           ;main.c: 304:     serial_tx_str("\nDiga seu nome: ");
  7369  006FD4  0EA5               	movlw	low STR_33
  7370  006FD6  6E02               	movwf	serial_tx_str@val^0,c
  7371  006FD8  0E7E               	movlw	high STR_33
  7372  006FDA  6E03               	movwf	(serial_tx_str@val+1)^0,c
  7373  006FDC  EC49  F02E         	call	_serial_tx_str	;wreg free
  7374  006FE0                     
  7375                           ;main.c: 305:     LeInfo(nome);
  7376  006FE0  0E67               	movlw	low _nome
  7377  006FE2  6E13               	movwf	LeInfo@palavra^0,c
  7378  006FE4  0E00               	movlw	high _nome
  7379  006FE6  6E14               	movwf	(LeInfo@palavra+1)^0,c
  7380  006FE8  ECD0  F030         	call	_LeInfo	;wreg free
  7381  006FEC                     
  7382                           ;main.c: 306:     Limpa();
  7383  006FEC  ECC8  F02C         	call	_Limpa	;wreg free
  7384  006FF0                     
  7385                           ;main.c: 308:     lcdPosition(0,0);
  7386  006FF0  0E00               	movlw	0
  7387  006FF2  6E10               	movwf	(lcdPosition@line+1)^0,c
  7388  006FF4  0E00               	movlw	0
  7389  006FF6  6E0F               	movwf	lcdPosition@line^0,c
  7390  006FF8  0E00               	movlw	0
  7391  006FFA  6E12               	movwf	(lcdPosition@col+1)^0,c
  7392  006FFC  0E00               	movlw	0
  7393  006FFE  6E11               	movwf	lcdPosition@col^0,c
  7394  007000  EC1B  F02D         	call	_lcdPosition	;wreg free
  7395  007004                     
  7396                           ;main.c: 309:     lcdString("Diga a matricula");
  7397  007004  0ED8               	movlw	low STR_34
  7398  007006  6E0F               	movwf	lcdString@msg^0,c
  7399  007008  0E7E               	movlw	high STR_34
  7400  00700A  6E10               	movwf	(lcdString@msg+1)^0,c
  7401  00700C  ECC3  F02E         	call	_lcdString	;wreg free
  7402  007010                     
  7403                           ;main.c: 310:     serial_tx_str("\nDiga seu numero de matricula: ");
  7404  007010  0E04               	movlw	low STR_35
  7405  007012  6E02               	movwf	serial_tx_str@val^0,c
  7406  007014  0E7E               	movlw	high STR_35
  7407  007016  6E03               	movwf	(serial_tx_str@val+1)^0,c
  7408  007018  EC49  F02E         	call	_serial_tx_str	;wreg free
  7409  00701C                     
  7410                           ;main.c: 311:     LeInfo(matricula);
  7411  00701C  0E57               	movlw	low _matricula
  7412  00701E  6E13               	movwf	LeInfo@palavra^0,c
  7413  007020  0E00               	movlw	high _matricula
  7414  007022  6E14               	movwf	(LeInfo@palavra+1)^0,c
  7415  007024  ECD0  F030         	call	_LeInfo	;wreg free
  7416  007028                     
  7417                           ;main.c: 312:     Limpa();
  7418  007028  ECC8  F02C         	call	_Limpa	;wreg free
  7419  00702C                     
  7420                           ;main.c: 314:     IMC();
  7421  00702C  EC19  F035         	call	_IMC	;wreg free
  7422  007030                     
  7423                           ;main.c: 315:     atraso_ms(3000);
  7424  007030  0E0B               	movlw	11
  7425  007032  6E02               	movwf	(atraso_ms@num+1)^0,c
  7426  007034  0EB8               	movlw	184
  7427  007036  6E01               	movwf	atraso_ms@num^0,c
  7428  007038  ECD0  F02F         	call	_atraso_ms	;wreg free
  7429  00703C                     
  7430                           ;main.c: 316:     Limpa();
  7431  00703C  ECC8  F02C         	call	_Limpa	;wreg free
  7432  007040                     
  7433                           ;main.c: 317:     lcdPosition(0,0);
  7434  007040  0E00               	movlw	0
  7435  007042  6E10               	movwf	(lcdPosition@line+1)^0,c
  7436  007044  0E00               	movlw	0
  7437  007046  6E0F               	movwf	lcdPosition@line^0,c
  7438  007048  0E00               	movlw	0
  7439  00704A  6E12               	movwf	(lcdPosition@col+1)^0,c
  7440  00704C  0E00               	movlw	0
  7441  00704E  6E11               	movwf	lcdPosition@col^0,c
  7442  007050  EC1B  F02D         	call	_lcdPosition	;wreg free
  7443  007054                     
  7444                           ;main.c: 318:     lcdString("Seja bem vindo/a");
  7445  007054  0EC7               	movlw	low STR_36
  7446  007056  6E0F               	movwf	lcdString@msg^0,c
  7447  007058  0E7E               	movlw	high STR_36
  7448  00705A  6E10               	movwf	(lcdString@msg+1)^0,c
  7449  00705C  ECC3  F02E         	call	_lcdString	;wreg free
  7450  007060                     
  7451                           ;main.c: 319:     lcdPosition(1,0);
  7452  007060  0E00               	movlw	0
  7453  007062  6E10               	movwf	(lcdPosition@line+1)^0,c
  7454  007064  0E01               	movlw	1
  7455  007066  6E0F               	movwf	lcdPosition@line^0,c
  7456  007068  0E00               	movlw	0
  7457  00706A  6E12               	movwf	(lcdPosition@col+1)^0,c
  7458  00706C  0E00               	movlw	0
  7459  00706E  6E11               	movwf	lcdPosition@col^0,c
  7460  007070  EC1B  F02D         	call	_lcdPosition	;wreg free
  7461  007074                     
  7462                           ;main.c: 320:     atraso_ms(5000);
  7463  007074  0E13               	movlw	19
  7464  007076  6E02               	movwf	(atraso_ms@num+1)^0,c
  7465  007078  0E88               	movlw	136
  7466  00707A  6E01               	movwf	atraso_ms@num^0,c
  7467  00707C  ECD0  F02F         	call	_atraso_ms	;wreg free
  7468  007080  0012               	return		;funcret
  7469  007082                     __end_of_Bemvindo:
  7470                           	callstack 0
  7471                           
  7472 ;; *************** function _LeInfo *****************
  7473 ;; Defined at:
  7474 ;;		line 141 in file "main.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  palavra         2   18[COMRAM] PTR PTR unsigned char 
  7477 ;;		 -> matricula(16), nome(16), 
  7478 ;; Auto vars:     Size  Location     Type
  7479 ;;  aux             1   21[COMRAM] unsigned char 
  7480 ;;  i               1   20[COMRAM] unsigned char 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  1    wreg      void 
  7483 ;; Registers used:
  7484 ;;		wreg, status,2, status,0, cstack
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7490 ;;      Params:         2       0       0       0       0       0       0
  7491 ;;      Locals:         2       0       0       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0       0
  7493 ;;      Totals:         4       0       0       0       0       0       0
  7494 ;;Total ram usage:        4 bytes
  7495 ;; Hardware stack levels used: 1
  7496 ;; Hardware stack levels required when called: 6
  7497 ;; This function calls:
  7498 ;;		_lcdChar
  7499 ;;		_lcdPosition
  7500 ;;		_serial_rx
  7501 ;;		_serial_tx
  7502 ;; This function is called by:
  7503 ;;		_Bemvindo
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           
  7507                           	psect	text49
  7508  0061A0                     __ptext49:
  7509                           	callstack 0
  7510  0061A0                     _LeInfo:
  7511                           	callstack 23
  7512  0061A0                     
  7513                           ;main.c: 142:     unsigned char aux=0,i=0;
  7514  0061A0  0E00               	movlw	0
  7515  0061A2  6E16               	movwf	LeInfo@aux^0,c
  7516  0061A4  0E00               	movlw	0
  7517  0061A6  6E15               	movwf	LeInfo@i^0,c
  7518  0061A8                     
  7519                           ;main.c: 143:     lcdPosition(1,0);
  7520  0061A8  0E00               	movlw	0
  7521  0061AA  6E10               	movwf	(lcdPosition@line+1)^0,c
  7522  0061AC  0E01               	movlw	1
  7523  0061AE  6E0F               	movwf	lcdPosition@line^0,c
  7524  0061B0  0E00               	movlw	0
  7525  0061B2  6E12               	movwf	(lcdPosition@col+1)^0,c
  7526  0061B4  0E00               	movlw	0
  7527  0061B6  6E11               	movwf	lcdPosition@col^0,c
  7528  0061B8  EC1B  F02D         	call	_lcdPosition	;wreg free
  7529                           
  7530                           ;main.c: 145:     while(aux!='.'){
  7531  0061BC  EF00  F031         	goto	l3480
  7532  0061C0                     l3468:
  7533                           
  7534                           ;main.c: 146:         aux=serial_rx(5000);
  7535  0061C0  0E13               	movlw	19
  7536  0061C2  6E08               	movwf	(serial_rx@timeout+1)^0,c
  7537  0061C4  0E88               	movlw	136
  7538  0061C6  6E07               	movwf	serial_rx@timeout^0,c
  7539  0061C8  EC44  F031         	call	_serial_rx	;wreg free
  7540  0061CC  6E16               	movwf	LeInfo@aux^0,c
  7541  0061CE                     
  7542                           ;main.c: 147:         if(aux!=0xa5&&aux!='.'){
  7543  0061CE  0EA5               	movlw	165
  7544  0061D0  1816               	xorwf	LeInfo@aux^0,w,c
  7545  0061D2  B4D8               	btfsc	status,2,c
  7546  0061D4  EFEE  F030         	goto	u2961
  7547  0061D8  EFF0  F030         	goto	u2960
  7548  0061DC                     u2961:
  7549  0061DC  EF00  F031         	goto	l3480
  7550  0061E0                     u2960:
  7551  0061E0                     
  7552                           ;main.c: 148:             *palavra[i]=aux;
  7553  0061E0  0E2E               	movlw	46
  7554  0061E2  1816               	xorwf	LeInfo@aux^0,w,c
  7555  0061E4  B4D8               	btfsc	status,2,c
  7556  0061E6  EFF7  F030         	goto	u2971
  7557  0061EA  EFF9  F030         	goto	u2970
  7558  0061EE                     u2971:
  7559  0061EE  EF00  F031         	goto	l3480
  7560  0061F2                     u2970:
  7561  0061F2                     
  7562                           ;main.c: 149:             serial_tx(aux);
  7563  0061F2  5016               	movf	LeInfo@aux^0,w,c
  7564  0061F4  EC5A  F02B         	call	_serial_tx
  7565  0061F8                     
  7566                           ;main.c: 150:             lcdChar(aux);
  7567  0061F8  5016               	movf	LeInfo@aux^0,w,c
  7568  0061FA  EC8E  F02B         	call	_lcdChar
  7569  0061FE                     
  7570                           ;main.c: 151:             i++;
  7571  0061FE  2A15               	incf	LeInfo@i^0,f,c
  7572  006200                     l3480:
  7573                           
  7574                           ;main.c: 145:     while(aux!='.'){
  7575  006200  0E2E               	movlw	46
  7576  006202  1816               	xorwf	LeInfo@aux^0,w,c
  7577  006204  A4D8               	btfss	status,2,c
  7578  006206  EF07  F031         	goto	u2981
  7579  00620A  EF09  F031         	goto	u2980
  7580  00620E                     u2981:
  7581  00620E  EFE0  F030         	goto	l3468
  7582  006212                     u2980:
  7583  006212  0012               	return		;funcret
  7584  006214                     __end_of_LeInfo:
  7585                           	callstack 0
  7586                           
  7587 ;; *************** function _IMC *****************
  7588 ;; Defined at:
  7589 ;;		line 157 in file "main.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;		None
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  imc             1   50[COMRAM] unsigned char 
  7594 ;;  aux             1   49[COMRAM] unsigned char 
  7595 ;; Return value:  Size  Location     Type
  7596 ;;                  1    wreg      void 
  7597 ;; Registers used:
  7598 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7599 ;; Tracked objects:
  7600 ;;		On entry : 0/0
  7601 ;;		On exit  : 0/0
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7604 ;;      Params:         0       0       0       0       0       0       0
  7605 ;;      Locals:         2       0       0       0       0       0       0
  7606 ;;      Temps:          0       0       0       0       0       0       0
  7607 ;;      Totals:         2       0       0       0       0       0       0
  7608 ;;Total ram usage:        2 bytes
  7609 ;; Hardware stack levels used: 1
  7610 ;; Hardware stack levels required when called: 7
  7611 ;; This function calls:
  7612 ;;		_LeSerial
  7613 ;;		_Limpa
  7614 ;;		_atraso_ms
  7615 ;;		_lcdPosition
  7616 ;;		_lcdString
  7617 ;;		_rgbColor
  7618 ;;		_serial_tx_str
  7619 ;; This function is called by:
  7620 ;;		_Bemvindo
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text50
  7625  006A32                     __ptext50:
  7626                           	callstack 0
  7627  006A32                     _IMC:
  7628                           	callstack 22
  7629  006A32                     
  7630                           ;main.c: 158:     unsigned char aux,imc;;main.c: 159:     lcdPosition(0,0);
  7631  006A32  0E00               	movlw	0
  7632  006A34  6E10               	movwf	(lcdPosition@line+1)^0,c
  7633  006A36  0E00               	movlw	0
  7634  006A38  6E0F               	movwf	lcdPosition@line^0,c
  7635  006A3A  0E00               	movlw	0
  7636  006A3C  6E12               	movwf	(lcdPosition@col+1)^0,c
  7637  006A3E  0E00               	movlw	0
  7638  006A40  6E11               	movwf	lcdPosition@col^0,c
  7639  006A42  EC1B  F02D         	call	_lcdPosition	;wreg free
  7640  006A46                     
  7641                           ;main.c: 160:     lcdString("Digite o IMC: ");
  7642  006A46  0E1D               	movlw	low (STR_16+1)
  7643  006A48  6E0F               	movwf	lcdString@msg^0,c
  7644  006A4A  0E7F               	movlw	high (STR_16+1)
  7645  006A4C  6E10               	movwf	(lcdString@msg+1)^0,c
  7646  006A4E  ECC3  F02E         	call	_lcdString	;wreg free
  7647  006A52                     
  7648                           ;main.c: 161:     serial_tx_str("\nDigite o IMC: ");
  7649  006A52  0E1C               	movlw	low STR_16
  7650  006A54  6E02               	movwf	serial_tx_str@val^0,c
  7651  006A56  0E7F               	movlw	high STR_16
  7652  006A58  6E03               	movwf	(serial_tx_str@val+1)^0,c
  7653  006A5A  EC49  F02E         	call	_serial_tx_str	;wreg free
  7654                           
  7655                           ;main.c: 162:     lcdPosition(1,3);
  7656  006A5E  0E00               	movlw	0
  7657  006A60  6E10               	movwf	(lcdPosition@line+1)^0,c
  7658  006A62  0E01               	movlw	1
  7659  006A64  6E0F               	movwf	lcdPosition@line^0,c
  7660  006A66  0E00               	movlw	0
  7661  006A68  6E12               	movwf	(lcdPosition@col+1)^0,c
  7662  006A6A  0E03               	movlw	3
  7663  006A6C  6E11               	movwf	lcdPosition@col^0,c
  7664  006A6E  EC1B  F02D         	call	_lcdPosition	;wreg free
  7665  006A72                     
  7666                           ;main.c: 163:     aux=LeSerial(10000);
  7667  006A72  0E27               	movlw	39
  7668  006A74  6E2C               	movwf	(LeSerial@tempo+1)^0,c
  7669  006A76  0E10               	movlw	16
  7670  006A78  6E2B               	movwf	LeSerial@tempo^0,c
  7671  006A7A  EC8B  F031         	call	_LeSerial	;wreg free
  7672  006A7E  502B               	movf	?_LeSerial^0,w,c
  7673  006A80  6E32               	movwf	IMC@aux^0,c
  7674  006A82                     
  7675                           ;main.c: 164:     if(aux!=0)
  7676  006A82  5032               	movf	IMC@aux^0,w,c
  7677  006A84  B4D8               	btfsc	status,2,c
  7678  006A86  EF47  F035         	goto	u2991
  7679  006A8A  EF49  F035         	goto	u2990
  7680  006A8E                     u2991:
  7681  006A8E  EF4B  F035         	goto	l3494
  7682  006A92                     u2990:
  7683  006A92                     
  7684                           ;main.c: 165:         imc=aux;
  7685  006A92  C032  F033         	movff	IMC@aux,IMC@imc
  7686  006A96                     l3494:
  7687                           
  7688                           ;main.c: 166:     Limpa();
  7689  006A96  ECC8  F02C         	call	_Limpa	;wreg free
  7690                           
  7691                           ;main.c: 167:     lcdPosition(1,0);
  7692  006A9A  0E00               	movlw	0
  7693  006A9C  6E10               	movwf	(lcdPosition@line+1)^0,c
  7694  006A9E  0E01               	movlw	1
  7695  006AA0  6E0F               	movwf	lcdPosition@line^0,c
  7696  006AA2  0E00               	movlw	0
  7697  006AA4  6E12               	movwf	(lcdPosition@col+1)^0,c
  7698  006AA6  0E00               	movlw	0
  7699  006AA8  6E11               	movwf	lcdPosition@col^0,c
  7700  006AAA  EC1B  F02D         	call	_lcdPosition	;wreg free
  7701  006AAE                     
  7702                           ;main.c: 168:     if(imc<15||imc>29)
  7703  006AAE  0E0E               	movlw	14
  7704  006AB0  6433               	cpfsgt	IMC@imc^0,c
  7705  006AB2  EF5D  F035         	goto	u3001
  7706  006AB6  EF5F  F035         	goto	u3000
  7707  006ABA                     u3001:
  7708  006ABA  EF67  F035         	goto	l3500
  7709  006ABE                     u3000:
  7710  006ABE  0E1D               	movlw	29
  7711  006AC0  6433               	cpfsgt	IMC@imc^0,c
  7712  006AC2  EF65  F035         	goto	u3011
  7713  006AC6  EF67  F035         	goto	u3010
  7714  006ACA                     u3011:
  7715  006ACA  EF75  F035         	goto	l3504
  7716  006ACE                     u3010:
  7717  006ACE                     l3500:
  7718                           
  7719                           ;main.c: 169:         rgbColor(1),lcdString("Procure o medico");
  7720  006ACE  0E00               	movlw	0
  7721  006AD0  6E08               	movwf	(rgbColor@led+1)^0,c
  7722  006AD2  0E01               	movlw	1
  7723  006AD4  6E07               	movwf	rgbColor@led^0,c
  7724  006AD6  EC2E  F032         	call	_rgbColor	;wreg free
  7725  006ADA  0EE9               	movlw	low STR_17
  7726  006ADC  6E0F               	movwf	lcdString@msg^0,c
  7727  006ADE  0E7E               	movlw	high STR_17
  7728  006AE0  6E10               	movwf	(lcdString@msg+1)^0,c
  7729  006AE2  ECC3  F02E         	call	_lcdString	;wreg free
  7730  006AE6  EF9F  F035         	goto	l3516
  7731  006AEA                     l3504:
  7732  006AEA  0E11               	movlw	17
  7733  006AEC  6433               	cpfsgt	IMC@imc^0,c
  7734  006AEE  EF7B  F035         	goto	u3021
  7735  006AF2  EF7D  F035         	goto	u3020
  7736  006AF6                     u3021:
  7737  006AF6  EF85  F035         	goto	l3508
  7738  006AFA                     u3020:
  7739  006AFA  0E19               	movlw	25
  7740  006AFC  6433               	cpfsgt	IMC@imc^0,c
  7741  006AFE  EF83  F035         	goto	u3031
  7742  006B02  EF85  F035         	goto	u3030
  7743  006B06                     u3031:
  7744  006B06  EF93  F035         	goto	l3512
  7745  006B0A                     u3030:
  7746  006B0A                     l3508:
  7747                           
  7748                           ;main.c: 171:         rgbColor(3),lcdString("Se alimente bem");
  7749  006B0A  0E00               	movlw	0
  7750  006B0C  6E08               	movwf	(rgbColor@led+1)^0,c
  7751  006B0E  0E03               	movlw	3
  7752  006B10  6E07               	movwf	rgbColor@led^0,c
  7753  006B12  EC2E  F032         	call	_rgbColor	;wreg free
  7754  006B16  0E4C               	movlw	low STR_18
  7755  006B18  6E0F               	movwf	lcdString@msg^0,c
  7756  006B1A  0E7F               	movlw	high STR_18
  7757  006B1C  6E10               	movwf	(lcdString@msg+1)^0,c
  7758  006B1E  ECC3  F02E         	call	_lcdString	;wreg free
  7759  006B22  EF9F  F035         	goto	l3516
  7760  006B26                     l3512:
  7761                           
  7762                           ;main.c: 173:         rgbColor(2),lcdString("Ok, Saude otima");
  7763  006B26  0E00               	movlw	0
  7764  006B28  6E08               	movwf	(rgbColor@led+1)^0,c
  7765  006B2A  0E02               	movlw	2
  7766  006B2C  6E07               	movwf	rgbColor@led^0,c
  7767  006B2E  EC2E  F032         	call	_rgbColor	;wreg free
  7768  006B32  0E3C               	movlw	low STR_19
  7769  006B34  6E0F               	movwf	lcdString@msg^0,c
  7770  006B36  0E7F               	movlw	high STR_19
  7771  006B38  6E10               	movwf	(lcdString@msg+1)^0,c
  7772  006B3A  ECC3  F02E         	call	_lcdString	;wreg free
  7773  006B3E                     l3516:
  7774                           
  7775                           ;main.c: 174:     atraso_ms(3000);
  7776  006B3E  0E0B               	movlw	11
  7777  006B40  6E02               	movwf	(atraso_ms@num+1)^0,c
  7778  006B42  0EB8               	movlw	184
  7779  006B44  6E01               	movwf	atraso_ms@num^0,c
  7780  006B46  ECD0  F02F         	call	_atraso_ms	;wreg free
  7781  006B4A  0012               	return		;funcret
  7782  006B4C                     __end_of_IMC:
  7783                           	callstack 0
  7784                           
  7785 ;; *************** function _serial_tx_str *****************
  7786 ;; Defined at:
  7787 ;;		line 56 in file "serial.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  val             2    1[COMRAM] PTR const unsigned char 
  7790 ;;		 -> STR_35(32), STR_33(17), STR_16(16), 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;  i               1    5[COMRAM] unsigned char 
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  1    wreg      void 
  7795 ;; Registers used:
  7796 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7802 ;;      Params:         2       0       0       0       0       0       0
  7803 ;;      Locals:         1       0       0       0       0       0       0
  7804 ;;      Temps:          2       0       0       0       0       0       0
  7805 ;;      Totals:         5       0       0       0       0       0       0
  7806 ;;Total ram usage:        5 bytes
  7807 ;; Hardware stack levels used: 1
  7808 ;; Hardware stack levels required when called: 1
  7809 ;; This function calls:
  7810 ;;		_serial_tx
  7811 ;; This function is called by:
  7812 ;;		_IMC
  7813 ;;		_Bemvindo
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           	psect	text51
  7818  005C92                     __ptext51:
  7819                           	callstack 0
  7820  005C92                     _serial_tx_str:
  7821                           	callstack 28
  7822  005C92                     
  7823                           ;serial.c: 56: void serial_tx_str(const char* val);serial.c: 57: {;serial.c: 58:   unsig
      +                          ned char i=0;
  7824  005C92  0E00               	movlw	0
  7825  005C94  6E06               	movwf	serial_tx_str@i^0,c
  7826                           
  7827                           ;serial.c: 60:   while(val[i])
  7828  005C96  EF5C  F02E         	goto	l3304
  7829  005C9A                     l3300:
  7830                           
  7831                           ;serial.c: 61:   {;serial.c: 62:     serial_tx(val[i]);
  7832  005C9A  5006               	movf	serial_tx_str@i^0,w,c
  7833  005C9C  2402               	addwf	serial_tx_str@val^0,w,c
  7834  005C9E  6E04               	movwf	??_serial_tx_str^0,c
  7835  005CA0  0E00               	movlw	0
  7836  005CA2  2003               	addwfc	(serial_tx_str@val+1)^0,w,c
  7837  005CA4  6E05               	movwf	(??_serial_tx_str+1)^0,c
  7838  005CA6  C004  FFF6         	movff	??_serial_tx_str,tblptrl
  7839  005CAA  C005  FFF7         	movff	??_serial_tx_str+1,tblptrh
  7840  005CAE                     	if	0	;tblptru may be non-zero
  7841  005CAE                     	endif
  7842  005CAE                     	if	0	;tblptru may be non-zero
  7843  005CAE                     	endif
  7844  005CAE  0008               	tblrd		*
  7845  005CB0  50F5               	movf	tablat,w,c
  7846  005CB2  EC5A  F02B         	call	_serial_tx
  7847  005CB6                     
  7848                           ;serial.c: 63:     i++;
  7849  005CB6  2A06               	incf	serial_tx_str@i^0,f,c
  7850  005CB8                     l3304:
  7851                           
  7852                           ;serial.c: 60:   while(val[i])
  7853  005CB8  5006               	movf	serial_tx_str@i^0,w,c
  7854  005CBA  2402               	addwf	serial_tx_str@val^0,w,c
  7855  005CBC  6E04               	movwf	??_serial_tx_str^0,c
  7856  005CBE  0E00               	movlw	0
  7857  005CC0  2003               	addwfc	(serial_tx_str@val+1)^0,w,c
  7858  005CC2  6E05               	movwf	(??_serial_tx_str+1)^0,c
  7859  005CC4  C004  FFF6         	movff	??_serial_tx_str,tblptrl
  7860  005CC8  C005  FFF7         	movff	??_serial_tx_str+1,tblptrh
  7861  005CCC                     	if	0	;tblptru may be non-zero
  7862  005CCC                     	endif
  7863  005CCC                     	if	0	;tblptru may be non-zero
  7864  005CCC                     	endif
  7865  005CCC  0008               	tblrd		*
  7866  005CCE  50F5               	movf	tablat,w,c
  7867  005CD0  0900               	iorlw	0
  7868  005CD2  A4D8               	btfss	status,2,c
  7869  005CD4  EF6E  F02E         	goto	u2811
  7870  005CD8  EF70  F02E         	goto	u2810
  7871  005CDC                     u2811:
  7872  005CDC  EF4D  F02E         	goto	l3300
  7873  005CE0                     u2810:
  7874  005CE0  0012               	return		;funcret
  7875  005CE2                     __end_of_serial_tx_str:
  7876                           	callstack 0
  7877                           
  7878 ;; *************** function _serial_tx *****************
  7879 ;; Defined at:
  7880 ;;		line 50 in file "serial.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  val             1    wreg     unsigned char 
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;  val             1    0[COMRAM] unsigned char 
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  1    wreg      void 
  7887 ;; Registers used:
  7888 ;;		wreg
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7894 ;;      Params:         0       0       0       0       0       0       0
  7895 ;;      Locals:         1       0       0       0       0       0       0
  7896 ;;      Temps:          0       0       0       0       0       0       0
  7897 ;;      Totals:         1       0       0       0       0       0       0
  7898 ;;Total ram usage:        1 bytes
  7899 ;; Hardware stack levels used: 1
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_LeInfo
  7904 ;;		_serial_tx_str
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	text52
  7909  0056B4                     __ptext52:
  7910                           	callstack 0
  7911  0056B4                     _serial_tx:
  7912                           	callstack 28
  7913                           
  7914                           ;incstack = 0
  7915                           ;serial_tx@val stored from wreg
  7916  0056B4  6E01               	movwf	serial_tx@val^0,c
  7917  0056B6                     
  7918                           ;serial.c: 50: void serial_tx(unsigned char val);serial.c: 51: {;serial.c: 52:   TXREG=v
      +                          al;
  7919  0056B6  C001  FFAD         	movff	serial_tx@val,4013	;volatile
  7920  0056BA                     l567:
  7921  0056BA  A2AC               	btfss	172,1,c	;volatile
  7922  0056BC  EF62  F02B         	goto	u751
  7923  0056C0  EF64  F02B         	goto	u750
  7924  0056C4                     u751:
  7925  0056C4  EF5D  F02B         	goto	l567
  7926  0056C8                     u750:
  7927  0056C8  0012               	return		;funcret
  7928  0056CA                     __end_of_serial_tx:
  7929                           	callstack 0
  7930                           
  7931 ;; *************** function _rgbColor *****************
  7932 ;; Defined at:
  7933 ;;		line 3 in file "rgb.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;  led             2    6[COMRAM] int 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      void 
  7940 ;; Registers used:
  7941 ;;		wreg, status,2, status,0, cstack
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7947 ;;      Params:         2       0       0       0       0       0       0
  7948 ;;      Locals:         0       0       0       0       0       0       0
  7949 ;;      Temps:          0       0       0       0       0       0       0
  7950 ;;      Totals:         2       0       0       0       0       0       0
  7951 ;;Total ram usage:        2 bytes
  7952 ;; Hardware stack levels used: 1
  7953 ;; Hardware stack levels required when called: 1
  7954 ;; This function calls:
  7955 ;;		_digitalWrite
  7956 ;; This function is called by:
  7957 ;;		_IMC
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text53
  7962  00645C                     __ptext53:
  7963                           	callstack 0
  7964  00645C                     _rgbColor:
  7965                           	callstack 27
  7966  00645C                     
  7967                           ;rgb.c: 4:  if (led & 1) {
  7968  00645C  A007               	btfss	rgbColor@led^0,0,c
  7969  00645E  EF33  F032         	goto	u2821
  7970  006462  EF35  F032         	goto	u2820
  7971  006466                     u2821:
  7972  006466  EF41  F032         	goto	l3310
  7973  00646A                     u2820:
  7974  00646A                     
  7975                           ;rgb.c: 5:   digitalWrite(PIN_D0, 1);
  7976  00646A  0E00               	movlw	0
  7977  00646C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7978  00646E  0E18               	movlw	24
  7979  006470  6E01               	movwf	digitalWrite@pin^0,c
  7980  006472  0E00               	movlw	0
  7981  006474  6E04               	movwf	(digitalWrite@value+1)^0,c
  7982  006476  0E01               	movlw	1
  7983  006478  6E03               	movwf	digitalWrite@value^0,c
  7984  00647A  EC65  F03A         	call	_digitalWrite	;wreg free
  7985                           
  7986                           ;rgb.c: 6:  } else {
  7987  00647E  EF4B  F032         	goto	l3312
  7988  006482                     l3310:
  7989                           
  7990                           ;rgb.c: 7:   digitalWrite(PIN_D0, 0);
  7991  006482  0E00               	movlw	0
  7992  006484  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7993  006486  0E18               	movlw	24
  7994  006488  6E01               	movwf	digitalWrite@pin^0,c
  7995  00648A  0E00               	movlw	0
  7996  00648C  6E04               	movwf	(digitalWrite@value+1)^0,c
  7997  00648E  0E00               	movlw	0
  7998  006490  6E03               	movwf	digitalWrite@value^0,c
  7999  006492  EC65  F03A         	call	_digitalWrite	;wreg free
  8000  006496                     l3312:
  8001                           
  8002                           ;rgb.c: 9:  if (led & 2) {
  8003  006496  A207               	btfss	rgbColor@led^0,1,c
  8004  006498  EF50  F032         	goto	u2831
  8005  00649C  EF52  F032         	goto	u2830
  8006  0064A0                     u2831:
  8007  0064A0  EF5E  F032         	goto	l3316
  8008  0064A4                     u2830:
  8009  0064A4                     
  8010                           ;rgb.c: 10:   digitalWrite(PIN_D1, 1);
  8011  0064A4  0E00               	movlw	0
  8012  0064A6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8013  0064A8  0E19               	movlw	25
  8014  0064AA  6E01               	movwf	digitalWrite@pin^0,c
  8015  0064AC  0E00               	movlw	0
  8016  0064AE  6E04               	movwf	(digitalWrite@value+1)^0,c
  8017  0064B0  0E01               	movlw	1
  8018  0064B2  6E03               	movwf	digitalWrite@value^0,c
  8019  0064B4  EC65  F03A         	call	_digitalWrite	;wreg free
  8020                           
  8021                           ;rgb.c: 11:  } else {
  8022  0064B8  EF68  F032         	goto	l3318
  8023  0064BC                     l3316:
  8024                           
  8025                           ;rgb.c: 12:   digitalWrite(PIN_D1, 0);
  8026  0064BC  0E00               	movlw	0
  8027  0064BE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8028  0064C0  0E19               	movlw	25
  8029  0064C2  6E01               	movwf	digitalWrite@pin^0,c
  8030  0064C4  0E00               	movlw	0
  8031  0064C6  6E04               	movwf	(digitalWrite@value+1)^0,c
  8032  0064C8  0E00               	movlw	0
  8033  0064CA  6E03               	movwf	digitalWrite@value^0,c
  8034  0064CC  EC65  F03A         	call	_digitalWrite	;wreg free
  8035  0064D0                     l3318:
  8036                           
  8037                           ;rgb.c: 14:  if (led & 4) {
  8038  0064D0  A407               	btfss	rgbColor@led^0,2,c
  8039  0064D2  EF6D  F032         	goto	u2841
  8040  0064D6  EF6F  F032         	goto	u2840
  8041  0064DA                     u2841:
  8042  0064DA  EF7B  F032         	goto	l3322
  8043  0064DE                     u2840:
  8044  0064DE                     
  8045                           ;rgb.c: 15:   digitalWrite(PIN_D2, 1);
  8046  0064DE  0E00               	movlw	0
  8047  0064E0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8048  0064E2  0E1A               	movlw	26
  8049  0064E4  6E01               	movwf	digitalWrite@pin^0,c
  8050  0064E6  0E00               	movlw	0
  8051  0064E8  6E04               	movwf	(digitalWrite@value+1)^0,c
  8052  0064EA  0E01               	movlw	1
  8053  0064EC  6E03               	movwf	digitalWrite@value^0,c
  8054  0064EE  EC65  F03A         	call	_digitalWrite	;wreg free
  8055                           
  8056                           ;rgb.c: 16:  } else {
  8057  0064F2  EF85  F032         	goto	l532
  8058  0064F6                     l3322:
  8059                           
  8060                           ;rgb.c: 17:   digitalWrite(PIN_D2, 0);
  8061  0064F6  0E00               	movlw	0
  8062  0064F8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8063  0064FA  0E1A               	movlw	26
  8064  0064FC  6E01               	movwf	digitalWrite@pin^0,c
  8065  0064FE  0E00               	movlw	0
  8066  006500  6E04               	movwf	(digitalWrite@value+1)^0,c
  8067  006502  0E00               	movlw	0
  8068  006504  6E03               	movwf	digitalWrite@value^0,c
  8069  006506  EC65  F03A         	call	_digitalWrite	;wreg free
  8070  00650A                     l532:
  8071  00650A  0012               	return		;funcret
  8072  00650C                     __end_of_rgbColor:
  8073                           	callstack 0
  8074                           
  8075 ;; *************** function _lcdString *****************
  8076 ;; Defined at:
  8077 ;;		line 57 in file "lcd.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  msg             2   14[COMRAM] PTR unsigned char 
  8080 ;;		 -> STR_38(14), STR_37(17), STR_36(17), STR_34(17), 
  8081 ;;		 -> STR_32(15), STR_31(16), STR_30(16), STR_29(17), 
  8082 ;;		 -> STR_28(16), STR_27(4), STR_26(6), STR_25(7), 
  8083 ;;		 -> STR_24(17), STR_23(4), STR_22(3), STR_21(3), 
  8084 ;;		 -> STR_20(2), STR_19(16), STR_18(16), STR_17(17), 
  8085 ;;		 -> STR_15(15), STR_14(11), STR_13(12), STR_12(10), 
  8086 ;;		 -> STR_11(12), STR_10(11), STR_9(12), STR_8(12), 
  8087 ;;		 -> STR_7(11), STR_6(17), STR_5(25), STR_4(20), 
  8088 ;;		 -> STR_3(18), STR_2(25), STR_1(24), 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;  i               2   18[COMRAM] int 
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  1    wreg      void 
  8093 ;; Registers used:
  8094 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8100 ;;      Params:         2       0       0       0       0       0       0
  8101 ;;      Locals:         2       0       0       0       0       0       0
  8102 ;;      Temps:          2       0       0       0       0       0       0
  8103 ;;      Totals:         6       0       0       0       0       0       0
  8104 ;;Total ram usage:        6 bytes
  8105 ;; Hardware stack levels used: 1
  8106 ;; Hardware stack levels required when called: 5
  8107 ;; This function calls:
  8108 ;;		_lcdChar
  8109 ;; This function is called by:
  8110 ;;		_musicas
  8111 ;;		_radios
  8112 ;;		_IMC
  8113 ;;		_data
  8114 ;;		_Cronometro
  8115 ;;		_Telas
  8116 ;;		_Bemvindo
  8117 ;;		_Finalizando
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           	psect	text54
  8122  005D86                     __ptext54:
  8123                           	callstack 0
  8124  005D86                     _lcdString:
  8125                           	callstack 23
  8126  005D86                     
  8127                           ;lcd.c: 58:  int i = 0;
  8128  005D86  0E00               	movlw	0
  8129  005D88  6E14               	movwf	(lcdString@i+1)^0,c
  8130  005D8A  0E00               	movlw	0
  8131  005D8C  6E13               	movwf	lcdString@i^0,c
  8132                           
  8133                           ;lcd.c: 59:  while (msg[i] != 0) {
  8134  005D8E  EFD9  F02E         	goto	l3268
  8135  005D92                     l3264:
  8136                           
  8137                           ;lcd.c: 60:   lcdChar(msg[i]);
  8138  005D92  5013               	movf	lcdString@i^0,w,c
  8139  005D94  240F               	addwf	lcdString@msg^0,w,c
  8140  005D96  6E11               	movwf	??_lcdString^0,c
  8141  005D98  5014               	movf	(lcdString@i+1)^0,w,c
  8142  005D9A  2010               	addwfc	(lcdString@msg+1)^0,w,c
  8143  005D9C  6E12               	movwf	(??_lcdString+1)^0,c
  8144  005D9E  C011  FFF6         	movff	??_lcdString,tblptrl
  8145  005DA2  C012  FFF7         	movff	??_lcdString+1,tblptrh
  8146  005DA6                     	if	0	;tblptru may be non-zero
  8147  005DA6                     	endif
  8148  005DA6                     	if	0	;tblptru may be non-zero
  8149  005DA6                     	endif
  8150  005DA6  0008               	tblrd		*
  8151  005DA8  50F5               	movf	tablat,w,c
  8152  005DAA  EC8E  F02B         	call	_lcdChar
  8153  005DAE                     
  8154                           ;lcd.c: 61:   i++;
  8155  005DAE  4A13               	infsnz	lcdString@i^0,f,c
  8156  005DB0  2A14               	incf	(lcdString@i+1)^0,f,c
  8157  005DB2                     l3268:
  8158                           
  8159                           ;lcd.c: 59:  while (msg[i] != 0) {
  8160  005DB2  5013               	movf	lcdString@i^0,w,c
  8161  005DB4  240F               	addwf	lcdString@msg^0,w,c
  8162  005DB6  6E11               	movwf	??_lcdString^0,c
  8163  005DB8  5014               	movf	(lcdString@i+1)^0,w,c
  8164  005DBA  2010               	addwfc	(lcdString@msg+1)^0,w,c
  8165  005DBC  6E12               	movwf	(??_lcdString+1)^0,c
  8166  005DBE  C011  FFF6         	movff	??_lcdString,tblptrl
  8167  005DC2  C012  FFF7         	movff	??_lcdString+1,tblptrh
  8168  005DC6                     	if	0	;tblptru may be non-zero
  8169  005DC6                     	endif
  8170  005DC6                     	if	0	;tblptru may be non-zero
  8171  005DC6                     	endif
  8172  005DC6  0008               	tblrd		*
  8173  005DC8  50F5               	movf	tablat,w,c
  8174  005DCA  0900               	iorlw	0
  8175  005DCC  A4D8               	btfss	status,2,c
  8176  005DCE  EFEB  F02E         	goto	u2781
  8177  005DD2  EFED  F02E         	goto	u2780
  8178  005DD6                     u2781:
  8179  005DD6  EFC9  F02E         	goto	l3264
  8180  005DDA                     u2780:
  8181  005DDA  0012               	return		;funcret
  8182  005DDC                     __end_of_lcdString:
  8183                           	callstack 0
  8184                           
  8185 ;; *************** function _lcdChar *****************
  8186 ;; Defined at:
  8187 ;;		line 52 in file "lcd.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;  value           1    wreg     unsigned char 
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;  value           1   13[COMRAM] unsigned char 
  8192 ;; Return value:  Size  Location     Type
  8193 ;;                  1    wreg      void 
  8194 ;; Registers used:
  8195 ;;		wreg, status,2, status,0, cstack
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : 0/0
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8201 ;;      Params:         0       0       0       0       0       0       0
  8202 ;;      Locals:         1       0       0       0       0       0       0
  8203 ;;      Temps:          0       0       0       0       0       0       0
  8204 ;;      Totals:         1       0       0       0       0       0       0
  8205 ;;Total ram usage:        1 bytes
  8206 ;; Hardware stack levels used: 1
  8207 ;; Hardware stack levels required when called: 4
  8208 ;; This function calls:
  8209 ;;		_delayMicro
  8210 ;;		_pushByte
  8211 ;; This function is called by:
  8212 ;;		_LogoUnifei
  8213 ;;		_volume
  8214 ;;		_LeInfo
  8215 ;;		_data
  8216 ;;		_Cronometro
  8217 ;;		_Telas
  8218 ;;		_lcdString
  8219 ;;		_lcdNumber
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text55
  8224  00571C                     __ptext55:
  8225                           	callstack 0
  8226  00571C                     _lcdChar:
  8227                           	callstack 24
  8228                           
  8229                           ;incstack = 0
  8230                           ;lcdChar@value stored from wreg
  8231  00571C  6E0E               	movwf	lcdChar@value^0,c
  8232  00571E                     
  8233                           ;lcd.c: 53:  pushByte(value, 1);
  8234  00571E  0E00               	movlw	0
  8235  005720  6E0B               	movwf	(pushByte@rs+1)^0,c
  8236  005722  0E01               	movlw	1
  8237  005724  6E0A               	movwf	pushByte@rs^0,c
  8238  005726  500E               	movf	lcdChar@value^0,w,c
  8239  005728  EC45  F02F         	call	_pushByte
  8240  00572C                     
  8241                           ;lcd.c: 54:  delayMicro(80);
  8242  00572C  0E00               	movlw	0
  8243  00572E  6E02               	movwf	(delayMicro@a+1)^0,c
  8244  005730  0E50               	movlw	80
  8245  005732  6E01               	movwf	delayMicro@a^0,c
  8246  005734  EC3A  F02B         	call	_delayMicro	;wreg free
  8247  005738  0012               	return		;funcret
  8248  00573A                     __end_of_lcdChar:
  8249                           	callstack 0
  8250                           
  8251 ;; *************** function _Limpa *****************
  8252 ;; Defined at:
  8253 ;;		line 107 in file "main.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;		None
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;		None
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  1    wreg      void 
  8260 ;; Registers used:
  8261 ;;		wreg, status,2, status,0, cstack
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8267 ;;      Params:         0       0       0       0       0       0       0
  8268 ;;      Locals:         0       0       0       0       0       0       0
  8269 ;;      Temps:          0       0       0       0       0       0       0
  8270 ;;      Totals:         0       0       0       0       0       0       0
  8271 ;;Total ram usage:        0 bytes
  8272 ;; Hardware stack levels used: 1
  8273 ;; Hardware stack levels required when called: 6
  8274 ;; This function calls:
  8275 ;;		_lcdCommand
  8276 ;;		_lcdPosition
  8277 ;; This function is called by:
  8278 ;;		_IMC
  8279 ;;		_Bemvindo
  8280 ;;		_Finalizando
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           	psect	text56
  8285  005990                     __ptext56:
  8286                           	callstack 0
  8287  005990                     _Limpa:
  8288                           	callstack 23
  8289  005990                     
  8290                           ;main.c: 108:     lcdPosition(0,0);
  8291  005990  0E00               	movlw	0
  8292  005992  6E10               	movwf	(lcdPosition@line+1)^0,c
  8293  005994  0E00               	movlw	0
  8294  005996  6E0F               	movwf	lcdPosition@line^0,c
  8295  005998  0E00               	movlw	0
  8296  00599A  6E12               	movwf	(lcdPosition@col+1)^0,c
  8297  00599C  0E00               	movlw	0
  8298  00599E  6E11               	movwf	lcdPosition@col^0,c
  8299  0059A0  EC1B  F02D         	call	_lcdPosition	;wreg free
  8300                           
  8301                           ;main.c: 109:     lcdCommand(0x01);
  8302  0059A4  0E01               	movlw	1
  8303  0059A6  EC7F  F02B         	call	_lcdCommand
  8304                           
  8305                           ;main.c: 110:     lcdPosition(1,0);
  8306  0059AA  0E00               	movlw	0
  8307  0059AC  6E10               	movwf	(lcdPosition@line+1)^0,c
  8308  0059AE  0E01               	movlw	1
  8309  0059B0  6E0F               	movwf	lcdPosition@line^0,c
  8310  0059B2  0E00               	movlw	0
  8311  0059B4  6E12               	movwf	(lcdPosition@col+1)^0,c
  8312  0059B6  0E00               	movlw	0
  8313  0059B8  6E11               	movwf	lcdPosition@col^0,c
  8314  0059BA  EC1B  F02D         	call	_lcdPosition	;wreg free
  8315                           
  8316                           ;main.c: 111:     lcdCommand(0x01);
  8317  0059BE  0E01               	movlw	1
  8318  0059C0  EC7F  F02B         	call	_lcdCommand
  8319  0059C4  0012               	return		;funcret
  8320  0059C6                     __end_of_Limpa:
  8321                           	callstack 0
  8322                           
  8323 ;; *************** function _lcdPosition *****************
  8324 ;; Defined at:
  8325 ;;		line 44 in file "lcd.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;  line            2   14[COMRAM] int 
  8328 ;;  col             2   16[COMRAM] int 
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;		None
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  1    wreg      void 
  8333 ;; Registers used:
  8334 ;;		wreg, status,2, status,0, cstack
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8340 ;;      Params:         4       0       0       0       0       0       0
  8341 ;;      Locals:         0       0       0       0       0       0       0
  8342 ;;      Temps:          0       0       0       0       0       0       0
  8343 ;;      Totals:         4       0       0       0       0       0       0
  8344 ;;Total ram usage:        4 bytes
  8345 ;; Hardware stack levels used: 1
  8346 ;; Hardware stack levels required when called: 5
  8347 ;; This function calls:
  8348 ;;		_lcdCommand
  8349 ;; This function is called by:
  8350 ;;		_Limpa
  8351 ;;		_LeInfo
  8352 ;;		_IMC
  8353 ;;		_data
  8354 ;;		_Cronometro
  8355 ;;		_Telas
  8356 ;;		_Bemvindo
  8357 ;;		_Finalizando
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	text57
  8362  005A36                     __ptext57:
  8363                           	callstack 0
  8364  005A36                     _lcdPosition:
  8365                           	callstack 24
  8366  005A36                     
  8367                           ;lcd.c: 45:  if (line == 0) {
  8368  005A36  500F               	movf	lcdPosition@line^0,w,c
  8369  005A38  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  8370  005A3A  A4D8               	btfss	status,2,c
  8371  005A3C  EF22  F02D         	goto	u2481
  8372  005A40  EF24  F02D         	goto	u2480
  8373  005A44                     u2481:
  8374  005A44  EF29  F02D         	goto	l3078
  8375  005A48                     u2480:
  8376  005A48                     
  8377                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  8378  005A48  5011               	movf	lcdPosition@col^0,w,c
  8379  005A4A  0B0F               	andlw	15
  8380  005A4C  0F80               	addlw	128
  8381  005A4E  EC7F  F02B         	call	_lcdCommand
  8382  005A52                     l3078:
  8383                           
  8384                           ;lcd.c: 48:  if (line == 1) {
  8385  005A52  040F               	decf	lcdPosition@line^0,w,c
  8386  005A54  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  8387  005A56  A4D8               	btfss	status,2,c
  8388  005A58  EF30  F02D         	goto	u2491
  8389  005A5C  EF32  F02D         	goto	u2490
  8390  005A60                     u2491:
  8391  005A60  EF37  F02D         	goto	l482
  8392  005A64                     u2490:
  8393  005A64                     
  8394                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  8395  005A64  5011               	movf	lcdPosition@col^0,w,c
  8396  005A66  0B0F               	andlw	15
  8397  005A68  0FC0               	addlw	192
  8398  005A6A  EC7F  F02B         	call	_lcdCommand
  8399  005A6E                     l482:
  8400  005A6E  0012               	return		;funcret
  8401  005A70                     __end_of_lcdPosition:
  8402                           	callstack 0
  8403                           
  8404 ;; *************** function _lcdCommand *****************
  8405 ;; Defined at:
  8406 ;;		line 40 in file "lcd.c"
  8407 ;; Parameters:    Size  Location     Type
  8408 ;;  value           1    wreg     unsigned char 
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;  value           1   13[COMRAM] unsigned char 
  8411 ;; Return value:  Size  Location     Type
  8412 ;;                  1    wreg      void 
  8413 ;; Registers used:
  8414 ;;		wreg, status,2, status,0, cstack
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/0
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8420 ;;      Params:         0       0       0       0       0       0       0
  8421 ;;      Locals:         1       0       0       0       0       0       0
  8422 ;;      Temps:          0       0       0       0       0       0       0
  8423 ;;      Totals:         1       0       0       0       0       0       0
  8424 ;;Total ram usage:        1 bytes
  8425 ;; Hardware stack levels used: 1
  8426 ;; Hardware stack levels required when called: 4
  8427 ;; This function calls:
  8428 ;;		_delayMili
  8429 ;;		_pushByte
  8430 ;; This function is called by:
  8431 ;;		_LogoUnifei
  8432 ;;		_Limpa
  8433 ;;		_Finalizando
  8434 ;;		_lcdPosition
  8435 ;;		_lcdInit
  8436 ;; This function uses a non-reentrant model
  8437 ;;
  8438                           
  8439                           	psect	text58
  8440  0056FE                     __ptext58:
  8441                           	callstack 0
  8442  0056FE                     _lcdCommand:
  8443                           	callstack 25
  8444                           
  8445                           ;incstack = 0
  8446                           ;lcdCommand@value stored from wreg
  8447  0056FE  6E0E               	movwf	lcdCommand@value^0,c
  8448  005700                     
  8449                           ;lcd.c: 41:  pushByte(value, 0);
  8450  005700  0E00               	movlw	0
  8451  005702  6E0B               	movwf	(pushByte@rs+1)^0,c
  8452  005704  0E00               	movlw	0
  8453  005706  6E0A               	movwf	pushByte@rs^0,c
  8454  005708  500E               	movf	lcdCommand@value^0,w,c
  8455  00570A  EC45  F02F         	call	_pushByte
  8456                           
  8457                           ;lcd.c: 42:  delayMili(2);
  8458  00570E  0E00               	movlw	0
  8459  005710  6E02               	movwf	(delayMili@a+1)^0,c
  8460  005712  0E02               	movlw	2
  8461  005714  6E01               	movwf	delayMili@a^0,c
  8462  005716  EC66  F02C         	call	_delayMili	;wreg free
  8463  00571A  0012               	return		;funcret
  8464  00571C                     __end_of_lcdCommand:
  8465                           	callstack 0
  8466                           
  8467 ;; *************** function _pushByte *****************
  8468 ;; Defined at:
  8469 ;;		line 31 in file "lcd.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;  value           1    wreg     unsigned char 
  8472 ;;  rs              2    9[COMRAM] int 
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;  value           1   12[COMRAM] unsigned char 
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      void 
  8477 ;; Registers used:
  8478 ;;		wreg, status,2, status,0, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8484 ;;      Params:         2       0       0       0       0       0       0
  8485 ;;      Locals:         1       0       0       0       0       0       0
  8486 ;;      Temps:          1       0       0       0       0       0       0
  8487 ;;      Totals:         4       0       0       0       0       0       0
  8488 ;;Total ram usage:        4 bytes
  8489 ;; Hardware stack levels used: 1
  8490 ;; Hardware stack levels required when called: 3
  8491 ;; This function calls:
  8492 ;;		_digitalWrite
  8493 ;;		_pulseEnablePin
  8494 ;;		_soWrite
  8495 ;; This function is called by:
  8496 ;;		_lcdCommand
  8497 ;;		_lcdChar
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           	psect	text59
  8502  005E8A                     __ptext59:
  8503                           	callstack 0
  8504  005E8A                     _pushByte:
  8505                           	callstack 25
  8506                           
  8507                           ;incstack = 0
  8508                           ;pushByte@value stored from wreg
  8509  005E8A  6E0D               	movwf	pushByte@value^0,c
  8510  005E8C                     
  8511                           ;lcd.c: 32:  soWrite(value >> 4);
  8512  005E8C  C00D  F00C         	movff	pushByte@value,??_pushByte
  8513  005E90  3A0C               	swapf	??_pushByte^0,f,c
  8514  005E92  0E0F               	movlw	15
  8515  005E94  160C               	andwf	??_pushByte^0,f,c
  8516  005E96  500C               	movf	??_pushByte^0,w,c
  8517  005E98  6E07               	movwf	soWrite@value^0,c
  8518  005E9A  6A08               	clrf	(soWrite@value+1)^0,c
  8519  005E9C  EC22  F02E         	call	_soWrite	;wreg free
  8520                           
  8521                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  8522  005EA0  0E00               	movlw	0
  8523  005EA2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8524  005EA4  0E1D               	movlw	29
  8525  005EA6  6E01               	movwf	digitalWrite@pin^0,c
  8526  005EA8  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  8527  005EAC  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  8528  005EB0  EC65  F03A         	call	_digitalWrite	;wreg free
  8529                           
  8530                           ;lcd.c: 34:  pulseEnablePin();
  8531  005EB4  EC76  F02D         	call	_pulseEnablePin	;wreg free
  8532                           
  8533                           ;lcd.c: 36:  soWrite(value & 0x0F);
  8534  005EB8  C00D  F00C         	movff	pushByte@value,??_pushByte
  8535  005EBC  0E0F               	movlw	15
  8536  005EBE  160C               	andwf	??_pushByte^0,f,c
  8537  005EC0  500C               	movf	??_pushByte^0,w,c
  8538  005EC2  6E07               	movwf	soWrite@value^0,c
  8539  005EC4  6A08               	clrf	(soWrite@value+1)^0,c
  8540  005EC6  EC22  F02E         	call	_soWrite	;wreg free
  8541                           
  8542                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  8543  005ECA  0E00               	movlw	0
  8544  005ECC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8545  005ECE  0E1D               	movlw	29
  8546  005ED0  6E01               	movwf	digitalWrite@pin^0,c
  8547  005ED2  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  8548  005ED6  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  8549  005EDA  EC65  F03A         	call	_digitalWrite	;wreg free
  8550                           
  8551                           ;lcd.c: 38:  pulseEnablePin();
  8552  005EDE  EC76  F02D         	call	_pulseEnablePin	;wreg free
  8553  005EE2  0012               	return		;funcret
  8554  005EE4                     __end_of_pushByte:
  8555                           	callstack 0
  8556                           
  8557 ;; *************** function _soWrite *****************
  8558 ;; Defined at:
  8559 ;;		line 18 in file "so.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;  value           2    6[COMRAM] int 
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;  i               1    8[COMRAM] unsigned char 
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, status,2, status,0, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8573 ;;      Params:         2       0       0       0       0       0       0
  8574 ;;      Locals:         1       0       0       0       0       0       0
  8575 ;;      Temps:          0       0       0       0       0       0       0
  8576 ;;      Totals:         3       0       0       0       0       0       0
  8577 ;;Total ram usage:        3 bytes
  8578 ;; Hardware stack levels used: 1
  8579 ;; Hardware stack levels required when called: 2
  8580 ;; This function calls:
  8581 ;;		_PulseClockData
  8582 ;;		_PulseEnClock
  8583 ;;		_digitalWrite
  8584 ;; This function is called by:
  8585 ;;		_kpDebounce
  8586 ;;		_pushNibble
  8587 ;;		_pushByte
  8588 ;;		_ssdUpdate
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text60
  8593  005C44                     __ptext60:
  8594                           	callstack 0
  8595  005C44                     _soWrite:
  8596                           	callstack 26
  8597  005C44                     
  8598                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  8599  005C44  0E00               	movlw	0
  8600  005C46  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8601  005C48  0E08               	movlw	8
  8602  005C4A  6E01               	movwf	digitalWrite@pin^0,c
  8603  005C4C  0E00               	movlw	0
  8604  005C4E  6E04               	movwf	(digitalWrite@value+1)^0,c
  8605  005C50  0E00               	movlw	0
  8606  005C52  6E03               	movwf	digitalWrite@value^0,c
  8607  005C54  EC65  F03A         	call	_digitalWrite	;wreg free
  8608  005C58                     
  8609                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  8610  005C58  0E00               	movlw	0
  8611  005C5A  6E09               	movwf	soWrite@i^0,c
  8612  005C5C                     l2936:
  8613                           
  8614                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  8615  005C5C  0E00               	movlw	0
  8616  005C5E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8617  005C60  0E1E               	movlw	30
  8618  005C62  6E01               	movwf	digitalWrite@pin^0,c
  8619  005C64  0E80               	movlw	128
  8620  005C66  1407               	andwf	soWrite@value^0,w,c
  8621  005C68  6E03               	movwf	digitalWrite@value^0,c
  8622  005C6A  6A04               	clrf	(digitalWrite@value+1)^0,c
  8623  005C6C  EC65  F03A         	call	_digitalWrite	;wreg free
  8624                           
  8625                           ;so.c: 23:   PulseClockData();
  8626  005C70  ECFB  F02B         	call	_PulseClockData	;wreg free
  8627  005C74                     
  8628                           ;so.c: 24:   value <<= 1;
  8629  005C74  90D8               	bcf	status,0,c
  8630  005C76  3607               	rlcf	soWrite@value^0,f,c
  8631  005C78  3608               	rlcf	(soWrite@value+1)^0,f,c
  8632  005C7A                     
  8633                           ;so.c: 25:  }
  8634  005C7A  2A09               	incf	soWrite@i^0,f,c
  8635  005C7C  0E07               	movlw	7
  8636  005C7E  6409               	cpfsgt	soWrite@i^0,c
  8637  005C80  EF44  F02E         	goto	u2321
  8638  005C84  EF46  F02E         	goto	u2320
  8639  005C88                     u2321:
  8640  005C88  EF2E  F02E         	goto	l2936
  8641  005C8C                     u2320:
  8642  005C8C                     
  8643                           ;so.c: 26:  PulseEnClock();
  8644  005C8C  EC10  F02C         	call	_PulseEnClock	;wreg free
  8645  005C90  0012               	return		;funcret
  8646  005C92                     __end_of_soWrite:
  8647                           	callstack 0
  8648                           
  8649 ;; *************** function _PulseEnClock *****************
  8650 ;; Defined at:
  8651 ;;		line 9 in file "so.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;		None
  8654 ;; Auto vars:     Size  Location     Type
  8655 ;;		None
  8656 ;; Return value:  Size  Location     Type
  8657 ;;                  1    wreg      void 
  8658 ;; Registers used:
  8659 ;;		wreg, status,2, status,0, cstack
  8660 ;; Tracked objects:
  8661 ;;		On entry : 0/0
  8662 ;;		On exit  : 0/0
  8663 ;;		Unchanged: 0/0
  8664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8665 ;;      Params:         0       0       0       0       0       0       0
  8666 ;;      Locals:         0       0       0       0       0       0       0
  8667 ;;      Temps:          0       0       0       0       0       0       0
  8668 ;;      Totals:         0       0       0       0       0       0       0
  8669 ;;Total ram usage:        0 bytes
  8670 ;; Hardware stack levels used: 1
  8671 ;; Hardware stack levels required when called: 1
  8672 ;; This function calls:
  8673 ;;		_digitalWrite
  8674 ;; This function is called by:
  8675 ;;		_soWrite
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           	psect	text61
  8680  005820                     __ptext61:
  8681                           	callstack 0
  8682  005820                     _PulseEnClock:
  8683                           	callstack 26
  8684  005820                     
  8685                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  8686  005820  0E00               	movlw	0
  8687  005822  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8688  005824  0E1F               	movlw	31
  8689  005826  6E01               	movwf	digitalWrite@pin^0,c
  8690  005828  0E00               	movlw	0
  8691  00582A  6E04               	movwf	(digitalWrite@value+1)^0,c
  8692  00582C  0E01               	movlw	1
  8693  00582E  6E03               	movwf	digitalWrite@value^0,c
  8694  005830  EC65  F03A         	call	_digitalWrite	;wreg free
  8695                           
  8696                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  8697  005834  0E00               	movlw	0
  8698  005836  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8699  005838  0E1F               	movlw	31
  8700  00583A  6E01               	movwf	digitalWrite@pin^0,c
  8701  00583C  0E00               	movlw	0
  8702  00583E  6E04               	movwf	(digitalWrite@value+1)^0,c
  8703  005840  0E00               	movlw	0
  8704  005842  6E03               	movwf	digitalWrite@value^0,c
  8705  005844  EC65  F03A         	call	_digitalWrite	;wreg free
  8706  005848  0012               	return		;funcret
  8707  00584A                     __end_of_PulseEnClock:
  8708                           	callstack 0
  8709                           
  8710 ;; *************** function _PulseClockData *****************
  8711 ;; Defined at:
  8712 ;;		line 14 in file "so.c"
  8713 ;; Parameters:    Size  Location     Type
  8714 ;;		None
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;		None
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  1    wreg      void 
  8719 ;; Registers used:
  8720 ;;		wreg, status,2, status,0, cstack
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8726 ;;      Params:         0       0       0       0       0       0       0
  8727 ;;      Locals:         0       0       0       0       0       0       0
  8728 ;;      Temps:          0       0       0       0       0       0       0
  8729 ;;      Totals:         0       0       0       0       0       0       0
  8730 ;;Total ram usage:        0 bytes
  8731 ;; Hardware stack levels used: 1
  8732 ;; Hardware stack levels required when called: 1
  8733 ;; This function calls:
  8734 ;;		_digitalWrite
  8735 ;; This function is called by:
  8736 ;;		_soWrite
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           	psect	text62
  8741  0057F6                     __ptext62:
  8742                           	callstack 0
  8743  0057F6                     _PulseClockData:
  8744                           	callstack 26
  8745  0057F6                     
  8746                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  8747  0057F6  0E00               	movlw	0
  8748  0057F8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8749  0057FA  0E08               	movlw	8
  8750  0057FC  6E01               	movwf	digitalWrite@pin^0,c
  8751  0057FE  0E00               	movlw	0
  8752  005800  6E04               	movwf	(digitalWrite@value+1)^0,c
  8753  005802  0E01               	movlw	1
  8754  005804  6E03               	movwf	digitalWrite@value^0,c
  8755  005806  EC65  F03A         	call	_digitalWrite	;wreg free
  8756                           
  8757                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  8758  00580A  0E00               	movlw	0
  8759  00580C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8760  00580E  0E08               	movlw	8
  8761  005810  6E01               	movwf	digitalWrite@pin^0,c
  8762  005812  0E00               	movlw	0
  8763  005814  6E04               	movwf	(digitalWrite@value+1)^0,c
  8764  005816  0E00               	movlw	0
  8765  005818  6E03               	movwf	digitalWrite@value^0,c
  8766  00581A  EC65  F03A         	call	_digitalWrite	;wreg free
  8767  00581E  0012               	return		;funcret
  8768  005820                     __end_of_PulseClockData:
  8769                           	callstack 0
  8770                           
  8771 ;; *************** function _pulseEnablePin *****************
  8772 ;; Defined at:
  8773 ;;		line 18 in file "lcd.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;		None
  8776 ;; Auto vars:     Size  Location     Type
  8777 ;;		None
  8778 ;; Return value:  Size  Location     Type
  8779 ;;                  1    wreg      void 
  8780 ;; Registers used:
  8781 ;;		wreg, status,2, status,0, cstack
  8782 ;; Tracked objects:
  8783 ;;		On entry : 0/0
  8784 ;;		On exit  : 0/0
  8785 ;;		Unchanged: 0/0
  8786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8787 ;;      Params:         0       0       0       0       0       0       0
  8788 ;;      Locals:         0       0       0       0       0       0       0
  8789 ;;      Temps:          0       0       0       0       0       0       0
  8790 ;;      Totals:         0       0       0       0       0       0       0
  8791 ;;Total ram usage:        0 bytes
  8792 ;; Hardware stack levels used: 1
  8793 ;; Hardware stack levels required when called: 1
  8794 ;; This function calls:
  8795 ;;		_delayMicro
  8796 ;;		_digitalWrite
  8797 ;; This function is called by:
  8798 ;;		_pushNibble
  8799 ;;		_pushByte
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           	psect	text63
  8804  005AEC                     __ptext63:
  8805                           	callstack 0
  8806  005AEC                     _pulseEnablePin:
  8807                           	callstack 27
  8808  005AEC                     
  8809                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  8810  005AEC  0E00               	movlw	0
  8811  005AEE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8812  005AF0  0E1C               	movlw	28
  8813  005AF2  6E01               	movwf	digitalWrite@pin^0,c
  8814  005AF4  0E00               	movlw	0
  8815  005AF6  6E04               	movwf	(digitalWrite@value+1)^0,c
  8816  005AF8  0E01               	movlw	1
  8817  005AFA  6E03               	movwf	digitalWrite@value^0,c
  8818  005AFC  EC65  F03A         	call	_digitalWrite	;wreg free
  8819  005B00                     
  8820                           ;lcd.c: 20:  delayMicro(5);
  8821  005B00  0E00               	movlw	0
  8822  005B02  6E02               	movwf	(delayMicro@a+1)^0,c
  8823  005B04  0E05               	movlw	5
  8824  005B06  6E01               	movwf	delayMicro@a^0,c
  8825  005B08  EC3A  F02B         	call	_delayMicro	;wreg free
  8826  005B0C                     
  8827                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  8828  005B0C  0E00               	movlw	0
  8829  005B0E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  8830  005B10  0E1C               	movlw	28
  8831  005B12  6E01               	movwf	digitalWrite@pin^0,c
  8832  005B14  0E00               	movlw	0
  8833  005B16  6E04               	movwf	(digitalWrite@value+1)^0,c
  8834  005B18  0E00               	movlw	0
  8835  005B1A  6E03               	movwf	digitalWrite@value^0,c
  8836  005B1C  EC65  F03A         	call	_digitalWrite	;wreg free
  8837                           
  8838                           ;lcd.c: 22:  delayMicro(5);
  8839  005B20  0E00               	movlw	0
  8840  005B22  6E02               	movwf	(delayMicro@a+1)^0,c
  8841  005B24  0E05               	movlw	5
  8842  005B26  6E01               	movwf	delayMicro@a^0,c
  8843  005B28  EC3A  F02B         	call	_delayMicro	;wreg free
  8844  005B2C  0012               	return		;funcret
  8845  005B2E                     __end_of_pulseEnablePin:
  8846                           	callstack 0
  8847                           
  8848 ;; *************** function _digitalWrite *****************
  8849 ;; Defined at:
  8850 ;;		line 14 in file "io.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;  pin             2    0[COMRAM] int 
  8853 ;;  value           2    2[COMRAM] int 
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;		None
  8856 ;; Return value:  Size  Location     Type
  8857 ;;                  1    wreg      void 
  8858 ;; Registers used:
  8859 ;;		wreg, status,2, status,0
  8860 ;; Tracked objects:
  8861 ;;		On entry : 0/0
  8862 ;;		On exit  : 0/0
  8863 ;;		Unchanged: 0/0
  8864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8865 ;;      Params:         4       0       0       0       0       0       0
  8866 ;;      Locals:         0       0       0       0       0       0       0
  8867 ;;      Temps:          2       0       0       0       0       0       0
  8868 ;;      Totals:         6       0       0       0       0       0       0
  8869 ;;Total ram usage:        6 bytes
  8870 ;; Hardware stack levels used: 1
  8871 ;; This function calls:
  8872 ;;		Nothing
  8873 ;; This function is called by:
  8874 ;;		_clear_SCL
  8875 ;;		_clear_SDA
  8876 ;;		_pulseEnablePin
  8877 ;;		_pushNibble
  8878 ;;		_pushByte
  8879 ;;		_rgbColor
  8880 ;;		_turnOn
  8881 ;;		_PulseEnClock
  8882 ;;		_PulseClockData
  8883 ;;		_soWrite
  8884 ;;		_turnOff
  8885 ;;		_ssdUpdate
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text64
  8890  0074CA                     __ptext64:
  8891                           	callstack 0
  8892  0074CA                     _digitalWrite:
  8893                           	callstack 29
  8894  0074CA                     
  8895                           ;io.c: 16:     if(pin <8){
  8896  0074CA  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  8897  0074CC  EF73  F03A         	goto	u1820
  8898  0074D0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  8899  0074D2  E107               	bnz	u1821
  8900  0074D4  0E08               	movlw	8
  8901  0074D6  5C01               	subwf	digitalWrite@pin^0,w,c
  8902  0074D8  B0D8               	btfsc	status,0,c
  8903  0074DA  EF71  F03A         	goto	u1821
  8904  0074DE  EF73  F03A         	goto	u1820
  8905  0074E2                     u1821:
  8906  0074E2  EF9D  F03A         	goto	l2814
  8907  0074E6                     u1820:
  8908  0074E6                     
  8909                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  8910  0074E6  5003               	movf	digitalWrite@value^0,w,c
  8911  0074E8  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  8912  0074EA  B4D8               	btfsc	status,2,c
  8913  0074EC  EF7A  F03A         	goto	u1831
  8914  0074F0  EF7C  F03A         	goto	u1830
  8915  0074F4                     u1831:
  8916  0074F4  EF8C  F03A         	goto	l2812
  8917  0074F8                     u1830:
  8918  0074F8  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  8919  0074FC  0E01               	movlw	1
  8920  0074FE  6E06               	movwf	(??_digitalWrite+1)^0,c
  8921  007500  2A05               	incf	??_digitalWrite^0,f,c
  8922  007502  EF85  F03A         	goto	u1844
  8923  007506                     u1845:
  8924  007506  90D8               	bcf	status,0,c
  8925  007508  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  8926  00750A                     u1844:
  8927  00750A  2E05               	decfsz	??_digitalWrite^0,f,c
  8928  00750C  EF83  F03A         	goto	u1845
  8929  007510  5006               	movf	(??_digitalWrite+1)^0,w,c
  8930  007512  1280               	iorwf	128,f,c	;volatile
  8931  007514  EF8B  F03B         	goto	l372
  8932  007518                     l2812:
  8933  007518  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  8934  00751C  0E01               	movlw	1
  8935  00751E  6E06               	movwf	(??_digitalWrite+1)^0,c
  8936  007520  2A05               	incf	??_digitalWrite^0,f,c
  8937  007522  EF95  F03A         	goto	u1854
  8938  007526                     u1855:
  8939  007526  90D8               	bcf	status,0,c
  8940  007528  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  8941  00752A                     u1854:
  8942  00752A  2E05               	decfsz	??_digitalWrite^0,f,c
  8943  00752C  EF93  F03A         	goto	u1855
  8944  007530  5006               	movf	(??_digitalWrite+1)^0,w,c
  8945  007532  0AFF               	xorlw	255
  8946  007534  1680               	andwf	128,f,c	;volatile
  8947  007536  EF8B  F03B         	goto	l372
  8948  00753A                     l2814:
  8949  00753A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  8950  00753C  EFAB  F03A         	goto	u1860
  8951  007540  5002               	movf	(digitalWrite@pin+1)^0,w,c
  8952  007542  E107               	bnz	u1861
  8953  007544  0E10               	movlw	16
  8954  007546  5C01               	subwf	digitalWrite@pin^0,w,c
  8955  007548  B0D8               	btfsc	status,0,c
  8956  00754A  EFA9  F03A         	goto	u1861
  8957  00754E  EFAB  F03A         	goto	u1860
  8958  007552                     u1861:
  8959  007552  EFD9  F03A         	goto	l2822
  8960  007556                     u1860:
  8961  007556                     
  8962                           ;io.c: 20:         pin -=8;
  8963  007556  0EF8               	movlw	248
  8964  007558  2601               	addwf	digitalWrite@pin^0,f,c
  8965  00755A  0EFF               	movlw	255
  8966  00755C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  8967                           
  8968                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  8969  00755E  5003               	movf	digitalWrite@value^0,w,c
  8970  007560  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  8971  007562  B4D8               	btfsc	status,2,c
  8972  007564  EFB6  F03A         	goto	u1871
  8973  007568  EFB8  F03A         	goto	u1870
  8974  00756C                     u1871:
  8975  00756C  EFC8  F03A         	goto	l2820
  8976  007570                     u1870:
  8977  007570  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  8978  007574  0E01               	movlw	1
  8979  007576  6E06               	movwf	(??_digitalWrite+1)^0,c
  8980  007578  2A05               	incf	??_digitalWrite^0,f,c
  8981  00757A  EFC1  F03A         	goto	u1884
  8982  00757E                     u1885:
  8983  00757E  90D8               	bcf	status,0,c
  8984  007580  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  8985  007582                     u1884:
  8986  007582  2E05               	decfsz	??_digitalWrite^0,f,c
  8987  007584  EFBF  F03A         	goto	u1885
  8988  007588  5006               	movf	(??_digitalWrite+1)^0,w,c
  8989  00758A  1281               	iorwf	129,f,c	;volatile
  8990  00758C  EF8B  F03B         	goto	l372
  8991  007590                     l2820:
  8992  007590  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  8993  007594  0E01               	movlw	1
  8994  007596  6E06               	movwf	(??_digitalWrite+1)^0,c
  8995  007598  2A05               	incf	??_digitalWrite^0,f,c
  8996  00759A  EFD1  F03A         	goto	u1894
  8997  00759E                     u1895:
  8998  00759E  90D8               	bcf	status,0,c
  8999  0075A0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  9000  0075A2                     u1894:
  9001  0075A2  2E05               	decfsz	??_digitalWrite^0,f,c
  9002  0075A4  EFCF  F03A         	goto	u1895
  9003  0075A8  5006               	movf	(??_digitalWrite+1)^0,w,c
  9004  0075AA  0AFF               	xorlw	255
  9005  0075AC  1681               	andwf	129,f,c	;volatile
  9006  0075AE  EF8B  F03B         	goto	l372
  9007  0075B2                     l2822:
  9008  0075B2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  9009  0075B4  EFE7  F03A         	goto	u1900
  9010  0075B8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  9011  0075BA  E107               	bnz	u1901
  9012  0075BC  0E18               	movlw	24
  9013  0075BE  5C01               	subwf	digitalWrite@pin^0,w,c
  9014  0075C0  B0D8               	btfsc	status,0,c
  9015  0075C2  EFE5  F03A         	goto	u1901
  9016  0075C6  EFE7  F03A         	goto	u1900
  9017  0075CA                     u1901:
  9018  0075CA  EF15  F03B         	goto	l2830
  9019  0075CE                     u1900:
  9020  0075CE                     
  9021                           ;io.c: 24:         pin -=16;
  9022  0075CE  0EF0               	movlw	240
  9023  0075D0  2601               	addwf	digitalWrite@pin^0,f,c
  9024  0075D2  0EFF               	movlw	255
  9025  0075D4  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  9026                           
  9027                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  9028  0075D6  5003               	movf	digitalWrite@value^0,w,c
  9029  0075D8  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  9030  0075DA  B4D8               	btfsc	status,2,c
  9031  0075DC  EFF2  F03A         	goto	u1911
  9032  0075E0  EFF4  F03A         	goto	u1910
  9033  0075E4                     u1911:
  9034  0075E4  EF04  F03B         	goto	l2828
  9035  0075E8                     u1910:
  9036  0075E8  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  9037  0075EC  0E01               	movlw	1
  9038  0075EE  6E06               	movwf	(??_digitalWrite+1)^0,c
  9039  0075F0  2A05               	incf	??_digitalWrite^0,f,c
  9040  0075F2  EFFD  F03A         	goto	u1924
  9041  0075F6                     u1925:
  9042  0075F6  90D8               	bcf	status,0,c
  9043  0075F8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  9044  0075FA                     u1924:
  9045  0075FA  2E05               	decfsz	??_digitalWrite^0,f,c
  9046  0075FC  EFFB  F03A         	goto	u1925
  9047  007600  5006               	movf	(??_digitalWrite+1)^0,w,c
  9048  007602  1282               	iorwf	130,f,c	;volatile
  9049  007604  EF8B  F03B         	goto	l372
  9050  007608                     l2828:
  9051  007608  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  9052  00760C  0E01               	movlw	1
  9053  00760E  6E06               	movwf	(??_digitalWrite+1)^0,c
  9054  007610  2A05               	incf	??_digitalWrite^0,f,c
  9055  007612  EF0D  F03B         	goto	u1934
  9056  007616                     u1935:
  9057  007616  90D8               	bcf	status,0,c
  9058  007618  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  9059  00761A                     u1934:
  9060  00761A  2E05               	decfsz	??_digitalWrite^0,f,c
  9061  00761C  EF0B  F03B         	goto	u1935
  9062  007620  5006               	movf	(??_digitalWrite+1)^0,w,c
  9063  007622  0AFF               	xorlw	255
  9064  007624  1682               	andwf	130,f,c	;volatile
  9065  007626  EF8B  F03B         	goto	l372
  9066  00762A                     l2830:
  9067  00762A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  9068  00762C  EF23  F03B         	goto	u1940
  9069  007630  5002               	movf	(digitalWrite@pin+1)^0,w,c
  9070  007632  E107               	bnz	u1941
  9071  007634  0E20               	movlw	32
  9072  007636  5C01               	subwf	digitalWrite@pin^0,w,c
  9073  007638  B0D8               	btfsc	status,0,c
  9074  00763A  EF21  F03B         	goto	u1941
  9075  00763E  EF23  F03B         	goto	u1940
  9076  007642                     u1941:
  9077  007642  EF51  F03B         	goto	l2838
  9078  007646                     u1940:
  9079  007646                     
  9080                           ;io.c: 28:         pin -=24;
  9081  007646  0EE8               	movlw	232
  9082  007648  2601               	addwf	digitalWrite@pin^0,f,c
  9083  00764A  0EFF               	movlw	255
  9084  00764C  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  9085                           
  9086                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  9087  00764E  5003               	movf	digitalWrite@value^0,w,c
  9088  007650  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  9089  007652  B4D8               	btfsc	status,2,c
  9090  007654  EF2E  F03B         	goto	u1951
  9091  007658  EF30  F03B         	goto	u1950
  9092  00765C                     u1951:
  9093  00765C  EF40  F03B         	goto	l2836
  9094  007660                     u1950:
  9095  007660  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  9096  007664  0E01               	movlw	1
  9097  007666  6E06               	movwf	(??_digitalWrite+1)^0,c
  9098  007668  2A05               	incf	??_digitalWrite^0,f,c
  9099  00766A  EF39  F03B         	goto	u1964
  9100  00766E                     u1965:
  9101  00766E  90D8               	bcf	status,0,c
  9102  007670  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  9103  007672                     u1964:
  9104  007672  2E05               	decfsz	??_digitalWrite^0,f,c
  9105  007674  EF37  F03B         	goto	u1965
  9106  007678  5006               	movf	(??_digitalWrite+1)^0,w,c
  9107  00767A  1283               	iorwf	131,f,c	;volatile
  9108  00767C  EF8B  F03B         	goto	l372
  9109  007680                     l2836:
  9110  007680  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  9111  007684  0E01               	movlw	1
  9112  007686  6E06               	movwf	(??_digitalWrite+1)^0,c
  9113  007688  2A05               	incf	??_digitalWrite^0,f,c
  9114  00768A  EF49  F03B         	goto	u1974
  9115  00768E                     u1975:
  9116  00768E  90D8               	bcf	status,0,c
  9117  007690  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  9118  007692                     u1974:
  9119  007692  2E05               	decfsz	??_digitalWrite^0,f,c
  9120  007694  EF47  F03B         	goto	u1975
  9121  007698  5006               	movf	(??_digitalWrite+1)^0,w,c
  9122  00769A  0AFF               	xorlw	255
  9123  00769C  1683               	andwf	131,f,c	;volatile
  9124  00769E  EF8B  F03B         	goto	l372
  9125  0076A2                     l2838:
  9126  0076A2  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  9127  0076A4  EF5F  F03B         	goto	u1980
  9128  0076A8  5002               	movf	(digitalWrite@pin+1)^0,w,c
  9129  0076AA  E107               	bnz	u1981
  9130  0076AC  0E28               	movlw	40
  9131  0076AE  5C01               	subwf	digitalWrite@pin^0,w,c
  9132  0076B0  B0D8               	btfsc	status,0,c
  9133  0076B2  EF5D  F03B         	goto	u1981
  9134  0076B6  EF5F  F03B         	goto	u1980
  9135  0076BA                     u1981:
  9136  0076BA  EF8B  F03B         	goto	l372
  9137  0076BE                     u1980:
  9138  0076BE                     
  9139                           ;io.c: 32:         pin -=32;
  9140  0076BE  0EE0               	movlw	224
  9141  0076C0  2601               	addwf	digitalWrite@pin^0,f,c
  9142  0076C2  0EFF               	movlw	255
  9143  0076C4  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  9144                           
  9145                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  9146  0076C6  5003               	movf	digitalWrite@value^0,w,c
  9147  0076C8  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  9148  0076CA  B4D8               	btfsc	status,2,c
  9149  0076CC  EF6A  F03B         	goto	u1991
  9150  0076D0  EF6C  F03B         	goto	u1990
  9151  0076D4                     u1991:
  9152  0076D4  EF7C  F03B         	goto	l2844
  9153  0076D8                     u1990:
  9154  0076D8  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  9155  0076DC  0E01               	movlw	1
  9156  0076DE  6E06               	movwf	(??_digitalWrite+1)^0,c
  9157  0076E0  2A05               	incf	??_digitalWrite^0,f,c
  9158  0076E2  EF75  F03B         	goto	u2004
  9159  0076E6                     u2005:
  9160  0076E6  90D8               	bcf	status,0,c
  9161  0076E8  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  9162  0076EA                     u2004:
  9163  0076EA  2E05               	decfsz	??_digitalWrite^0,f,c
  9164  0076EC  EF73  F03B         	goto	u2005
  9165  0076F0  5006               	movf	(??_digitalWrite+1)^0,w,c
  9166  0076F2  1284               	iorwf	132,f,c	;volatile
  9167  0076F4  EF8B  F03B         	goto	l372
  9168  0076F8                     l2844:
  9169  0076F8  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  9170  0076FC  0E01               	movlw	1
  9171  0076FE  6E06               	movwf	(??_digitalWrite+1)^0,c
  9172  007700  2A05               	incf	??_digitalWrite^0,f,c
  9173  007702  EF85  F03B         	goto	u2014
  9174  007706                     u2015:
  9175  007706  90D8               	bcf	status,0,c
  9176  007708  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  9177  00770A                     u2014:
  9178  00770A  2E05               	decfsz	??_digitalWrite^0,f,c
  9179  00770C  EF83  F03B         	goto	u2015
  9180  007710  5006               	movf	(??_digitalWrite+1)^0,w,c
  9181  007712  0AFF               	xorlw	255
  9182  007714  1684               	andwf	132,f,c	;volatile
  9183  007716                     l372:
  9184  007716  0012               	return		;funcret
  9185  007718                     __end_of_digitalWrite:
  9186                           	callstack 0
  9187                           
  9188 ;; *************** function _delayMicro *****************
  9189 ;; Defined at:
  9190 ;;		line 5 in file "lcd.c"
  9191 ;; Parameters:    Size  Location     Type
  9192 ;;  a               2    0[COMRAM] int 
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;  i               2    0        volatile int 
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  1    wreg      void 
  9197 ;; Registers used:
  9198 ;;		None
  9199 ;; Tracked objects:
  9200 ;;		On entry : 0/0
  9201 ;;		On exit  : 0/0
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9204 ;;      Params:         2       0       0       0       0       0       0
  9205 ;;      Locals:         0       0       0       0       0       0       0
  9206 ;;      Temps:          0       0       0       0       0       0       0
  9207 ;;      Totals:         2       0       0       0       0       0       0
  9208 ;;Total ram usage:        2 bytes
  9209 ;; Hardware stack levels used: 1
  9210 ;; This function calls:
  9211 ;;		Nothing
  9212 ;; This function is called by:
  9213 ;;		_pulseEnablePin
  9214 ;;		_lcdChar
  9215 ;;		_lcdInit
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text65
  9220  005674                     __ptext65:
  9221                           	callstack 0
  9222  005674                     _delayMicro:
  9223                           	callstack 27
  9224  005674  0012               	return		;funcret
  9225  005676                     __end_of_delayMicro:
  9226                           	callstack 0
  9227                           
  9228 ;; *************** function _delayMili *****************
  9229 ;; Defined at:
  9230 ;;		line 10 in file "lcd.c"
  9231 ;; Parameters:    Size  Location     Type
  9232 ;;  a               2    0[COMRAM] int 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;  i               2    3[COMRAM] volatile int 
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  1    wreg      void 
  9237 ;; Registers used:
  9238 ;;		wreg, status,2, status,0
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9244 ;;      Params:         2       0       0       0       0       0       0
  9245 ;;      Locals:         2       0       0       0       0       0       0
  9246 ;;      Temps:          1       0       0       0       0       0       0
  9247 ;;      Totals:         5       0       0       0       0       0       0
  9248 ;;Total ram usage:        5 bytes
  9249 ;; Hardware stack levels used: 1
  9250 ;; This function calls:
  9251 ;;		Nothing
  9252 ;; This function is called by:
  9253 ;;		_lcdCommand
  9254 ;;		_lcdInit
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258                           	psect	text66
  9259  0058CC                     __ptext66:
  9260                           	callstack 0
  9261  0058CC                     _delayMili:
  9262                           	callstack 28
  9263  0058CC                     
  9264                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  9265  0058CC  0E00               	movlw	0
  9266  0058CE  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  9267  0058D0  0E00               	movlw	0
  9268  0058D2  6E04               	movwf	delayMili@i^0,c	;volatile
  9269  0058D4  EF6E  F02C         	goto	l2968
  9270  0058D8                     l2966:
  9271                           
  9272                           ;lcd.c: 15:  }
  9273  0058D8  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  9274  0058DA  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  9275  0058DC                     l2968:
  9276  0058DC  5001               	movf	delayMili@a^0,w,c
  9277  0058DE  5C04               	subwf	delayMili@i^0,w,c	;volatile
  9278  0058E0  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  9279  0058E2  0A80               	xorlw	128
  9280  0058E4  6E03               	movwf	??_delayMili^0,c
  9281  0058E6  5002               	movf	(delayMili@a+1)^0,w,c
  9282  0058E8  0A80               	xorlw	128
  9283  0058EA  5803               	subwfb	??_delayMili^0,w,c
  9284  0058EC  A0D8               	btfss	status,0,c
  9285  0058EE  EF7B  F02C         	goto	u2371
  9286  0058F2  EF7D  F02C         	goto	u2370
  9287  0058F6                     u2371:
  9288  0058F6  EF6C  F02C         	goto	l2966
  9289  0058FA                     u2370:
  9290  0058FA  0012               	return		;funcret
  9291  0058FC                     __end_of_delayMili:
  9292                           	callstack 0
  9293                           
  9294 ;; *************** function _LeSerial *****************
  9295 ;; Defined at:
  9296 ;;		line 129 in file "main.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;  tempo           2   42[COMRAM] unsigned int 
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;  tmp             2   47[COMRAM] unsigned char [2]
  9301 ;;  Atual           1   46[COMRAM] unsigned char 
  9302 ;; Return value:  Size  Location     Type
  9303 ;;                  2   42[COMRAM] unsigned int 
  9304 ;; Registers used:
  9305 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9306 ;; Tracked objects:
  9307 ;;		On entry : 0/0
  9308 ;;		On exit  : 0/0
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9311 ;;      Params:         2       0       0       0       0       0       0
  9312 ;;      Locals:         3       0       0       0       0       0       0
  9313 ;;      Temps:          2       0       0       0       0       0       0
  9314 ;;      Totals:         7       0       0       0       0       0       0
  9315 ;;Total ram usage:        7 bytes
  9316 ;; Hardware stack levels used: 1
  9317 ;; Hardware stack levels required when called: 2
  9318 ;; This function calls:
  9319 ;;		___awmod
  9320 ;;		_serial_rx
  9321 ;; This function is called by:
  9322 ;;		_IMC
  9323 ;;		_Temperatura
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           	psect	text67
  9328  006316                     __ptext67:
  9329                           	callstack 0
  9330  006316                     _LeSerial:
  9331                           	callstack 27
  9332  006316                     
  9333                           ;main.c: 130:     unsigned char tmp[2],Atual;;main.c: 131:     tmp[0] = serial_rx(tempo)
      +                          ;
  9334  006316  C02B  F007         	movff	LeSerial@tempo,serial_rx@timeout
  9335  00631A  C02C  F008         	movff	LeSerial@tempo+1,serial_rx@timeout+1
  9336  00631E  EC44  F031         	call	_serial_rx	;wreg free
  9337  006322  6E30               	movwf	LeSerial@tmp^0,c
  9338                           
  9339                           ;main.c: 132:     tmp[1] = serial_rx(100);
  9340  006324  0E00               	movlw	0
  9341  006326  6E08               	movwf	(serial_rx@timeout+1)^0,c
  9342  006328  0E64               	movlw	100
  9343  00632A  6E07               	movwf	serial_rx@timeout^0,c
  9344  00632C  EC44  F031         	call	_serial_rx	;wreg free
  9345  006330  6E31               	movwf	(LeSerial@tmp+1)^0,c
  9346  006332                     
  9347                           ;main.c: 134:     Atual = (((tmp[0] - 48)%10)*10 + ((tmp[1] - 48)%10));
  9348  006332  0ED0               	movlw	208
  9349  006334  2431               	addwf	(LeSerial@tmp+1)^0,w,c
  9350  006336  6E25               	movwf	___awmod@dividend^0,c
  9351  006338  6A26               	clrf	(___awmod@dividend+1)^0,c
  9352  00633A  0EFF               	movlw	255
  9353  00633C  2226               	addwfc	(___awmod@dividend+1)^0,f,c
  9354  00633E  0E00               	movlw	0
  9355  006340  6E28               	movwf	(___awmod@divisor+1)^0,c
  9356  006342  0E0A               	movlw	10
  9357  006344  6E27               	movwf	___awmod@divisor^0,c
  9358  006346  ECD6  F031         	call	___awmod	;wreg free
  9359  00634A  C025  F02D         	movff	?___awmod,??_LeSerial
  9360  00634E  C026  F02E         	movff	?___awmod+1,??_LeSerial+1
  9361  006352  0ED0               	movlw	208
  9362  006354  2430               	addwf	LeSerial@tmp^0,w,c
  9363  006356  6E25               	movwf	___awmod@dividend^0,c
  9364  006358  6A26               	clrf	(___awmod@dividend+1)^0,c
  9365  00635A  0EFF               	movlw	255
  9366  00635C  2226               	addwfc	(___awmod@dividend+1)^0,f,c
  9367  00635E  0E00               	movlw	0
  9368  006360  6E28               	movwf	(___awmod@divisor+1)^0,c
  9369  006362  0E0A               	movlw	10
  9370  006364  6E27               	movwf	___awmod@divisor^0,c
  9371  006366  ECD6  F031         	call	___awmod	;wreg free
  9372  00636A  5025               	movf	?___awmod^0,w,c
  9373  00636C  0D0A               	mullw	10
  9374  00636E  50F3               	movf	243,w,c
  9375  006370  242D               	addwf	??_LeSerial^0,w,c
  9376  006372  6E2F               	movwf	LeSerial@Atual^0,c
  9377  006374                     
  9378                           ;main.c: 135:     if(tmp[0]!=0xa5&&tmp[1]!=0xa5)
  9379  006374  0EA5               	movlw	165
  9380  006376  1830               	xorwf	LeSerial@tmp^0,w,c
  9381  006378  B4D8               	btfsc	status,2,c
  9382  00637A  EFC1  F031         	goto	u2791
  9383  00637E  EFC3  F031         	goto	u2790
  9384  006382                     u2791:
  9385  006382  EFD1  F031         	goto	l3294
  9386  006386                     u2790:
  9387  006386  0EA5               	movlw	165
  9388  006388  1831               	xorwf	(LeSerial@tmp+1)^0,w,c
  9389  00638A  B4D8               	btfsc	status,2,c
  9390  00638C  EFCA  F031         	goto	u2801
  9391  006390  EFCC  F031         	goto	u2800
  9392  006394                     u2801:
  9393  006394  EFD1  F031         	goto	l3294
  9394  006398                     u2800:
  9395  006398                     
  9396                           ;main.c: 136:         return (int)Atual;
  9397  006398  C02F  F02B         	movff	LeSerial@Atual,?_LeSerial
  9398  00639C  6A2C               	clrf	(?_LeSerial+1)^0,c
  9399  00639E  EFD5  F031         	goto	l132
  9400  0063A2                     l3294:
  9401                           
  9402                           ;main.c: 138:         return 0;
  9403  0063A2  0E00               	movlw	0
  9404  0063A4  6E2C               	movwf	(?_LeSerial+1)^0,c
  9405  0063A6  0E00               	movlw	0
  9406  0063A8  6E2B               	movwf	?_LeSerial^0,c
  9407  0063AA                     l132:
  9408  0063AA  0012               	return		;funcret
  9409  0063AC                     __end_of_LeSerial:
  9410                           	callstack 0
  9411                           
  9412 ;; *************** function _serial_rx *****************
  9413 ;; Defined at:
  9414 ;;		line 67 in file "serial.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  timeout         2    6[COMRAM] unsigned int 
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;  to              2    8[COMRAM] unsigned int 
  9419 ;; Return value:  Size  Location     Type
  9420 ;;                  1    wreg      unsigned char 
  9421 ;; Registers used:
  9422 ;;		wreg, status,2, status,0, cstack
  9423 ;; Tracked objects:
  9424 ;;		On entry : 0/0
  9425 ;;		On exit  : 0/0
  9426 ;;		Unchanged: 0/0
  9427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9428 ;;      Params:         2       0       0       0       0       0       0
  9429 ;;      Locals:         2       0       0       0       0       0       0
  9430 ;;      Temps:          0       0       0       0       0       0       0
  9431 ;;      Totals:         4       0       0       0       0       0       0
  9432 ;;Total ram usage:        4 bytes
  9433 ;; Hardware stack levels used: 1
  9434 ;; Hardware stack levels required when called: 1
  9435 ;; This function calls:
  9436 ;;		_atraso_ms
  9437 ;; This function is called by:
  9438 ;;		_LeSerial
  9439 ;;		_LeInfo
  9440 ;; This function uses a non-reentrant model
  9441 ;;
  9442                           
  9443                           	psect	text68
  9444  006288                     __ptext68:
  9445                           	callstack 0
  9446  006288                     _serial_rx:
  9447                           	callstack 27
  9448  006288                     
  9449                           ;serial.c: 67: unsigned char serial_rx(unsigned int timeout);serial.c: 68: {;serial.c: 6
      +                          9:   unsigned int to=0;
  9450  006288  0E00               	movlw	0
  9451  00628A  6E0A               	movwf	(serial_rx@to+1)^0,c
  9452  00628C  0E00               	movlw	0
  9453  00628E  6E09               	movwf	serial_rx@to^0,c
  9454  006290                     
  9455                           ;serial.c: 71:   if(RCSTAbits.FERR || RCSTAbits.OERR)
  9456  006290  B4AB               	btfsc	171,2,c	;volatile
  9457  006292  EF4D  F031         	goto	u2501
  9458  006296  EF4F  F031         	goto	u2500
  9459  00629A                     u2501:
  9460  00629A  EF56  F031         	goto	l581
  9461  00629E                     u2500:
  9462  00629E  A2AB               	btfss	171,1,c	;volatile
  9463  0062A0  EF54  F031         	goto	u2511
  9464  0062A4  EF56  F031         	goto	u2510
  9465  0062A8                     u2511:
  9466  0062A8  EF64  F031         	goto	l3092
  9467  0062AC                     u2510:
  9468  0062AC                     l581:
  9469                           
  9470                           ;serial.c: 72:   {;serial.c: 73:       RCSTAbits.CREN=0;
  9471  0062AC  98AB               	bcf	171,4,c	;volatile
  9472                           
  9473                           ;serial.c: 74:       RCSTAbits.CREN=1;
  9474  0062AE  88AB               	bsf	171,4,c	;volatile
  9475  0062B0  EF64  F031         	goto	l3092
  9476  0062B4                     l3088:
  9477                           
  9478                           ;serial.c: 78:   {;serial.c: 79:     atraso_ms(20);
  9479  0062B4  0E00               	movlw	0
  9480  0062B6  6E02               	movwf	(atraso_ms@num+1)^0,c
  9481  0062B8  0E14               	movlw	20
  9482  0062BA  6E01               	movwf	atraso_ms@num^0,c
  9483  0062BC  ECD0  F02F         	call	_atraso_ms	;wreg free
  9484  0062C0                     
  9485                           ;serial.c: 80:     to+=20;
  9486  0062C0  0E14               	movlw	20
  9487  0062C2  2609               	addwf	serial_rx@to^0,f,c
  9488  0062C4  0E00               	movlw	0
  9489  0062C6  220A               	addwfc	(serial_rx@to+1)^0,f,c
  9490  0062C8                     l3092:
  9491                           
  9492                           ;serial.c: 77:   while(((to < timeout)||(!timeout))&&(!PIR1bits.RCIF))
  9493  0062C8  5007               	movf	serial_rx@timeout^0,w,c
  9494  0062CA  5C09               	subwf	serial_rx@to^0,w,c
  9495  0062CC  5008               	movf	(serial_rx@timeout+1)^0,w,c
  9496  0062CE  580A               	subwfb	(serial_rx@to+1)^0,w,c
  9497  0062D0  A0D8               	btfss	status,0,c
  9498  0062D2  EF6D  F031         	goto	u2521
  9499  0062D6  EF6F  F031         	goto	u2520
  9500  0062DA                     u2521:
  9501  0062DA  EF78  F031         	goto	l587
  9502  0062DE                     u2520:
  9503  0062DE  5007               	movf	serial_rx@timeout^0,w,c
  9504  0062E0  1008               	iorwf	(serial_rx@timeout+1)^0,w,c
  9505  0062E2  A4D8               	btfss	status,2,c
  9506  0062E4  EF76  F031         	goto	u2531
  9507  0062E8  EF78  F031         	goto	u2530
  9508  0062EC                     u2531:
  9509  0062EC  EF7F  F031         	goto	l588
  9510  0062F0                     u2530:
  9511  0062F0                     l587:
  9512  0062F0  AA9E               	btfss	158,5,c	;volatile
  9513  0062F2  EF7D  F031         	goto	u2541
  9514  0062F6  EF7F  F031         	goto	u2540
  9515  0062FA                     u2541:
  9516  0062FA  EF5A  F031         	goto	l3088
  9517  0062FE                     u2540:
  9518  0062FE                     l588:
  9519                           
  9520                           ;serial.c: 82:   if(PIR1bits.RCIF)
  9521  0062FE  AA9E               	btfss	158,5,c	;volatile
  9522  006300  EF84  F031         	goto	u2551
  9523  006304  EF86  F031         	goto	u2550
  9524  006308                     u2551:
  9525  006308  EF89  F031         	goto	l3102
  9526  00630C                     u2550:
  9527  00630C                     
  9528                           ;serial.c: 83:     return RCREG;
  9529  00630C  50AE               	movf	174,w,c	;volatile
  9530  00630E  EF8A  F031         	goto	l590
  9531  006312                     l3102:
  9532                           
  9533                           ;serial.c: 85:     return 0xA5;
  9534  006312  0EA5               	movlw	165
  9535  006314                     l590:
  9536  006314  0012               	return		;funcret
  9537  006316                     __end_of_serial_rx:
  9538                           	callstack 0
  9539                           
  9540 ;; *************** function _atraso_ms *****************
  9541 ;; Defined at:
  9542 ;;		line 2 in file "atraso.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;  num             2    0[COMRAM] unsigned int 
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;  i               2    2[COMRAM] int 
  9547 ;;  k               1    5[COMRAM] volatile unsigned char 
  9548 ;;  j               1    4[COMRAM] volatile unsigned char 
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  1    wreg      void 
  9551 ;; Registers used:
  9552 ;;		wreg, status,2, status,0
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9558 ;;      Params:         2       0       0       0       0       0       0
  9559 ;;      Locals:         4       0       0       0       0       0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0
  9561 ;;      Totals:         6       0       0       0       0       0       0
  9562 ;;Total ram usage:        6 bytes
  9563 ;; Hardware stack levels used: 1
  9564 ;; This function calls:
  9565 ;;		Nothing
  9566 ;; This function is called by:
  9567 ;;		_buzzer
  9568 ;;		_IMC
  9569 ;;		_Bemvindo
  9570 ;;		_Finalizando
  9571 ;;		_serial_rx
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           
  9575                           	psect	text69
  9576  005FA0                     __ptext69:
  9577                           	callstack 0
  9578  005FA0                     _atraso_ms:
  9579                           	callstack 29
  9580  005FA0                     
  9581                           ;atraso.c: 3:     volatile unsigned char j, k;;atraso.c: 4:     for (int i = 0; i < num;
      +                           i++) {
  9582  005FA0  0E00               	movlw	0
  9583  005FA2  6E04               	movwf	(atraso_ms@i+1)^0,c
  9584  005FA4  0E00               	movlw	0
  9585  005FA6  6E03               	movwf	atraso_ms@i^0,c
  9586  005FA8  EFF6  F02F         	goto	l2998
  9587  005FAC                     l2976:
  9588                           
  9589                           ;atraso.c: 5:         for (j = 0; j < 41; j++) {
  9590  005FAC  0E00               	movlw	0
  9591  005FAE  6E05               	movwf	atraso_ms@j^0,c	;volatile
  9592  005FB0                     l2978:
  9593  005FB0  0E28               	movlw	40
  9594  005FB2  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  9595  005FB4  EFDE  F02F         	goto	u2381
  9596  005FB8  EFE0  F02F         	goto	u2380
  9597  005FBC                     u2381:
  9598  005FBC  EFE2  F02F         	goto	l2982
  9599  005FC0                     u2380:
  9600  005FC0  EFF4  F02F         	goto	l2996
  9601  005FC4                     l2982:
  9602                           
  9603                           ;atraso.c: 6:             for (k = 0; k < 3; k++);
  9604  005FC4  0E00               	movlw	0
  9605  005FC6  6E06               	movwf	atraso_ms@k^0,c	;volatile
  9606  005FC8                     l2984:
  9607  005FC8  0E02               	movlw	2
  9608  005FCA  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  9609  005FCC  EFEA  F02F         	goto	u2391
  9610  005FD0  EFEC  F02F         	goto	u2390
  9611  005FD4                     u2391:
  9612  005FD4  EFEE  F02F         	goto	l2988
  9613  005FD8                     u2390:
  9614  005FD8  EFF1  F02F         	goto	l2992
  9615  005FDC                     l2988:
  9616  005FDC  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  9617  005FDE  EFE4  F02F         	goto	l2984
  9618  005FE2                     l2992:
  9619                           
  9620                           ;atraso.c: 7:         }
  9621  005FE2  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  9622  005FE4  EFD8  F02F         	goto	l2978
  9623  005FE8                     l2996:
  9624                           
  9625                           ;atraso.c: 9:     }
  9626  005FE8  4A03               	infsnz	atraso_ms@i^0,f,c
  9627  005FEA  2A04               	incf	(atraso_ms@i+1)^0,f,c
  9628  005FEC                     l2998:
  9629  005FEC  5001               	movf	atraso_ms@num^0,w,c
  9630  005FEE  5C03               	subwf	atraso_ms@i^0,w,c
  9631  005FF0  5002               	movf	(atraso_ms@num+1)^0,w,c
  9632  005FF2  5804               	subwfb	(atraso_ms@i+1)^0,w,c
  9633  005FF4  A0D8               	btfss	status,0,c
  9634  005FF6  EFFF  F02F         	goto	u2401
  9635  005FFA  EF01  F030         	goto	u2400
  9636  005FFE                     u2401:
  9637  005FFE  EFD6  F02F         	goto	l2976
  9638  006002                     u2400:
  9639  006002  0012               	return		;funcret
  9640  006004                     __end_of_atraso_ms:
  9641                           	callstack 0
  9642                           
  9643 ;; *************** function ___awmod *****************
  9644 ;; Defined at:
  9645 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;  dividend        2   36[COMRAM] int 
  9648 ;;  divisor         2   38[COMRAM] int 
  9649 ;; Auto vars:     Size  Location     Type
  9650 ;;  sign            1   41[COMRAM] unsigned char 
  9651 ;;  counter         1   40[COMRAM] unsigned char 
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  2   36[COMRAM] int 
  9654 ;; Registers used:
  9655 ;;		wreg, status,2, status,0
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9661 ;;      Params:         4       0       0       0       0       0       0
  9662 ;;      Locals:         2       0       0       0       0       0       0
  9663 ;;      Temps:          0       0       0       0       0       0       0
  9664 ;;      Totals:         6       0       0       0       0       0       0
  9665 ;;Total ram usage:        6 bytes
  9666 ;; Hardware stack levels used: 1
  9667 ;; This function calls:
  9668 ;;		Nothing
  9669 ;; This function is called by:
  9670 ;;		_LeSerial
  9671 ;;		_data
  9672 ;;		_Cronometro
  9673 ;;		_Telas
  9674 ;;		_dec2bcd
  9675 ;;		_lcdNumber
  9676 ;; This function uses a non-reentrant model
  9677 ;;
  9678                           
  9679                           	psect	text70
  9680  0063AC                     __ptext70:
  9681                           	callstack 0
  9682  0063AC                     ___awmod:
  9683                           	callstack 28
  9684  0063AC  0E00               	movlw	0
  9685  0063AE  6E2A               	movwf	___awmod@sign^0,c
  9686  0063B0  BE26               	btfsc	(___awmod@dividend+1)^0,7,c
  9687  0063B2  EFDF  F031         	goto	u2690
  9688  0063B6  EFDD  F031         	goto	u2691
  9689  0063BA                     u2691:
  9690  0063BA  EFE5  F031         	goto	l3212
  9691  0063BE                     u2690:
  9692  0063BE  6C25               	negf	___awmod@dividend^0,c
  9693  0063C0  1E26               	comf	(___awmod@dividend+1)^0,f,c
  9694  0063C2  B0D8               	btfsc	status,0,c
  9695  0063C4  2A26               	incf	(___awmod@dividend+1)^0,f,c
  9696  0063C6  0E01               	movlw	1
  9697  0063C8  6E2A               	movwf	___awmod@sign^0,c
  9698  0063CA                     l3212:
  9699  0063CA  BE28               	btfsc	(___awmod@divisor+1)^0,7,c
  9700  0063CC  EFEC  F031         	goto	u2700
  9701  0063D0  EFEA  F031         	goto	u2701
  9702  0063D4                     u2701:
  9703  0063D4  EFF0  F031         	goto	l3216
  9704  0063D8                     u2700:
  9705  0063D8  6C27               	negf	___awmod@divisor^0,c
  9706  0063DA  1E28               	comf	(___awmod@divisor+1)^0,f,c
  9707  0063DC  B0D8               	btfsc	status,0,c
  9708  0063DE  2A28               	incf	(___awmod@divisor+1)^0,f,c
  9709  0063E0                     l3216:
  9710  0063E0  5027               	movf	___awmod@divisor^0,w,c
  9711  0063E2  1028               	iorwf	(___awmod@divisor+1)^0,w,c
  9712  0063E4  B4D8               	btfsc	status,2,c
  9713  0063E6  EFF7  F031         	goto	u2711
  9714  0063EA  EFF9  F031         	goto	u2710
  9715  0063EE                     u2711:
  9716  0063EE  EF1D  F032         	goto	l3232
  9717  0063F2                     u2710:
  9718  0063F2  0E01               	movlw	1
  9719  0063F4  6E29               	movwf	___awmod@counter^0,c
  9720  0063F6  EF01  F032         	goto	l3222
  9721  0063FA                     l3220:
  9722  0063FA  90D8               	bcf	status,0,c
  9723  0063FC  3627               	rlcf	___awmod@divisor^0,f,c
  9724  0063FE  3628               	rlcf	(___awmod@divisor+1)^0,f,c
  9725  006400  2A29               	incf	___awmod@counter^0,f,c
  9726  006402                     l3222:
  9727  006402  AE28               	btfss	(___awmod@divisor+1)^0,7,c
  9728  006404  EF06  F032         	goto	u2721
  9729  006408  EF08  F032         	goto	u2720
  9730  00640C                     u2721:
  9731  00640C  EFFD  F031         	goto	l3220
  9732  006410                     u2720:
  9733  006410                     l3224:
  9734  006410  5027               	movf	___awmod@divisor^0,w,c
  9735  006412  5C25               	subwf	___awmod@dividend^0,w,c
  9736  006414  5028               	movf	(___awmod@divisor+1)^0,w,c
  9737  006416  5826               	subwfb	(___awmod@dividend+1)^0,w,c
  9738  006418  A0D8               	btfss	status,0,c
  9739  00641A  EF11  F032         	goto	u2731
  9740  00641E  EF13  F032         	goto	u2730
  9741  006422                     u2731:
  9742  006422  EF17  F032         	goto	l3228
  9743  006426                     u2730:
  9744  006426  5027               	movf	___awmod@divisor^0,w,c
  9745  006428  5E25               	subwf	___awmod@dividend^0,f,c
  9746  00642A  5028               	movf	(___awmod@divisor+1)^0,w,c
  9747  00642C  5A26               	subwfb	(___awmod@dividend+1)^0,f,c
  9748  00642E                     l3228:
  9749  00642E  90D8               	bcf	status,0,c
  9750  006430  3228               	rrcf	(___awmod@divisor+1)^0,f,c
  9751  006432  3227               	rrcf	___awmod@divisor^0,f,c
  9752  006434  2E29               	decfsz	___awmod@counter^0,f,c
  9753  006436  EF08  F032         	goto	l3224
  9754  00643A                     l3232:
  9755  00643A  502A               	movf	___awmod@sign^0,w,c
  9756  00643C  B4D8               	btfsc	status,2,c
  9757  00643E  EF23  F032         	goto	u2741
  9758  006442  EF25  F032         	goto	u2740
  9759  006446                     u2741:
  9760  006446  EF29  F032         	goto	l3236
  9761  00644A                     u2740:
  9762  00644A  6C25               	negf	___awmod@dividend^0,c
  9763  00644C  1E26               	comf	(___awmod@dividend+1)^0,f,c
  9764  00644E  B0D8               	btfsc	status,0,c
  9765  006450  2A26               	incf	(___awmod@dividend+1)^0,f,c
  9766  006452                     l3236:
  9767  006452  C025  F025         	movff	___awmod@dividend,?___awmod
  9768  006456  C026  F026         	movff	___awmod@dividend+1,?___awmod+1
  9769  00645A  0012               	return		;funcret
  9770  00645C                     __end_of___awmod:
  9771                           	callstack 0
  9772                           
  9773                           	psect	rparam
  9774  0000                     
  9775                           	psect	idloc
  9776                           
  9777                           ;Config register IDLOC0 @ 0x200000
  9778                           ;	unspecified, using default values
  9779  200000                     	org	2097152
  9780  200000  FF                 	db	255
  9781                           
  9782                           ;Config register IDLOC1 @ 0x200001
  9783                           ;	unspecified, using default values
  9784  200001                     	org	2097153
  9785  200001  FF                 	db	255
  9786                           
  9787                           ;Config register IDLOC2 @ 0x200002
  9788                           ;	unspecified, using default values
  9789  200002                     	org	2097154
  9790  200002  FF                 	db	255
  9791                           
  9792                           ;Config register IDLOC3 @ 0x200003
  9793                           ;	unspecified, using default values
  9794  200003                     	org	2097155
  9795  200003  FF                 	db	255
  9796                           
  9797                           ;Config register IDLOC4 @ 0x200004
  9798                           ;	unspecified, using default values
  9799  200004                     	org	2097156
  9800  200004  FF                 	db	255
  9801                           
  9802                           ;Config register IDLOC5 @ 0x200005
  9803                           ;	unspecified, using default values
  9804  200005                     	org	2097157
  9805  200005  FF                 	db	255
  9806                           
  9807                           ;Config register IDLOC6 @ 0x200006
  9808                           ;	unspecified, using default values
  9809  200006                     	org	2097158
  9810  200006  FF                 	db	255
  9811                           
  9812                           ;Config register IDLOC7 @ 0x200007
  9813                           ;	unspecified, using default values
  9814  200007                     	org	2097159
  9815  200007  FF                 	db	255
  9816                           
  9817                           	psect	config
  9818                           
  9819                           ; Padding undefined space
  9820  300000                     	org	3145728
  9821  300000  FF                 	db	255
  9822                           
  9823                           ;Config register CONFIG1H @ 0x300001
  9824                           ;	unspecified, using default values
  9825                           ;	Oscillator Selection bits
  9826                           ;	OSC = 0x7, unprogrammed default
  9827                           ;	Fail-Safe Clock Monitor Enable bit
  9828                           ;	FCMEN = 0x0, unprogrammed default
  9829                           ;	Internal/External Oscillator Switchover bit
  9830                           ;	IESO = 0x0, unprogrammed default
  9831  300001                     	org	3145729
  9832  300001  07                 	db	7
  9833                           
  9834                           ;Config register CONFIG2L @ 0x300002
  9835                           ;	unspecified, using default values
  9836                           ;	Power-up Timer Enable bit
  9837                           ;	PWRT = 0x1, unprogrammed default
  9838                           ;	Brown-out Reset Enable bits
  9839                           ;	BOREN = 0x3, unprogrammed default
  9840                           ;	Brown Out Reset Voltage bits
  9841                           ;	BORV = 0x3, unprogrammed default
  9842  300002                     	org	3145730
  9843  300002  1F                 	db	31
  9844                           
  9845                           ;Config register CONFIG2H @ 0x300003
  9846                           ;	unspecified, using default values
  9847                           ;	Watchdog Timer Enable bit
  9848                           ;	WDT = 0x1, unprogrammed default
  9849                           ;	Watchdog Timer Postscale Select bits
  9850                           ;	WDTPS = 0xF, unprogrammed default
  9851  300003                     	org	3145731
  9852  300003  1F                 	db	31
  9853                           
  9854                           ; Padding undefined space
  9855  300004                     	org	3145732
  9856  300004  FF                 	db	255
  9857                           
  9858                           ;Config register CONFIG3H @ 0x300005
  9859                           ;	unspecified, using default values
  9860                           ;	CCP2 MUX bit
  9861                           ;	CCP2MX = 0x1, unprogrammed default
  9862                           ;	PORTB A/D Enable bit
  9863                           ;	PBADEN = 0x1, unprogrammed default
  9864                           ;	Low-Power Timer1 Oscillator Enable bit
  9865                           ;	LPT1OSC = 0x0, unprogrammed default
  9866                           ;	MCLR Pin Enable bit
  9867                           ;	MCLRE = 0x1, unprogrammed default
  9868  300005                     	org	3145733
  9869  300005  83                 	db	131
  9870                           
  9871                           ;Config register CONFIG4L @ 0x300006
  9872                           ;	unspecified, using default values
  9873                           ;	Stack Full/Underflow Reset Enable bit
  9874                           ;	STVREN = 0x1, unprogrammed default
  9875                           ;	Single-Supply ICSP Enable bit
  9876                           ;	LVP = 0x1, unprogrammed default
  9877                           ;	Extended Instruction Set Enable bit
  9878                           ;	XINST = 0x0, unprogrammed default
  9879                           ;	Background Debugger Enable bit
  9880                           ;	DEBUG = 0x1, unprogrammed default
  9881  300006                     	org	3145734
  9882  300006  85                 	db	133
  9883                           
  9884                           ; Padding undefined space
  9885  300007                     	org	3145735
  9886  300007  FF                 	db	255
  9887                           
  9888                           ;Config register CONFIG5L @ 0x300008
  9889                           ;	unspecified, using default values
  9890                           ;	Code Protection bit
  9891                           ;	CP0 = 0x1, unprogrammed default
  9892                           ;	Code Protection bit
  9893                           ;	CP1 = 0x1, unprogrammed default
  9894                           ;	Code Protection bit
  9895                           ;	CP2 = 0x1, unprogrammed default
  9896                           ;	Code Protection bit
  9897                           ;	CP3 = 0x1, unprogrammed default
  9898  300008                     	org	3145736
  9899  300008  0F                 	db	15
  9900                           
  9901                           ;Config register CONFIG5H @ 0x300009
  9902                           ;	unspecified, using default values
  9903                           ;	Boot Block Code Protection bit
  9904                           ;	CPB = 0x1, unprogrammed default
  9905                           ;	Data EEPROM Code Protection bit
  9906                           ;	CPD = 0x1, unprogrammed default
  9907  300009                     	org	3145737
  9908  300009  C0                 	db	192
  9909                           
  9910                           ;Config register CONFIG6L @ 0x30000A
  9911                           ;	unspecified, using default values
  9912                           ;	Write Protection bit
  9913                           ;	WRT0 = 0x1, unprogrammed default
  9914                           ;	Write Protection bit
  9915                           ;	WRT1 = 0x1, unprogrammed default
  9916                           ;	Write Protection bit
  9917                           ;	WRT2 = 0x1, unprogrammed default
  9918                           ;	Write Protection bit
  9919                           ;	WRT3 = 0x1, unprogrammed default
  9920  30000A                     	org	3145738
  9921  30000A  0F                 	db	15
  9922                           
  9923                           ;Config register CONFIG6H @ 0x30000B
  9924                           ;	unspecified, using default values
  9925                           ;	Configuration Register Write Protection bit
  9926                           ;	WRTC = 0x1, unprogrammed default
  9927                           ;	Boot Block Write Protection bit
  9928                           ;	WRTB = 0x1, unprogrammed default
  9929                           ;	Data EEPROM Write Protection bit
  9930                           ;	WRTD = 0x1, unprogrammed default
  9931  30000B                     	org	3145739
  9932  30000B  E0                 	db	224
  9933                           
  9934                           ;Config register CONFIG7L @ 0x30000C
  9935                           ;	unspecified, using default values
  9936                           ;	Table Read Protection bit
  9937                           ;	EBTR0 = 0x1, unprogrammed default
  9938                           ;	Table Read Protection bit
  9939                           ;	EBTR1 = 0x1, unprogrammed default
  9940                           ;	Table Read Protection bit
  9941                           ;	EBTR2 = 0x1, unprogrammed default
  9942                           ;	Table Read Protection bit
  9943                           ;	EBTR3 = 0x1, unprogrammed default
  9944  30000C                     	org	3145740
  9945  30000C  0F                 	db	15
  9946                           
  9947                           ;Config register CONFIG7H @ 0x30000D
  9948                           ;	unspecified, using default values
  9949                           ;	Boot Block Table Read Protection bit
  9950                           ;	EBTRB = 0x1, unprogrammed default
  9951  30000D                     	org	3145741
  9952  30000D  40                 	db	64
  9953                           tosu	equ	0xFFF
  9954                           tosh	equ	0xFFE
  9955                           tosl	equ	0xFFD
  9956                           stkptr	equ	0xFFC
  9957                           pclatu	equ	0xFFB
  9958                           pclath	equ	0xFFA
  9959                           pcl	equ	0xFF9
  9960                           tblptru	equ	0xFF8
  9961                           tblptrh	equ	0xFF7
  9962                           tblptrl	equ	0xFF6
  9963                           tablat	equ	0xFF5
  9964                           prodh	equ	0xFF4
  9965                           prodl	equ	0xFF3
  9966                           indf0	equ	0xFEF
  9967                           postinc0	equ	0xFEE
  9968                           postdec0	equ	0xFED
  9969                           preinc0	equ	0xFEC
  9970                           plusw0	equ	0xFEB
  9971                           fsr0h	equ	0xFEA
  9972                           fsr0l	equ	0xFE9
  9973                           wreg	equ	0xFE8
  9974                           indf1	equ	0xFE7
  9975                           postinc1	equ	0xFE6
  9976                           postdec1	equ	0xFE5
  9977                           preinc1	equ	0xFE4
  9978                           plusw1	equ	0xFE3
  9979                           fsr1h	equ	0xFE2
  9980                           fsr1l	equ	0xFE1
  9981                           bsr	equ	0xFE0
  9982                           indf2	equ	0xFDF
  9983                           postinc2	equ	0xFDE
  9984                           postdec2	equ	0xFDD
  9985                           preinc2	equ	0xFDC
  9986                           plusw2	equ	0xFDB
  9987                           fsr2h	equ	0xFDA
  9988                           fsr2l	equ	0xFD9
  9989                           status	equ	0xFD8

Data Sizes:
    Strings     506
    Constant    63
    Data        53
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     69     123
    BANK0           128      0      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    serial_tx_str@val	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_35(CODE[32]), STR_33(CODE[17]), STR_16(CODE[16]), 

    lcdString@msg	PTR unsigned char  size(2) Largest target is 25
		 -> STR_38(CODE[14]), STR_37(CODE[17]), STR_36(CODE[17]), STR_34(CODE[17]), 
		 -> STR_32(CODE[15]), STR_31(CODE[16]), STR_30(CODE[16]), STR_29(CODE[17]), 
		 -> STR_28(CODE[16]), STR_27(CODE[4]), STR_26(CODE[6]), STR_25(CODE[7]), 
		 -> STR_24(CODE[17]), STR_23(CODE[4]), STR_22(CODE[3]), STR_21(CODE[3]), 
		 -> STR_20(CODE[2]), STR_19(CODE[16]), STR_18(CODE[16]), STR_17(CODE[17]), 
		 -> STR_15(CODE[15]), STR_14(CODE[11]), STR_13(CODE[12]), STR_12(CODE[10]), 
		 -> STR_11(CODE[12]), STR_10(CODE[11]), STR_9(CODE[12]), STR_8(CODE[12]), 
		 -> STR_7(CODE[11]), STR_6(CODE[17]), STR_5(CODE[25]), STR_4(CODE[20]), 
		 -> STR_3(CODE[18]), STR_2(CODE[25]), STR_1(CODE[24]), 

    LeInfo@palavra	PTR PTR unsigned char  size(2) Largest target is 16
		 -> matricula(COMRAM[16]), nome(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_LogoUnifei
    _turnOn->_digitalWrite
    _rgbInit->_pinMode
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _adcInit->_pinMode
    _Temperatura->_LeSerial
    _Telas->_data
    _volume->_lcdChar
    _radios->_lcdString
    _musicas->_lcdString
    _data->___awmod
    _dsReadData->_i2cReadByte
    _i2cWriteByte->_i2c_read_bit
    _i2cWriteByte->_i2c_write_bit
    _i2cReadByte->_i2c_read_bit
    _i2cReadByte->_i2c_write_bit
    _clear_SDA->_digitalWrite
    _clear_SDA->_pinMode
    _read_SDA->_pinMode
    _read_SCL->_pinMode
    _clear_SCL->_digitalWrite
    _clear_SCL->_pinMode
    _bcd2dec->___wmul
    ___lwmod->___lwdiv
    _Cronometro->___awmod
    ___awdiv->_dsReadData
    _LogoUnifei->_lcdChar
    _LogoUnifei->_lcdCommand
    _Finalizando->_buzzer
    _buzzer->_pwmSet
    _pwmSet->___wmul
    ___wmul->___awdiv
    _Bemvindo->_IMC
    _LeInfo->_lcdPosition
    _IMC->_LeSerial
    _serial_tx_str->_serial_tx
    _rgbColor->_digitalWrite
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _Limpa->_lcdPosition
    _lcdPosition->_lcdCommand
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _pulseEnablePin->_digitalWrite
    _LeSerial->___awmod
    _serial_rx->_atraso_ms
    ___awmod->_bcd2dec

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0 1219348
                                             63 COMRAM     6     6      0
                           _Bemvindo
                        _Finalizando
                         _LogoUnifei
                              _Telas
                        _Temperatura
                            _adcInit
                             _buzzer
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdInit
                            _pwmInit
                            _rgbInit
                        _serial_init
                          _timerInit
                         _timerReset
                          _timerWait
                             _turnOn
 ---------------------------------------------------------------------------------
 (1) _turnOn                                               2     0      2    5602
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rgbInit                                              0     0      0    3936
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   66428
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   28781
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    7872
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3936
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   17769
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    3936
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _Temperatura                                          1     1      0    5039
                                             49 COMRAM     1     1      0
                           _LeSerial
 ---------------------------------------------------------------------------------
 (1) _Telas                                                4     4      0  558911
                                             52 COMRAM     4     4      0
                         _Cronometro
                            ___awdiv
                            ___awmod
                            _adcRead
                               _data
                            _lcdChar
                        _lcdPosition
                          _lcdString
                            _musicas
                             _radios
                             _volume
 ---------------------------------------------------------------------------------
 (2) _volume                                               7     7      0   29165
                                             14 COMRAM     7     7      0
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _radios                                               3     3      0   31847
                                             20 COMRAM     3     3      0
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _musicas                                              3     3      0   31847
                                             20 COMRAM     3     3      0
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _data                                                10    10      0  265666
                                             42 COMRAM    10    10      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _bcd2dec
                         _dsReadData
                            _lcdChar
                        _lcdPosition
                          _lcdString
 ---------------------------------------------------------------------------------
 (3) _dsReadData                                           5     3      2  158811
                                             13 COMRAM     5     3      2
                        _i2cReadByte
                       _i2cWriteByte
 ---------------------------------------------------------------------------------
 (4) _i2cWriteByte                                         5     3      2   93155
                                              7 COMRAM     4     2      2
                       _i2c_read_bit
                          _i2c_start
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (5) _i2c_start                                            0     0      0   27712
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (4) _i2cReadByte                                          6     5      1   64623
                                              7 COMRAM     6     5      1
                       _i2c_read_bit
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (5) _i2c_write_bit                                        1     1      0   27756
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (5) _i2c_stop                                             0     0      0   18316
                          _I2C_delay
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (6) _clear_SDA                                            0     0      0    9396
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (5) _i2c_read_bit                                         1     1      0   18339
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (6) _read_SDA                                             0     0      0    4460
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (6) _read_SCL                                             0     0      0    4460
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _clear_SCL                                            0     0      0    9396
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    3936
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _I2C_delay                                            4     4      0       0
 ---------------------------------------------------------------------------------
 (3) _bcd2dec                                              4     2      2    4503
                                             32 COMRAM     4     2      2
                            ___awdiv
                             ___wmul
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _adcRead                                              4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _Cronometro                                           1     1      0  100076
                                             42 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
                            _lcdChar
                        _lcdPosition
                          _lcdString
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    2732
                                             18 COMRAM     8     4      4
                            _adcRead (ARG)
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (1) _LogoUnifei                                          49    49      0   58667
                                             14 COMRAM    49    49      0
                            _lcdChar
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _Finalizando                                          0     0      0  158667
                              _Limpa
                          _atraso_ms
                             _buzzer
                         _lcdCommand
                        _lcdPosition
                          _lcdString
 ---------------------------------------------------------------------------------
 (1) _buzzer                                               2     0      2    2444
                                             37 COMRAM     2     0      2
                          _atraso_ms
                             _pwmSet
 ---------------------------------------------------------------------------------
 (2) _pwmSet                                               5     5      0    1524
                                             32 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     815
                                             26 COMRAM     6     2      4
                            ___awdiv (ARG)
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Bemvindo                                             1     1      0  329084
                                _IMC
                             _LeInfo
                              _Limpa
                          _atraso_ms
                        _lcdPosition
                          _lcdString
                      _serial_tx_str
 ---------------------------------------------------------------------------------
 (2) _LeInfo                                               4     2      2   63179
                                             18 COMRAM     4     2      2
                            _lcdChar
                        _lcdPosition
                          _serial_rx
                          _serial_tx
 ---------------------------------------------------------------------------------
 (2) _IMC                                                  2     2      0  138393
                                             49 COMRAM     2     2      0
                           _LeSerial
                              _Limpa
                          _atraso_ms
                        _lcdPosition
                          _lcdString
                           _rgbColor
                      _serial_tx_str
 ---------------------------------------------------------------------------------
 (2) _serial_tx_str                                        5     3      2     333
                                              1 COMRAM     5     3      2
                          _serial_tx
 ---------------------------------------------------------------------------------
 (3) _serial_tx                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _rgbColor                                             2     0      2    5754
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _lcdString                                            6     4      2   31825
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   29075
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) _Limpa                                                0     0      0   61826
                         _lcdCommand
                        _lcdPosition
 ---------------------------------------------------------------------------------
 (2) _lcdPosition                                          4     0      4   32781
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   29045
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   28673
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) _soWrite                                              3     1      2   17133
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _PulseEnClock                                         0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _PulseClockData                                       0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _pulseEnablePin                                       0     0      0    5840
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    5460
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _LeSerial                                             7     5      2    4994
                                             42 COMRAM     7     5      2
                            ___awmod
                          _serial_rx
 ---------------------------------------------------------------------------------
 (3) _serial_rx                                            4     2      2    1042
                                              6 COMRAM     4     2      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (2) _atraso_ms                                            6     4      2     746
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    3640
                                             36 COMRAM     6     2      4
                            ___awdiv (ARG)
                            _bcd2dec (ARG)
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Bemvindo
     _IMC
       _LeSerial
         ___awmod
           ___awdiv (ARG)
             _adcRead (ARG)
             _dsReadData (ARG)
               _i2cReadByte
                 _i2c_read_bit
                   _I2C_delay
                   _clear_SCL
                     _digitalWrite
                     _pinMode
                   _read_SCL
                     _digitalRead
                     _pinMode
                   _read_SDA
                     _digitalRead
                     _pinMode
                 _i2c_stop
                   _I2C_delay
                   _clear_SDA
                     _digitalWrite
                     _pinMode
                   _read_SCL
                   _read_SDA
                 _i2c_write_bit
                   _I2C_delay
                   _clear_SCL
                   _clear_SDA
                   _read_SCL
                   _read_SDA
               _i2cWriteByte
                 _i2c_read_bit
                 _i2c_start
                   _I2C_delay
                   _clear_SCL
                   _clear_SDA
                   _read_SCL
                   _read_SDA
                 _i2c_stop
                 _i2c_write_bit
           _bcd2dec (ARG)
             ___awdiv
             ___wmul
               ___awdiv (ARG)
               _dsReadData (ARG)
             _dsReadData (ARG)
           _dsReadData (ARG)
         _serial_rx
           _atraso_ms
       _Limpa
         _lcdCommand
           _delayMili
           _pushByte
             _digitalWrite
             _pulseEnablePin
               _delayMicro
               _digitalWrite
             _soWrite
               _PulseClockData
                 _digitalWrite
               _PulseEnClock
                 _digitalWrite
               _digitalWrite
         _lcdPosition
           _lcdCommand
       _atraso_ms
       _lcdPosition
       _lcdString
         _lcdChar
           _delayMicro
           _pushByte
       _rgbColor
         _digitalWrite
       _serial_tx_str
         _serial_tx
     _LeInfo
       _lcdChar
       _lcdPosition
       _serial_rx
       _serial_tx
     _Limpa
     _atraso_ms
     _lcdPosition
     _lcdString
     _serial_tx_str
   _Finalizando
     _Limpa
     _atraso_ms
     _buzzer
       _atraso_ms
       _pwmSet
         ___lwdiv
         ___wmul
     _lcdCommand
     _lcdPosition
     _lcdString
   _LogoUnifei
     _lcdChar
     _lcdCommand
   _Telas
     _Cronometro
       ___awdiv
       ___awmod
       _lcdChar
       _lcdPosition
       _lcdString
     ___awdiv
     ___awmod
     _adcRead
     _data
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _bcd2dec
       _dsReadData
       _lcdChar
       _lcdPosition
       _lcdString
     _lcdChar
     _lcdPosition
     _lcdString
     _musicas
       _lcdString
     _radios
       _lcdString
     _volume
       _lcdChar
   _Temperatura
     _LeSerial
   _adcInit
     _pinMode
   _buzzer
   _kpDebounce
     _digitalRead
     _soWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _pwmInit
     _pwmFrequency
       ___aldiv
   _rgbInit
     _pinMode
   _serial_init
   _timerInit
   _timerReset
   _timerWait
   _turnOn
     _digitalWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      30       5       37.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     45      7B       1       96.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AB      15        0.0%
DATA                 0      0      AB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 06:41:29 2021

         _pulseEnablePin 5AEC             lcdString@msg 000F            data@TempAtual 0031  
                     l85 65BC                       l98 6816             ___awdiv@sign 0018  
     __size_of_I2C_delay 0002                       _v0 004F                       _v1 004E  
                     _v2 004D                       _v3 004C      ___wmul@multiplicand 001D  
          ??_i2cReadByte 0009   __size_of_i2c_write_bit 0058    i2cWriteByte@send_stop 0008  
         i2cReadByte@bit 000B                      l121 56E2                      l115 6C72  
                    l203 7402                      l132 63AA                      l140 6212  
                    l118 59C4                      l230 5D06                      l302 58CA  
                    l311 5E88                      l152 6B4A                      l232 5D14  
                    l128 5F3E                      l233 5D30                      l162 6A30  
                    l330 5D84                      l226 5C42                      l324 5F9E  
                    l500 6670                      l181 7080                      l317 595C  
                    l261 5BFA                      l165 70BC                      l406 7964  
                    l158 7DC2                      l174 72A4                      l423 568E  
                    l184 6066                      l601 5848                      l513 619E  
                    l249 5B6E                      l273 5676                      l282 5872  
                    l178 57F4                      l443 6D90                      l372 7716  
                    l604 581E                      l532 650A                      l276 59FC  
                    l516 57CC                      l381 6F0E                      l285 589C  
                    l445 6DA8                      l279 5A34                      l295 5BB4  
                    l471 57A6                      l519 56FC                      l376 6F12  
                    l448 598E                      l465 58FA                      l609 5C90  
                    l377 6F0E                      l474 5EE2                      l482 5A6E  
                    l570 56C8                      l538 6132                      l459 5674  
                    l491 5DDA                      l547 5AEA                      l468 5B2C  
                    l564 56B2                      l581 62AC                      l477 571A  
                    l485 5738                      l590 6314                      l567 56BA  
                    l663 5690                      l576 5CE0                      l672 5684  
                    l666 569E                      l587 62F0                      l692 6002  
                    l588 62FE                      l669 575A                      l926 6734  
                    l598 5AAC                      l774 6922                      l695 5780  
                    l939 645A                      _IMC 6A32                      _PR2 000FCB  
                    u750 56C8                      u751 56C4                      _som 0054  
           ___awmod@sign 002A                      wreg 000FE8         i2c_write_bit@bit 0007  
          ?_i2cWriteByte 0008   i2cWriteByte@send_start 000A                     ?_IMC 0001  
        i2cReadByte@nack 000A          i2cReadByte@byte 000D                     l1203 60CA  
                   l3000 5B70                     l3002 5B80                     l3010 5BA0  
                   l3020 589E                     l3012 5BA4                     l3004 5B84  
                   l3102 6312                     l3030 58C2                     l3022 58A2  
                   l3014 5BA8                     l3006 5B88                     l3110 5F56  
                   l3200 672C                     l3032 58C6                     l3024 58A6  
                   l3040 5E50                     l3016 5BAC                     l3008 5B9C  
                   l3120 5F74                     l4000 736A                     l1193 6286  
                   l3210 63C6                     l1186 627E                     l3026 58BA  
                   l3050 5E80                     l3042 5E54                     l3034 5E34  
                   l3018 5BB0                     l3122 5F76                     l3106 5F42  
                   l4010 739E                     l4002 737A                     l3220 63FA  
                   l3212 63CA                     l3204 63AC                     l3300 5C9A  
                   l1196 60C2                     l3060 5948                     l3028 58BE  
                   l3052 5E84                     l3044 5E68                     l3036 5E44  
                   l3140 5D4E                     l3132 5D34                     l3124 5F86  
                   l3116 5F5A                     l3108 5F52                     l4020 73C4  
                   l4012 73A0                     l4004 737C                     l3230 6434  
                   l3222 6402                     l3214 63D8                     l3206 63B0  
                   l3070 571E                     l3310 6482                     l3302 5CB6  
                   l3062 594E                     l3054 592C                     l3046 5E78  
                   l3038 5E4C                     l3150 5D82                     l3142 5D52  
                   l3126 5F8A                     l3118 5F70                     l4030 73FA  
                   l4022 73C8                     l4014 73A4                     l4006 7380  
                   l3224 6410                     l3232 643A                     l3216 63E0  
                   l3208 63BE                     l3080 5A64                     l3072 572C  
                   l3320 64DE                     l3312 6496                     l3304 5CB8  
                   l3240 6214                     l3160 6672                     l3064 5952  
                   l3056 5930                     l3048 5E7C                     l3144 5D68  
                   l3128 5F9A                     l3400 6532                     l4040 7440  
                   l4032 7406                     l4024 73D6                     l4016 73B2  
                   l4008 738E                     l3234 644A                     l3226 6426  
                   l3218 63F2                     l3090 62C0                     l3082 6288  
                   l3074 5A36                     l3322 64F6                     l3314 64A4  
                   l3306 645C                     l3250 624C                     l3242 621C  
                   l3154 575C                     l3170 669E                     l3162 6676  
                   l3330 5B2E                     l3066 595A                     l3058 5934  
                   l3146 5D6E                     l3138 5D40                     l3402 6542  
                   l3410 6572                     l4050 7466                     l4042 7448  
                   l4034 7414                     l4026 73DA                     l4018 73C2  
                   l3236 6452                     l3228 642E                     l3092 62C8  
                   l3084 6290                     l3076 5A48                     l3316 64BC  
                   l3308 646A                     l3500 6ACE                     l3260 6278  
                   l3252 6252                     l3244 622E                     l3156 5778  
                   l3180 66CC                     l3172 66A6                     l3164 6684  
                   l3148 5D7E                     l3324 5BB6                     l3404 6552  
                   l3420 674C                     l3340 683A                     l2460 5682  
                   l2532 5690                     l4052 746A                     l4044 7458  
                   l4028 73E8                     l4036 742E                     l4060 74AC  
                   l3094 62DE                     l3086 629E                     l3078 5A52  
                   l3270 5990                     l3262 5D86                     l3318 64D0  
                   l3510 6B16                     l3502 6ADA                     l3254 6268  
                   l3246 6236                     l3190 6706                     l3182 66D4  
                   l3174 66AA                     l3166 668C                     l3326 5BF2  
                   l3406 6562                     l3430 679C                     l3422 675C  
                   l3350 6870                     l3342 683E                     l3334 6818  
                   l2470 56AA                     l2462 56A0                     l4062 74BC  
                   l4046 745A                     l4038 7430                     l3096 630C  
                   l3088 62B4                     l3264 5D92                     l3512 6B26  
                   l3504 6AEA                     l3256 6270                     l3248 623E  
                   l3280 6190                     l3272 6136                     l3192 6708  
                   l3184 66E2                     l3176 66B2                     l3168 6690  
                   l3600 69A4                     l3520 798C                     l3432 67AC  
                   l3424 676C                     l3416 6738                     l4160 727A  
                   l3360 68B2                     l3352 6886                     l3344 684C  
                   l3336 681C                     l2472 56AC                     l2464 56A4  
                   l4064 74BE                     l4048 745E                     l3290 6398  
                   l3282 6316                     l2810 74F8                     l3266 5DAE  
                   l3514 6B32                     l3506 6AFA                     l3258 6272  
                   l3274 6154                     l3442 56CA                     l3194 670E  
                   l3186 66E8                     l3178 66C4                     l3610 6A2C  
                   l3602 69D2                     l3530 79F2                     l3522 7998  
                   l4162 67D0                     l3426 677C                     l3418 673C  
                   l3362 68D0                     l3354 688E                     l3370 68F2  
                   l3346 685C                     l3338 682A                     l2474 56AE  
                   l2466 56A6                     l2458 567E                     l4058 7472  
                   l3284 6332                     l2820 7590                     l2812 7518  
                   l3268 5DB2                     l1668 56B6                     l3508 6B0A  
                   l3516 6B3E                     l3276 6170                     l3444 56D0  
                   l3700 6C20                     l3188 66FE                     l3196 6714  
                   l3612 6A2C                     l3604 69D8                     l3620 5D1A  
                   l3380 607A                     l2900 6E0A                     l3540 7AC2  
                   l3532 7A32                     l3524 79BC                     l4164 6586  
                   l3428 678C                     l3436 67BC                     l3460 5F2C  
                   l3372 6902                     l3364 68E0                     l3356 689A  
                   l3348 6860                     l2476 56B0                     l2468 56A8  
                   l3294 63A2                     l3286 6374                     l2830 762A  
                   l2822 75B2                     l2814 753A                     l2806 74CA  
                   l3470 61CE                     l3278 6178                     l3446 56DC  
                   l3702 6C32                     l3198 6724                     l3606 6A06  
                   l3622 5D20                     l3614 5CE2                     l3390 60B6  
                   l3382 6082                     l3550 7BCC                     l3542 7B12  
                   l3534 7A38                     l3526 79D0                     l3518 7966  
                   l3462 5F2E                     l3454 5EEA                     l3630 5784  
                   l3374 6912                     l3366 68E2                     l3358 68A8  
                   l4158 7486                     l3288 6386                     l2840 76BE  
                   l2832 7646                     l2824 75CE                     l2816 7556  
                   l2808 74E6                     l3472 61E0                     l3480 6200  
                   l3464 61A0                     l3800 6FA4                     l3704 6C34  
                   l3608 6A20                     l3624 5D28                     l3616 5CFC  
                   l3392 60BC                     l3384 608A                     l3560 7BFE  
                   l3552 7BD8                     l3544 7B46                     l3536 7A58  
                   l3528 79D2                     l3456 5F1C                     l3448 5EE6  
                   l3720 7082                     l3368 68EC                     l3632 57A8  
                   l2842 76D8                     l2834 7660                     l2826 75E8  
                   l2818 7570                     l2930 5C58                     l3298 5C92  
                   l3490 6A82                     l3482 6A32                     l3474 61F2  
                   l3466 61A8                     l3810 6FE0                     l3802 6FB0  
                   l3714 6C4E                     l3706 6C44                     l3650 6B8C  
                   l3634 6B4C                     l3618 5D04                     l3386 6098  
                   l3378 6068                     l2850 7718                     l2922 6EC6  
                   l2914 6E7E                     l2906 6E36                     l3570 7C80  
                   l3562 7C14                     l3554 7BEC                     l3546 7B6A  
                   l3538 7ABC                     l3394 650E                     l3458 5F26  
                   l3730 70D8                     l3722 70A6                     l2844 76F8  
                   l2836 7680                     l2828 7608                     l2940 5C7A  
                   l3492 6A92                     l3484 6A46                     l3476 61F8  
                   l3468 61C0                     l3820 701C                     l3812 6FEC  
                   l3804 6FB4                     l3716 6C60                     l3708 6C4A  
                   l3660 6BA8                     l3652 6B92                     l3644 6B68  
                   l3636 6B5E                     l3388 60AE                     l2860 77A4  
                   l2852 7734                     l2924 6EE2                     l2916 6E9A  
                   l2908 6E52                     l3580 7D2C                     l3572 7C9C  
                   l3564 7C1A                     l3556 7BF2                     l3548 7B9A  
                   l3396 6512                     l3740 7124                     l3732 70EC  
                   l3724 70B8                     l3628 5A70                     l3900 60FC  
                   l2838 76A2                     l2950 5B0C                     l2846 5820  
                   l2942 5C7C                     l3494 6A96                     l3486 6A52  
                   l3478 61FE                     l3830 7040                     l3822 7028  
                   l3814 6FF0                     l3806 6FC8                     l3718 6C62  
                   l3662 6BAA                     l3646 6B7A                     l3638 6B64  
                   l3590 6924                     l2870 782E                     l2862 77B6  
                   l2854 7746                     l3582 7D32                     l3574 7CA8  
                   l3566 7C4A                     l3558 7BF8                     l3398 6522  
                   l3750 71FC                     l3742 712A                     l3734 70F2  
                   l3910 5748                     l3902 6110                     l2848 57F6  
                   l2944 5C8C                     l2936 5C5C                     l2928 5C44  
                   l3496 6AAE                     l3488 6A72                     l3832 7054  
                   l3824 702C                     l3816 7004                     l3808 6FD4  
                   l3840 6010                     l3680 6BEE                     l3672 6BC4  
                   l3664 6BBA                     l3648 6B7C                     l3592 6936  
                   l2880 78CA                     l2872 7852                     l2864 77DA  
                   l2856 7766                     l2960 584A                     l2952 59C6  
                   l3584 7D52                     l3576 7CC8                     l3568 7C7A  
                   l3752 7238                     l3744 716E                     l3736 7106  
                   l3728 70D0                     l3920 6C84                     l3912 5750  
                   l3904 611E                     l2946 5AEC                     l2938 5C74  
                   l2970 5E8C                     l3498 6ABE                     l3834 7060  
                   l3826 7030                     l3818 7010                     l3850 6054  
                   l3842 6014                     l3690 6C06                     l3674 6BD6  
                   l3666 6BC0                     l3658 6B96                     l3594 694A  
                   l2882 78F0                     l2874 7878                     l2866 7800  
                   l2858 7788                     l2890 6DAA                     l2962 5874  
                   l3586 7D82                     l3578 7CF8                     l3754 724C  
                   l3746 71B2                     l3738 7110                     l3762 7266  
                   l3930 6D34                     l3914 5754                     l3906 573A  
                   l2964 58CC                     l2948 5B00                     l2972 5700  
                   l3836 7074                     l3828 703C                     l3780 6F14  
                   l3852 6060                     l3844 6028                     l3692 6C16  
                   l3676 6BD8                     l3596 6956                     l2884 790C  
                   l2876 7894                     l2868 781C                     l2892 6DC6  
                   l2956 59FE                     l3588 7DB6                     l3756 7256  
                   l3748 71F6                     l3764 72A0                     l3772 57CE  
                   l3860 5BFC                     l3940 6D84                     l3932 6D5E  
                   l3924 6CA4                     l3916 5758                     l3908 5744  
                   l2982 5FC4                     l2974 5FA0                     l2966 58D8  
                   l3790 6F60                     l3782 6F28                     l3846 6034  
                   l3838 6004                     l3694 6C1C                     l3686 6BF2  
                   l3678 6BE8                     l3598 6976                     l2886 791E  
                   l2878 78A6                     l3766 72A4                     l3758 725E  
                   l3774 57DE                     l3862 5C38                     l3942 6D88  
                   l3926 6CF0                     l3918 6C74                     l3870 661E  
                   l3854 5AAE                     l3950 72AA                     l2992 5FE2  
                   l2984 5FC8                     l2976 5FAC                     l2968 58DC  
                   l3792 6F64                     l3784 6F34                     l3848 6048  
                   l3688 6C04                     l2888 7942                     l3776 57EE  
                   l3864 5C3A                     l3944 6DA0                     l3928 6D16  
                   l3936 6D66                     l3856 595E                     l3880 6664  
                   l3872 662A                     l3960 72BE                     l3952 72AE  
                   l2978 5FB0                     l3794 6F78                     l3786 6F48  
                   l3778 6F14                     l2898 6DEE                     l3866 5C3E  
                   l3938 6D7E                     l3858 598A                     l3946 5686  
                   l3882 666A                     l3874 6644                     l3890 56EC  
                   l3970 72E2                     l3962 72C2                     l3954 72B2  
                   l2988 5FDC                     l2996 5FE8                     l3796 6F84  
                   l3788 6F54                     l3876 6652                     l3868 65BE  
                   l3892 56F0                     l3884 56E4                     l3972 72E6  
                   l3964 72C6                     l3956 72B6                     l3948 72A6  
                   l2998 5FEC                     l3798 6F98                     l3878 665E  
                   l3886 56E6                     l3894 60CC                     l3990 7338  
                   l3974 72F6                     l3966 72CA                     l3958 72BA  
                   l3888 56EA                     l3896 60DA                     l3992 7346  
                   l3984 7306                     l3976 72FA                     l3968 72D6  
                   l3898 60EE                     l3994 7356                     l3986 732C  
                   l3978 7302                     l3996 7358                     l3988 7330  
                   l3998 735C                     STR_1 7E56                     STR_2 7E3D  
                   STR_3 7E82                     STR_4 7E6E                     STR_5 7E24  
                   STR_6 7F0B                     STR_7 7FD4                     STR_8 7F99  
                   STR_9 7FA5                     u2004 76EA                     u2100 781C  
                   u2020 7734                     u2005 76E6                     u2101 7818  
                   u2021 7730                     u2014 770A                     u2110 782E  
                   u2030 7746                     u2015 7706                     u2111 782A  
                   u2031 7742                     u3000 6ABE                     u3001 6ABA  
                   u3010 6ACE                     u3011 6ACA                     u3020 6AFA  
                   u3100 6BBA                     u2204 7934                     u2140 7894  
                   u2124 7844                     u2060 77A4                     u2044 7758  
                   u2300 6EE2                     u2220 6DC6                     u3021 6AF6  
                   u3101 6BB6                     u2205 7930                     u2141 7890  
                   u2125 7840                     u2061 77A0                     u2045 7754  
                   u2301 6EDE                     u2221 6DC2                     u3030 6B0A  
                   u3110 6BE8                     u2214 7958                     u2150 78A6  
                   u2134 7868                     u2070 77B6                     u2054 7778  
                   u3031 6B06                     u3111 6BE4                     u2215 7954  
                   u2151 78A2                     u2135 7864                     u2071 77B2  
                   u2055 7774                     u2400 6002                     u2320 5C8C  
                   u3120 6C16                     u2240 6E0A                     u3040 7A32  
                   u3200 611E                     u2401 5FFE                     u2321 5C88  
                   u3121 6C12                     u2241 6E06                     u3041 7A2E  
                   u3201 611A                     u3130 6C44                     u3050 6936  
                   u2314 6EF8                     u2234 6DD8                     u2330 59FA  
                   u2410 5B80                     u3210 6CA0                     u3131 6C40  
                   u3051 6932                     u2315 6EF4                     u2235 6DD4  
                   u2331 59F4                     u2411 5B7C                     u3211 6C9C  
                   u2500 629E                     u3140 6C72                     u3060 5CFC  
                   u2180 790C                     u2164 78BC                     u2084 77CC  
                   u2260 6E52                     u2340 59FC                     u2420 5B9C  
                   u3300 7346                     u2501 629A                     u3141 6C6E  
                   u3061 5CF8                     u2181 7908                     u2165 78B8  
                   u2085 77C8                     u2261 6E4E                     u2421 5B98  
                   u3301 7342                     u2510 62AC                     u3070 5D14  
                   u2190 791E                     u2174 78E0                     u2094 77F0  
                   u2254 6E20                     u2350 5A32                     u2430 58BA  
                   u3150 70B8                     u3230 6CF0                     u3310 7356  
                   u2511 62A8                     u3071 5D10                     u2191 791A  
                   u2175 78DC                     u2095 77EC                     u2255 6E1C  
                   u2351 5A2C                     u2431 58B6                     u3151 70B4  
                   u3231 6CEC                     u3311 7352                     u2520 62DE  
                   u2280 6E9A                     u2360 5A34                     u2440 5E44  
                   u2600 5F9A                     u3160 70CC                     u3224 6CC0  
                   u3400 73FA                     u3320 736A                     u2521 62DA  
                   u3081 6B56                     u2281 6E96                     u2441 5E40  
                   u2601 5F96                     u3161 70C8                     u3225 6CBA  
                   u3401 73F6                     u3321 7366                     u2530 62F0  
                   u2370 58FA                     u3090 6B8C                     u2274 6E68  
                   u2450 5E68                     u2610 5D68                     u3170 57EE  
                   u3250 6D34                     u1490 569E                     u3410 7414  
                   u3330 737A                     u2531 62EC                     u2371 58F6  
                   u3091 6B88                     u2275 6E64                     u2451 5E64  
                   u2611 5D64                     u3171 57EA                     u3251 6D30  
                   u1491 569A                     u3411 7410                     u3331 7376  
                   u2700 63D8                     u2380 5FC0                     u2540 62FE  
                   u1900 75CE                     u1820 74E6                     u2460 5E78  
                   u2620 5D7E                     u3244 6D08                     u3180 60DA  
                   u3420 742A                     u3340 738E                     u2701 63D4  
                   u2381 5FBC                     u2541 62FA                     u1901 75CA  
                   u1821 74E2                     u2461 5E74                     u2621 5D7A  
                   u3245 6D02                     u3181 60D6                     u3421 7424  
                   u3341 738A                     u2710 63F2                     u2390 5FD8  
                   u2550 630C                     u1910 75E8                     u1830 74F8  
                   u2630 6684                     u2294 6EB0                     u2470 5948  
                   u3270 6D7E                     u3190 60FC                     u3430 742C  
                   u3350 739E                     u2711 63EE                     u2391 5FD4  
                   u2551 6308                     u1911 75E4                     u1831 74F4  
                   u2631 6680                     u2295 6EAC                     u2471 5944  
                   u3271 6D7A                     u3191 60F8                     u3351 739A  
                   u2720 6410                     u2800 6398                     u2480 5A48  
                   u2640 669E                     u2560 5F52                     u3280 6DA0  
                   u3264 6D50                     u3440 7440                     u3360 73B2  
                   u2721 640C                     u2801 6394                     u2481 5A44  
                   u2641 669A                     u2561 5F4E                     u3281 6D9C  
                   u3265 6D4A                     u3441 743C                     u3361 73AE  
                   u2730 6426                     u2490 5A64                     u2810 5CE0  
                   u2650 66C4                     u2570 5F6A                     u3450 7458  
                   u3370 73C2                     u3290 732C                     u2731 6422  
                   u2491 5A60                     u2811 5CDC                     u2651 66C0  
                   u2571 5F64                     u3451 7454                     u3371 73BE  
                   u3291 7328                     u2740 644A                     u1940 7646  
                   u1924 75FA                     u1860 7556                     u1844 750A  
                   u2820 646A                     u2660 66E2                     u2580 5F6C  
                   u2900 6902                     u3460 74BC                     u3380 73D6  
                   u2741 6446                     u1941 7642                     u1925 75F6  
                   u1861 7552                     u1845 7506                     u2821 6466  
                   u2661 66DE                     u2901 68FE                     u3461 74B8  
                   u3381 73D2                     u1950 7660                     u1934 761A  
                   u1870 7570                     u1854 752A                     u2830 64A4  
                   u2750 622E                     u2670 66FE                     u2910 607A  
                   u2590 5F86                     u3390 73E8                     u1951 765C  
                   u1935 7616                     u1871 756C                     u1855 7526  
                   u2831 64A0                     u2751 622A                     u2671 66FA  
                   u2911 6076                     u2591 5F82                     u3391 73E4  
                   u2840 64DE                     u2760 624C                     u2680 6724  
                   u2920 6098                     u2841 64DA                     u2761 6248  
                   u2681 6720                     u2921 6094                     u2690 63BE  
                   u2770 6268                     u2930 60AE                     u2850 682A  
                   u2691 63BA                     u2771 6264                     u2931 60AA  
                   u2851 6826                     u1980 76BE                     u1964 7672  
                   u1884 7582                     u2780 5DDA                     u2940 5F1C  
                   u2860 684C                     u1981 76BA                     u1965 766E  
                   u1885 757E                     u2781 5DD6                     u2941 5F18  
                   u2861 6848                     u2790 6386                     u1990 76D8  
                   u1974 7692                     u1894 75A2                     u2950 5F3E  
                   u2870 6886                     u2791 6382                     u1991 76D4  
                   u1975 768E                     u1895 759E                     u2951 5F3A  
                   u2871 6882                     u2960 61E0                     u2880 68A8  
                   u2961 61DC                     u2881 68A4                     u2970 61F2  
                   u2890 68D0                     u2971 61EE                     u2891 68CC  
                   u2980 6212                     u2981 620E                     u2990 6A92  
                   u2991 6A8E                     _data 7966                     _main 72A6  
                   _freq 0079                     _keys 004A                     _nome 0067  
                   _tela 0053         ??_PulseClockData 0007                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9            ?_i2c_read_bit 0001  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        pushNibble@value 000C         serial_rx@timeout 0007             ___param_bank 000000  
 __end_of_pulseEnablePin 5B2E           pwmSet@porcento 0023      __end_of_Finalizando 6068  
                  ??_IMC 0032          __end_of_bcd2dec 5B70                    ?_data 0001  
        __end_of___aldiv 6924             main@contador 0042                    ?_main 0001  
        __end_of_adcInit 5C44          __end_of_adcRead 5D32          __end_of___awdiv 6736  
                  STR_10 7FDF                    STR_11 7FB1                    STR_20 7FF9  
                  STR_12 7FEA                    STR_21 7FF8                    STR_13 7FBD  
                  STR_22 7FFB                    STR_14 7FC9                    STR_30 7F5C  
                  STR_23 7FF7                    STR_15 7F1D                    STR_31 7F2C  
                  STR_32 7F7C                    STR_16 7F1C                    STR_24 7E94  
                  STR_25 7FF4                    STR_17 7EE9                    STR_33 7EA5  
                  STR_26 7FF5                    STR_18 7F4C                    STR_34 7ED8  
                  STR_27 7FF7                    STR_19 7F3C                    STR_35 7E04  
                  STR_28 7F6C                    STR_36 7EC7          __end_of___awmod 645C  
                  STR_29 7EFA                    STR_37 7EB6                    STR_38 7F8B  
                  _T0CON 000FD5          ___awdiv@divisor 0015                    _T2CON 000FCA  
        __end_of___lwdiv 6288          __end_of___lwmod 60CC          ___awdiv@counter 0017  
                  _RCREG 000FAE                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _SPBRG 000FAF                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
        __end_of_charKey 7E04                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD          __end_of_lcdChar 573A          __end_of_lcdInit 6672  
                  _Limpa 5990           ??_i2cWriteByte 000A                    _Telas 7082  
    __end_of_i2cReadByte 5D86                    data@i 0030                    _crono 0056  
        __end_of_rgbInit 5AEC                    _radio 7DEA          __end_of_pinMode 7966  
                  _valor 7DDA                    main@i 0044          __end_of_soWrite 5C92  
                  tablat 000FF5        __end_of_I2C_delay 5678          __end_of_pwmInit 56FE  
        __end_of_musicas 65BE            _i2c_write_bit 5E32                    plusw1 000FE3  
                  plusw2 000FDB                    status 000FD8           ??_i2c_read_bit 0007  
             _Cronometro 6924         __end_of_Bemvindo 7082         __end_of_LeSerial 63AC  
           pushNibble@rs 000A     __end_of_digitalWrite 7718          __initialization 5DDC  
        ?_pulseEnablePin 0001             __end_of_data 7DC4             __end_of_main 74CA  
        i2cWriteByte@bit 000B         __end_of_i2c_stop 58CC          LogoUnifei@F2429 0080  
       serial_tx_str@val 0002                   ??_data 002B                   ??_main 0040  
             Telas@valor 0038            __activetblptr 000002     __size_of_digitalRead 016A  
             _LogoUnifei 6B4C                   IMC@imc 0033                   IMC@aux 0032  
          LeInfo@palavra 0013           Temperatura@aux 0032                   ?_Limpa 0001  
                 ?_Telas 0001                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR2L 000FBB         ___awdiv@dividend 0013              rgbColor@led 0007  
           atraso_ms@num 0001           ?_i2c_write_bit 0001                   _INTCON 000FF2  
   __size_of_lcdPosition 003A       __size_of_i2c_start 0046              _Finalizando 6004  
                 _LeInfo 61A0            Telas@anterior 0037              LogoUnifei@i 003F  
           ?_serial_init 0001                ??_bcd2dec 0023                ??___aldiv 0009  
                 ___wmul 575C                ??_adcInit 0007                ??_adcRead 0003  
              ??___awdiv 0017                ??___awmod 0029                   _change 007B  
              ??___lwdiv 0005                ??___lwmod 000C                   _kpInit 595E  
                 _kpRead 5686         __end_of_rgbColor 650C         __end_of_read_SDA 5A36  
       __end_of_read_SCL 59FE            ??_Temperatura 0032                   _radios 6736  
                 _buzzer 56CA                   clear_0 5E22                   _soInit 5A70  
       ___awdiv@quotient 0019                   _semana 7DC5          ___awmod@divisor 0027  
              ??_lcdChar 000E                   isa$std 000001                   _tempos 0055  
                 _musica 007A              _i2cReadByte 5D32                ??_lcdInit 000F  
                 _pwmSet 6134          ___awmod@counter 0029                   _volume 5EE4  
                 _turnOn 60CC                ??_rgbInit 0007             __pdataCOMRAM 0077  
              ??_pinMode 0005            main@processos 0043             __mediumconst 7DC4  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_soWrite 0009                ??_pwmInit 0011         __end_of_pushByte 5EE4  
              ??_musicas 0015               __accesstop 0080  __end_of__initialization 5E28  
            ?_Cronometro 0001            ___rparam_used 000001            pushByte@value 000D  
            pinMode@type 0003            __end_of_Limpa 59C6     __end_of_i2cWriteByte 5FA0  
         __pcstackCOMRAM 0001            __end_of_Telas 72A6             __pidataBANK0 58FC  
          __end_of_radio 7DFA            __end_of_valor 7DEA    __end_of_serial_tx_str 5CE2  
       i2cWriteByte@byte 0009       __size_of_delayMili 0030       __size_of_clear_SDA 002A  
     __size_of_clear_SCL 002A        __end_of_i2c_start 5BB6     __end_of_i2c_read_bit 595E  
            ?_LogoUnifei 0001      __end_of_Temperatura 57F6                  ??_Limpa 0013  
              ?_Bemvindo 0001       __size_of_lcdString 0056                  ??_Telas 0035  
              ?_LeSerial 002B          ??_i2c_write_bit 0007       __size_of_atraso_ms 0064  
              ?_i2c_stop 0001    __size_of_digitalWrite 024E               _dsReadData 5BB6  
       dsReadData@result 0011                  ?_LeInfo 0013               _delayMicro 5674  
             _lcdCommand 56FE                  ?___wmul 001B                  ?_kpInit 0001  
                ?_kpRead 0001                  _CCP2CON 000FBA                  ?_radios 0001  
                ?_buzzer 0026                  ?_soInit 0001               _kpDebounce 6C74  
                ?_pwmSet 0001       __size_of_serial_rx 008E       __size_of_serial_tx 0016  
                ?_volume 0001                  ?_turnOn 0007       Cronometro@anterior 002B  
     __size_of_timerInit 0008       __size_of_timerWait 0010                  LeInfo@i 0015  
    __size_of_Cronometro 010E     i2cReadByte@send_stop 0008               ??_Bemvindo 0034  
             ??_LeSerial 002D             _digitalWrite 74CA        __end_of_delayMili 58FC  
      __end_of_clear_SDA 589E        __end_of_clear_SCL 5874                ?_rgbColor 0007  
              ?_read_SDA 0001                ?_read_SCL 0001               ??_i2c_stop 0007  
       ??_pulseEnablePin 0007          __size_of_LeInfo 0074                _I2C_delay 5676  
    __size_of_LogoUnifei 0128                  __Hparam 0000                  __Lparam 0000  
      __end_of_lcdString 5DDC          kpDebounce@tempo 0051                  _bcd2dec 5B2E  
                ___aldiv 6818                  _adcInit 5BFC                  _adcRead 5CE2  
                ___awdiv 6672                  ___awmod 63AC                ?_pushByte 000A  
        __size_of___wmul 0026                  ___lwdiv 6214                  ___lwmod 6068  
   __size_of_serial_init 0014        __end_of_atraso_ms 6004          __size_of_kpInit 0032  
        __size_of_kpRead 000A                  _charKey 7DFA              _Temperatura 57CE  
                __pcinit 5DDC          __size_of_radios 00E2                  _lcdChar 571C  
        __size_of_buzzer 001A                  __ramtop 0600          __size_of_soInit 003E  
                _lcdInit 65BE                  __ptext0 72A6                  __ptext1 60CC  
                __ptext2 5690                  __ptext3 573A                  __ptext4 567E  
                __ptext5 56A0                  __ptext6 5AAE                  __ptext7 56E4  
                __ptext8 57A8                  __ptext9 6818          __size_of_pwmSet 006C  
                _display 0050             __size_of_IMC 011A          __size_of_volume 005C  
        __size_of_turnOn 0068                  _rgbInit 5AAE                  _pinMode 7718  
       ___awmod@dividend 0025         ___aldiv@dividend 0001               delayMili@a 0001  
             delayMili@i 0004                  _soWrite 5C44                  _pwmInit 56E4  
                _musicas 650C                  _started 0052              serial_rx@to 0009  
   end_of_initialization 5E28            ?_PulseEnClock 0001                LeInfo@aux 0016  
             ??_rgbColor 0009               ??_read_SDA 0007               ??_read_SCL 0007  
                radios@n 0017            __Lmediumconst 7DC4    __size_of_i2cWriteByte 0060  
            ?_dsReadData 000E        __end_of_serial_rx 6316           digitalRead@pin 0001  
      __end_of_serial_tx 56CA            ?_pwmFrequency 000F             ?_Finalizando 0001  
            ?_delayMicro 0001            LeSerial@Atual 002F               ?_I2C_delay 0001  
      __end_of_timerInit 5686        __end_of_timerWait 56A0                _RCSTAbits 000FAB  
       ___aldiv@quotient 000B            LeSerial@tempo 002B                  postdec1 000FE5  
            ?_lcdCommand 0001                  postinc0 000FEE               ??_pushByte 000C  
  __size_of_i2c_read_bit 0032  __size_of_PulseClockData 002A            ??_digitalRead 0003  
             _timerReset 573A                  volume@i 0015              ?_kpDebounce 0001  
           ?_i2cReadByte 0008          i2c_read_bit@bit 0007               _pushNibble 5782  
             lcdString@i 0013             _i2cWriteByte 5F40            ??_lcdPosition 0013  
         ??_PulseEnClock 0007           ??_pwmFrequency 0011                _TXSTAbits 000FAC  
           ??_Cronometro 002B             _i2c_read_bit 592C           __end_of_LeInfo 6214  
         serial_tx_str@i 0006               atraso_ms@i 0003               atraso_ms@j 0005  
             atraso_ms@k 0006           adcRead@ADvalor 0003           __end_of___wmul 5782  
          __pidataCOMRAM 5679           __end_of_kpInit 5990           __end_of_kpRead 5690  
         __end_of_radios 6818           __end_of_buzzer 56E4           __end_of_soInit 5AAE  
         __end_of_semana 7DDA             ??_LogoUnifei 000F           __end_of_pwmSet 61A0  
    __size_of_dsReadData 0046           __end_of_volume 5F40           __end_of_turnOn 6134  
    __size_of_delayMicro 0002      start_initialization 5DDC      __end_of_digitalRead 6F14  
            __end_of_IMC 6B4C       __end_of_Cronometro 6A32                _i2c_start 5B70  
      __size_of_Bemvindo 016E      __size_of_lcdCommand 001E        __size_of_LeSerial 0096  
         LogoUnifei@logo 000F      __size_of_kpDebounce 0136                 ??_LeInfo 0015  
    __end_of_lcdPosition 5A70              ??_I2C_delay 0001        __size_of_i2c_stop 002E  
         adcRead@channel 0001       __end_of_LogoUnifei 6C74        kpDebounce@oldRead 0046  
      kpDebounce@newRead 0048                 ??___wmul 001F                 ??_kpInit 0007  
               ??_kpRead 0003              __pdataBANK0 0080                 ??_radios 0015  
               ??_buzzer 0028              ?_timerReset 0001                 ??_soInit 0007  
               ??_pwmSet 0021                 ??_volume 000F                 ??_turnOn 0009  
      dsReadData@address 000E              __pbssCOMRAM 0046                _data$1658 002E  
              _data$1659 0033              ?_pushNibble 000A               pinMode@pin 0001  
             ?_i2c_start 0001               buzzer@time 0026    __end_of_i2c_write_bit 5E8A  
 __size_of_serial_tx_str 0050        __size_of_rgbColor 00B0        __size_of_read_SDA 0038  
      __size_of_read_SCL 0038                _delayMili 58CC                _clear_SDA 5874  
              _clear_SCL 584A         ___lwdiv@dividend 0001     __size_of_Finalizando 0064  
               ?_bcd2dec 0021            __pmediumconst 7DC4                 ?___aldiv 0001  
               ?_adcInit 0001                 ?_adcRead 0001                 ?___awdiv 0013  
               ?___awmod 0025           _PulseClockData 57F6                 ?___lwdiv 0001  
               ?___lwmod 0008     __end_of_PulseEnClock 584A             ?_Temperatura 0001  
              _lcdString 5D86              _digitalRead 6DAA                 ?_lcdChar 0001  
      __size_of_pushByte 005A                 ?_lcdInit 0001     __end_of_pwmFrequency 57CE  
              _atraso_ms 5FA0                 ?_rgbInit 0001     __size_of_i2cReadByte 0054  
               ?_pinMode 0001           __size_of_Limpa 0036                 ?_soWrite 0007  
         __size_of_Telas 0224                 ?_pwmInit 0001                 ?_musicas 0001  
       ___lwdiv@quotient 0005                _matricula 0057              _lcdPosition 5A36  
            volume@valor 0014         pwmFrequency@freq 000F          ___aldiv@divisor 0005  
        ___aldiv@counter 0009      __size_of_timerReset 0022           ___wmul@product 001F  
           ??_dsReadData 0010             ??_delayMicro 0003               ?_delayMili 0001  
             ?_clear_SDA 0001               ?_clear_SCL 0001                 _PIR1bits 000F9E  
          ??_serial_init 0001                _serial_rx 6288                _serial_tx 56B4  
 __end_of_PulseClockData 5820      __size_of_pushNibble 0026             ??_lcdCommand 000E  
              _timerInit 567E                _timerWait 5690               ?_lcdString 000F  
           ??_kpDebounce 000A            _serial_tx_str 5C92        ___wmul@multiplier 001B  
             ?_atraso_ms 0001          lcdCommand@value 000E                main@tecla 0045  
     __end_of_dsReadData 5BFC                 _Bemvindo 6F14       __end_of_delayMicro 5676  
            ??_i2c_start 0007                 _LeSerial 6316         timerReset@ciclos 0003  
              copy_data0 5DF0                copy_data1 5E10       __end_of_lcdCommand 571C  
             pushByte@rs 000A             lcdChar@value 000E                 _i2c_stop 589E  
     __end_of_kpDebounce 6DAA                 __Hrparam 0000                 __Lrparam 0000  
             ?_serial_rx 0007               ?_serial_tx 0001          lcdPosition@line 000F  
        ?_PulseClockData 0001               ?_timerInit 0001               ?_timerWait 0001  
       __size_of_bcd2dec 0042         __size_of___aldiv 010C         __size_of_adcInit 0048  
       __size_of_adcRead 0050         __size_of___awdiv 00C4         __size_of___awmod 00B0  
         ?_serial_tx_str 0002  __size_of_pulseEnablePin 0042         __size_of___lwdiv 0074  
       __size_of___lwmod 0064      __end_of_serial_init 56B4         __size_of_lcdChar 001E  
       __size_of_lcdInit 00B4         __size_of_rgbInit 003E         __size_of_pinMode 024E  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007                 __ptext10 65BE  
               __ptext11 5782                 __ptext20 6736                 __ptext12 5686  
               __ptext21 650C                 __ptext13 595E                 __ptext30 592C  
               __ptext22 7966                 __ptext14 5A70                 __ptext31 59FE  
               __ptext23 5BB6                 __ptext15 6C74                 __ptext40 6924  
               __ptext32 59C6                 __ptext24 5F40                 __ptext16 5BFC  
               __ptext41 6672                 __ptext33 6DAA                 __ptext25 5B70  
               __ptext17 57CE                 __ptext50 6A32                 __ptext42 6B4C  
               __ptext34 584A                 __ptext26 5D32                 __ptext18 7082  
               __ptext51 5C92                 __ptext43 6004                 __ptext35 7718  
               __ptext27 5E32                 __ptext19 5EE4                 __ptext60 5C44  
               __ptext52 56B4                 __ptext44 56CA                 __ptext36 5676  
               __ptext28 589E                 __ptext61 5820                 __ptext53 645C  
               __ptext45 6134                 __ptext37 5B2E                 __ptext29 5874  
               __ptext70 63AC                 __ptext62 57F6                 __ptext54 5D86  
               __ptext46 575C                 __ptext38 6068                 __ptext63 5AEC  
               __ptext55 571C                 __ptext47 6214                 __ptext39 5CE2  
               __ptext64 74CA                 __ptext56 5990                 __ptext48 6F14  
               __ptext65 5674                 __ptext57 5A36                 __ptext49 61A0  
               __ptext66 58CC                 __ptext58 56FE                 __ptext67 6316  
               __ptext59 5E8A                 __ptext68 6288                 __ptext69 5FA0  
       __size_of_soWrite 004E         __size_of_pwmInit 001A         __size_of_musicas 00B2  
               _rgbColor 645C                 _read_SDA 59FE                 _read_SCL 59C6  
          __size_of_data 045E            __size_of_main 0224              ??_delayMili 0003  
            ??_clear_SDA 0007              ??_clear_SCL 0007    __size_of_PulseEnClock 002A  
            delayMicro@a 0001              LeSerial@tmp 0030                 isa$xinst 000000  
           soWrite@value 0007    __size_of_pwmFrequency 0026                 _pushByte 5E8A  
              pwmSet@val 0024              ??_lcdString 0011             serial_tx@val 0001  
           ??_timerReset 0003     __size_of_Temperatura 0028              ??_atraso_ms 0003  
        timerReset@tempo 0001             ??_pushNibble 000C           lcdPosition@col 0011  
          ?_digitalWrite 0001             _PulseEnClock 5820        digitalWrite@value 0003  
       ___lwmod@dividend 0008       __end_of_timerReset 575C             _pwmFrequency 57A8  
              turnOn@led 0007                 soWrite@i 0009              ??_serial_rx 0009  
            ??_serial_tx 0001              _serial_init 56A0             bcd2dec@value 0021  
               musicas@n 0017          ??_serial_tx_str 0004              ??_timerInit 0001  
            ??_timerWait 0001       __end_of_pushNibble 57A8             ?_digitalRead 0001  
            _temperatura 0077          ___lwmod@divisor 000A              kpDebounce@i 000D  
        ___lwmod@counter 000C           ??_digitalWrite 0005             ___aldiv@sign 000A  
           ?_lcdPosition 000F          digitalWrite@pin 0001            ??_Finalizando 0028  
